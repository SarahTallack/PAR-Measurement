
AS7341_Test.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000188  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00005b98  08000190  08000190  00010190  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000224  08005d28  08005d28  00015d28  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08005f4c  08005f4c  00020068  2**0
                  CONTENTS
  4 .ARM          00000008  08005f4c  08005f4c  00015f4c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  08005f54  08005f54  00020068  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08005f54  08005f54  00015f54  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08005f58  08005f58  00015f58  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000068  20000000  08005f5c  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          000002e4  20000068  08005fc4  00020068  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000034c  08005fc4  0002034c  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00020068  2**0
                  CONTENTS, READONLY
 12 .comment      00000043  00000000  00000000  00020098  2**0
                  CONTENTS, READONLY
 13 .debug_info   00013815  00000000  00000000  000200db  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 00002fa4  00000000  00000000  000338f0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00001320  00000000  00000000  00036898  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 00000ec4  00000000  00000000  00037bb8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  00029efe  00000000  00000000  00038a7c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   00019354  00000000  00000000  0006297a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    000f8897  00000000  00000000  0007bcce  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_frame  0000563c  00000000  00000000  00174568  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 0000008d  00000000  00000000  00179ba4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000190 <__do_global_dtors_aux>:
 8000190:	b510      	push	{r4, lr}
 8000192:	4c05      	ldr	r4, [pc, #20]	; (80001a8 <__do_global_dtors_aux+0x18>)
 8000194:	7823      	ldrb	r3, [r4, #0]
 8000196:	b933      	cbnz	r3, 80001a6 <__do_global_dtors_aux+0x16>
 8000198:	4b04      	ldr	r3, [pc, #16]	; (80001ac <__do_global_dtors_aux+0x1c>)
 800019a:	b113      	cbz	r3, 80001a2 <__do_global_dtors_aux+0x12>
 800019c:	4804      	ldr	r0, [pc, #16]	; (80001b0 <__do_global_dtors_aux+0x20>)
 800019e:	f3af 8000 	nop.w
 80001a2:	2301      	movs	r3, #1
 80001a4:	7023      	strb	r3, [r4, #0]
 80001a6:	bd10      	pop	{r4, pc}
 80001a8:	20000068 	.word	0x20000068
 80001ac:	00000000 	.word	0x00000000
 80001b0:	08005d10 	.word	0x08005d10

080001b4 <frame_dummy>:
 80001b4:	b508      	push	{r3, lr}
 80001b6:	4b03      	ldr	r3, [pc, #12]	; (80001c4 <frame_dummy+0x10>)
 80001b8:	b11b      	cbz	r3, 80001c2 <frame_dummy+0xe>
 80001ba:	4903      	ldr	r1, [pc, #12]	; (80001c8 <frame_dummy+0x14>)
 80001bc:	4803      	ldr	r0, [pc, #12]	; (80001cc <frame_dummy+0x18>)
 80001be:	f3af 8000 	nop.w
 80001c2:	bd08      	pop	{r3, pc}
 80001c4:	00000000 	.word	0x00000000
 80001c8:	2000006c 	.word	0x2000006c
 80001cc:	08005d10 	.word	0x08005d10

080001d0 <memchr>:
 80001d0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80001d4:	2a10      	cmp	r2, #16
 80001d6:	db2b      	blt.n	8000230 <memchr+0x60>
 80001d8:	f010 0f07 	tst.w	r0, #7
 80001dc:	d008      	beq.n	80001f0 <memchr+0x20>
 80001de:	f810 3b01 	ldrb.w	r3, [r0], #1
 80001e2:	3a01      	subs	r2, #1
 80001e4:	428b      	cmp	r3, r1
 80001e6:	d02d      	beq.n	8000244 <memchr+0x74>
 80001e8:	f010 0f07 	tst.w	r0, #7
 80001ec:	b342      	cbz	r2, 8000240 <memchr+0x70>
 80001ee:	d1f6      	bne.n	80001de <memchr+0xe>
 80001f0:	b4f0      	push	{r4, r5, r6, r7}
 80001f2:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 80001f6:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 80001fa:	f022 0407 	bic.w	r4, r2, #7
 80001fe:	f07f 0700 	mvns.w	r7, #0
 8000202:	2300      	movs	r3, #0
 8000204:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000208:	3c08      	subs	r4, #8
 800020a:	ea85 0501 	eor.w	r5, r5, r1
 800020e:	ea86 0601 	eor.w	r6, r6, r1
 8000212:	fa85 f547 	uadd8	r5, r5, r7
 8000216:	faa3 f587 	sel	r5, r3, r7
 800021a:	fa86 f647 	uadd8	r6, r6, r7
 800021e:	faa5 f687 	sel	r6, r5, r7
 8000222:	b98e      	cbnz	r6, 8000248 <memchr+0x78>
 8000224:	d1ee      	bne.n	8000204 <memchr+0x34>
 8000226:	bcf0      	pop	{r4, r5, r6, r7}
 8000228:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800022c:	f002 0207 	and.w	r2, r2, #7
 8000230:	b132      	cbz	r2, 8000240 <memchr+0x70>
 8000232:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000236:	3a01      	subs	r2, #1
 8000238:	ea83 0301 	eor.w	r3, r3, r1
 800023c:	b113      	cbz	r3, 8000244 <memchr+0x74>
 800023e:	d1f8      	bne.n	8000232 <memchr+0x62>
 8000240:	2000      	movs	r0, #0
 8000242:	4770      	bx	lr
 8000244:	3801      	subs	r0, #1
 8000246:	4770      	bx	lr
 8000248:	2d00      	cmp	r5, #0
 800024a:	bf06      	itte	eq
 800024c:	4635      	moveq	r5, r6
 800024e:	3803      	subeq	r0, #3
 8000250:	3807      	subne	r0, #7
 8000252:	f015 0f01 	tst.w	r5, #1
 8000256:	d107      	bne.n	8000268 <memchr+0x98>
 8000258:	3001      	adds	r0, #1
 800025a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800025e:	bf02      	ittt	eq
 8000260:	3001      	addeq	r0, #1
 8000262:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000266:	3001      	addeq	r0, #1
 8000268:	bcf0      	pop	{r4, r5, r6, r7}
 800026a:	3801      	subs	r0, #1
 800026c:	4770      	bx	lr
 800026e:	bf00      	nop

08000270 <__aeabi_uldivmod>:
 8000270:	b953      	cbnz	r3, 8000288 <__aeabi_uldivmod+0x18>
 8000272:	b94a      	cbnz	r2, 8000288 <__aeabi_uldivmod+0x18>
 8000274:	2900      	cmp	r1, #0
 8000276:	bf08      	it	eq
 8000278:	2800      	cmpeq	r0, #0
 800027a:	bf1c      	itt	ne
 800027c:	f04f 31ff 	movne.w	r1, #4294967295
 8000280:	f04f 30ff 	movne.w	r0, #4294967295
 8000284:	f000 b970 	b.w	8000568 <__aeabi_idiv0>
 8000288:	f1ad 0c08 	sub.w	ip, sp, #8
 800028c:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8000290:	f000 f806 	bl	80002a0 <__udivmoddi4>
 8000294:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000298:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 800029c:	b004      	add	sp, #16
 800029e:	4770      	bx	lr

080002a0 <__udivmoddi4>:
 80002a0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80002a4:	9e08      	ldr	r6, [sp, #32]
 80002a6:	460d      	mov	r5, r1
 80002a8:	4604      	mov	r4, r0
 80002aa:	460f      	mov	r7, r1
 80002ac:	2b00      	cmp	r3, #0
 80002ae:	d14a      	bne.n	8000346 <__udivmoddi4+0xa6>
 80002b0:	428a      	cmp	r2, r1
 80002b2:	4694      	mov	ip, r2
 80002b4:	d965      	bls.n	8000382 <__udivmoddi4+0xe2>
 80002b6:	fab2 f382 	clz	r3, r2
 80002ba:	b143      	cbz	r3, 80002ce <__udivmoddi4+0x2e>
 80002bc:	fa02 fc03 	lsl.w	ip, r2, r3
 80002c0:	f1c3 0220 	rsb	r2, r3, #32
 80002c4:	409f      	lsls	r7, r3
 80002c6:	fa20 f202 	lsr.w	r2, r0, r2
 80002ca:	4317      	orrs	r7, r2
 80002cc:	409c      	lsls	r4, r3
 80002ce:	ea4f 4e1c 	mov.w	lr, ip, lsr #16
 80002d2:	fa1f f58c 	uxth.w	r5, ip
 80002d6:	fbb7 f1fe 	udiv	r1, r7, lr
 80002da:	0c22      	lsrs	r2, r4, #16
 80002dc:	fb0e 7711 	mls	r7, lr, r1, r7
 80002e0:	ea42 4207 	orr.w	r2, r2, r7, lsl #16
 80002e4:	fb01 f005 	mul.w	r0, r1, r5
 80002e8:	4290      	cmp	r0, r2
 80002ea:	d90a      	bls.n	8000302 <__udivmoddi4+0x62>
 80002ec:	eb1c 0202 	adds.w	r2, ip, r2
 80002f0:	f101 37ff 	add.w	r7, r1, #4294967295
 80002f4:	f080 811c 	bcs.w	8000530 <__udivmoddi4+0x290>
 80002f8:	4290      	cmp	r0, r2
 80002fa:	f240 8119 	bls.w	8000530 <__udivmoddi4+0x290>
 80002fe:	3902      	subs	r1, #2
 8000300:	4462      	add	r2, ip
 8000302:	1a12      	subs	r2, r2, r0
 8000304:	b2a4      	uxth	r4, r4
 8000306:	fbb2 f0fe 	udiv	r0, r2, lr
 800030a:	fb0e 2210 	mls	r2, lr, r0, r2
 800030e:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 8000312:	fb00 f505 	mul.w	r5, r0, r5
 8000316:	42a5      	cmp	r5, r4
 8000318:	d90a      	bls.n	8000330 <__udivmoddi4+0x90>
 800031a:	eb1c 0404 	adds.w	r4, ip, r4
 800031e:	f100 32ff 	add.w	r2, r0, #4294967295
 8000322:	f080 8107 	bcs.w	8000534 <__udivmoddi4+0x294>
 8000326:	42a5      	cmp	r5, r4
 8000328:	f240 8104 	bls.w	8000534 <__udivmoddi4+0x294>
 800032c:	4464      	add	r4, ip
 800032e:	3802      	subs	r0, #2
 8000330:	ea40 4001 	orr.w	r0, r0, r1, lsl #16
 8000334:	1b64      	subs	r4, r4, r5
 8000336:	2100      	movs	r1, #0
 8000338:	b11e      	cbz	r6, 8000342 <__udivmoddi4+0xa2>
 800033a:	40dc      	lsrs	r4, r3
 800033c:	2300      	movs	r3, #0
 800033e:	e9c6 4300 	strd	r4, r3, [r6]
 8000342:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000346:	428b      	cmp	r3, r1
 8000348:	d908      	bls.n	800035c <__udivmoddi4+0xbc>
 800034a:	2e00      	cmp	r6, #0
 800034c:	f000 80ed 	beq.w	800052a <__udivmoddi4+0x28a>
 8000350:	2100      	movs	r1, #0
 8000352:	e9c6 0500 	strd	r0, r5, [r6]
 8000356:	4608      	mov	r0, r1
 8000358:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800035c:	fab3 f183 	clz	r1, r3
 8000360:	2900      	cmp	r1, #0
 8000362:	d149      	bne.n	80003f8 <__udivmoddi4+0x158>
 8000364:	42ab      	cmp	r3, r5
 8000366:	d302      	bcc.n	800036e <__udivmoddi4+0xce>
 8000368:	4282      	cmp	r2, r0
 800036a:	f200 80f8 	bhi.w	800055e <__udivmoddi4+0x2be>
 800036e:	1a84      	subs	r4, r0, r2
 8000370:	eb65 0203 	sbc.w	r2, r5, r3
 8000374:	2001      	movs	r0, #1
 8000376:	4617      	mov	r7, r2
 8000378:	2e00      	cmp	r6, #0
 800037a:	d0e2      	beq.n	8000342 <__udivmoddi4+0xa2>
 800037c:	e9c6 4700 	strd	r4, r7, [r6]
 8000380:	e7df      	b.n	8000342 <__udivmoddi4+0xa2>
 8000382:	b902      	cbnz	r2, 8000386 <__udivmoddi4+0xe6>
 8000384:	deff      	udf	#255	; 0xff
 8000386:	fab2 f382 	clz	r3, r2
 800038a:	2b00      	cmp	r3, #0
 800038c:	f040 8090 	bne.w	80004b0 <__udivmoddi4+0x210>
 8000390:	1a8a      	subs	r2, r1, r2
 8000392:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000396:	fa1f fe8c 	uxth.w	lr, ip
 800039a:	2101      	movs	r1, #1
 800039c:	fbb2 f5f7 	udiv	r5, r2, r7
 80003a0:	fb07 2015 	mls	r0, r7, r5, r2
 80003a4:	0c22      	lsrs	r2, r4, #16
 80003a6:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 80003aa:	fb0e f005 	mul.w	r0, lr, r5
 80003ae:	4290      	cmp	r0, r2
 80003b0:	d908      	bls.n	80003c4 <__udivmoddi4+0x124>
 80003b2:	eb1c 0202 	adds.w	r2, ip, r2
 80003b6:	f105 38ff 	add.w	r8, r5, #4294967295
 80003ba:	d202      	bcs.n	80003c2 <__udivmoddi4+0x122>
 80003bc:	4290      	cmp	r0, r2
 80003be:	f200 80cb 	bhi.w	8000558 <__udivmoddi4+0x2b8>
 80003c2:	4645      	mov	r5, r8
 80003c4:	1a12      	subs	r2, r2, r0
 80003c6:	b2a4      	uxth	r4, r4
 80003c8:	fbb2 f0f7 	udiv	r0, r2, r7
 80003cc:	fb07 2210 	mls	r2, r7, r0, r2
 80003d0:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 80003d4:	fb0e fe00 	mul.w	lr, lr, r0
 80003d8:	45a6      	cmp	lr, r4
 80003da:	d908      	bls.n	80003ee <__udivmoddi4+0x14e>
 80003dc:	eb1c 0404 	adds.w	r4, ip, r4
 80003e0:	f100 32ff 	add.w	r2, r0, #4294967295
 80003e4:	d202      	bcs.n	80003ec <__udivmoddi4+0x14c>
 80003e6:	45a6      	cmp	lr, r4
 80003e8:	f200 80bb 	bhi.w	8000562 <__udivmoddi4+0x2c2>
 80003ec:	4610      	mov	r0, r2
 80003ee:	eba4 040e 	sub.w	r4, r4, lr
 80003f2:	ea40 4005 	orr.w	r0, r0, r5, lsl #16
 80003f6:	e79f      	b.n	8000338 <__udivmoddi4+0x98>
 80003f8:	f1c1 0720 	rsb	r7, r1, #32
 80003fc:	408b      	lsls	r3, r1
 80003fe:	fa22 fc07 	lsr.w	ip, r2, r7
 8000402:	ea4c 0c03 	orr.w	ip, ip, r3
 8000406:	fa05 f401 	lsl.w	r4, r5, r1
 800040a:	fa20 f307 	lsr.w	r3, r0, r7
 800040e:	40fd      	lsrs	r5, r7
 8000410:	ea4f 491c 	mov.w	r9, ip, lsr #16
 8000414:	4323      	orrs	r3, r4
 8000416:	fbb5 f8f9 	udiv	r8, r5, r9
 800041a:	fa1f fe8c 	uxth.w	lr, ip
 800041e:	fb09 5518 	mls	r5, r9, r8, r5
 8000422:	0c1c      	lsrs	r4, r3, #16
 8000424:	ea44 4405 	orr.w	r4, r4, r5, lsl #16
 8000428:	fb08 f50e 	mul.w	r5, r8, lr
 800042c:	42a5      	cmp	r5, r4
 800042e:	fa02 f201 	lsl.w	r2, r2, r1
 8000432:	fa00 f001 	lsl.w	r0, r0, r1
 8000436:	d90b      	bls.n	8000450 <__udivmoddi4+0x1b0>
 8000438:	eb1c 0404 	adds.w	r4, ip, r4
 800043c:	f108 3aff 	add.w	sl, r8, #4294967295
 8000440:	f080 8088 	bcs.w	8000554 <__udivmoddi4+0x2b4>
 8000444:	42a5      	cmp	r5, r4
 8000446:	f240 8085 	bls.w	8000554 <__udivmoddi4+0x2b4>
 800044a:	f1a8 0802 	sub.w	r8, r8, #2
 800044e:	4464      	add	r4, ip
 8000450:	1b64      	subs	r4, r4, r5
 8000452:	b29d      	uxth	r5, r3
 8000454:	fbb4 f3f9 	udiv	r3, r4, r9
 8000458:	fb09 4413 	mls	r4, r9, r3, r4
 800045c:	ea45 4404 	orr.w	r4, r5, r4, lsl #16
 8000460:	fb03 fe0e 	mul.w	lr, r3, lr
 8000464:	45a6      	cmp	lr, r4
 8000466:	d908      	bls.n	800047a <__udivmoddi4+0x1da>
 8000468:	eb1c 0404 	adds.w	r4, ip, r4
 800046c:	f103 35ff 	add.w	r5, r3, #4294967295
 8000470:	d26c      	bcs.n	800054c <__udivmoddi4+0x2ac>
 8000472:	45a6      	cmp	lr, r4
 8000474:	d96a      	bls.n	800054c <__udivmoddi4+0x2ac>
 8000476:	3b02      	subs	r3, #2
 8000478:	4464      	add	r4, ip
 800047a:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
 800047e:	fba3 9502 	umull	r9, r5, r3, r2
 8000482:	eba4 040e 	sub.w	r4, r4, lr
 8000486:	42ac      	cmp	r4, r5
 8000488:	46c8      	mov	r8, r9
 800048a:	46ae      	mov	lr, r5
 800048c:	d356      	bcc.n	800053c <__udivmoddi4+0x29c>
 800048e:	d053      	beq.n	8000538 <__udivmoddi4+0x298>
 8000490:	b156      	cbz	r6, 80004a8 <__udivmoddi4+0x208>
 8000492:	ebb0 0208 	subs.w	r2, r0, r8
 8000496:	eb64 040e 	sbc.w	r4, r4, lr
 800049a:	fa04 f707 	lsl.w	r7, r4, r7
 800049e:	40ca      	lsrs	r2, r1
 80004a0:	40cc      	lsrs	r4, r1
 80004a2:	4317      	orrs	r7, r2
 80004a4:	e9c6 7400 	strd	r7, r4, [r6]
 80004a8:	4618      	mov	r0, r3
 80004aa:	2100      	movs	r1, #0
 80004ac:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80004b0:	f1c3 0120 	rsb	r1, r3, #32
 80004b4:	fa02 fc03 	lsl.w	ip, r2, r3
 80004b8:	fa20 f201 	lsr.w	r2, r0, r1
 80004bc:	fa25 f101 	lsr.w	r1, r5, r1
 80004c0:	409d      	lsls	r5, r3
 80004c2:	432a      	orrs	r2, r5
 80004c4:	ea4f 471c 	mov.w	r7, ip, lsr #16
 80004c8:	fa1f fe8c 	uxth.w	lr, ip
 80004cc:	fbb1 f0f7 	udiv	r0, r1, r7
 80004d0:	fb07 1510 	mls	r5, r7, r0, r1
 80004d4:	0c11      	lsrs	r1, r2, #16
 80004d6:	ea41 4105 	orr.w	r1, r1, r5, lsl #16
 80004da:	fb00 f50e 	mul.w	r5, r0, lr
 80004de:	428d      	cmp	r5, r1
 80004e0:	fa04 f403 	lsl.w	r4, r4, r3
 80004e4:	d908      	bls.n	80004f8 <__udivmoddi4+0x258>
 80004e6:	eb1c 0101 	adds.w	r1, ip, r1
 80004ea:	f100 38ff 	add.w	r8, r0, #4294967295
 80004ee:	d22f      	bcs.n	8000550 <__udivmoddi4+0x2b0>
 80004f0:	428d      	cmp	r5, r1
 80004f2:	d92d      	bls.n	8000550 <__udivmoddi4+0x2b0>
 80004f4:	3802      	subs	r0, #2
 80004f6:	4461      	add	r1, ip
 80004f8:	1b49      	subs	r1, r1, r5
 80004fa:	b292      	uxth	r2, r2
 80004fc:	fbb1 f5f7 	udiv	r5, r1, r7
 8000500:	fb07 1115 	mls	r1, r7, r5, r1
 8000504:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8000508:	fb05 f10e 	mul.w	r1, r5, lr
 800050c:	4291      	cmp	r1, r2
 800050e:	d908      	bls.n	8000522 <__udivmoddi4+0x282>
 8000510:	eb1c 0202 	adds.w	r2, ip, r2
 8000514:	f105 38ff 	add.w	r8, r5, #4294967295
 8000518:	d216      	bcs.n	8000548 <__udivmoddi4+0x2a8>
 800051a:	4291      	cmp	r1, r2
 800051c:	d914      	bls.n	8000548 <__udivmoddi4+0x2a8>
 800051e:	3d02      	subs	r5, #2
 8000520:	4462      	add	r2, ip
 8000522:	1a52      	subs	r2, r2, r1
 8000524:	ea45 4100 	orr.w	r1, r5, r0, lsl #16
 8000528:	e738      	b.n	800039c <__udivmoddi4+0xfc>
 800052a:	4631      	mov	r1, r6
 800052c:	4630      	mov	r0, r6
 800052e:	e708      	b.n	8000342 <__udivmoddi4+0xa2>
 8000530:	4639      	mov	r1, r7
 8000532:	e6e6      	b.n	8000302 <__udivmoddi4+0x62>
 8000534:	4610      	mov	r0, r2
 8000536:	e6fb      	b.n	8000330 <__udivmoddi4+0x90>
 8000538:	4548      	cmp	r0, r9
 800053a:	d2a9      	bcs.n	8000490 <__udivmoddi4+0x1f0>
 800053c:	ebb9 0802 	subs.w	r8, r9, r2
 8000540:	eb65 0e0c 	sbc.w	lr, r5, ip
 8000544:	3b01      	subs	r3, #1
 8000546:	e7a3      	b.n	8000490 <__udivmoddi4+0x1f0>
 8000548:	4645      	mov	r5, r8
 800054a:	e7ea      	b.n	8000522 <__udivmoddi4+0x282>
 800054c:	462b      	mov	r3, r5
 800054e:	e794      	b.n	800047a <__udivmoddi4+0x1da>
 8000550:	4640      	mov	r0, r8
 8000552:	e7d1      	b.n	80004f8 <__udivmoddi4+0x258>
 8000554:	46d0      	mov	r8, sl
 8000556:	e77b      	b.n	8000450 <__udivmoddi4+0x1b0>
 8000558:	3d02      	subs	r5, #2
 800055a:	4462      	add	r2, ip
 800055c:	e732      	b.n	80003c4 <__udivmoddi4+0x124>
 800055e:	4608      	mov	r0, r1
 8000560:	e70a      	b.n	8000378 <__udivmoddi4+0xd8>
 8000562:	4464      	add	r4, ip
 8000564:	3802      	subs	r0, #2
 8000566:	e742      	b.n	80003ee <__udivmoddi4+0x14e>

08000568 <__aeabi_idiv0>:
 8000568:	4770      	bx	lr
 800056a:	bf00      	nop

0800056c <DEV_Delay_ms>:

/**
 * delay x ms
**/
void DEV_Delay_ms(UDOUBLE xms)
{
 800056c:	b580      	push	{r7, lr}
 800056e:	b082      	sub	sp, #8
 8000570:	af00      	add	r7, sp, #0
 8000572:	6078      	str	r0, [r7, #4]
	HAL_Delay(xms);
 8000574:	6878      	ldr	r0, [r7, #4]
 8000576:	f001 f8e3 	bl	8001740 <HAL_Delay>
}
 800057a:	bf00      	nop
 800057c:	3708      	adds	r7, #8
 800057e:	46bd      	mov	sp, r7
 8000580:	bd80      	pop	{r7, pc}

08000582 <GPIO_Config>:


void GPIO_Config(void)
{
 8000582:	b480      	push	{r7}
 8000584:	af00      	add	r7, sp, #0
    //DEV_GPIO_Mode(INT_PIN, 0);
}
 8000586:	bf00      	nop
 8000588:	46bd      	mov	sp, r7
 800058a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800058e:	4770      	bx	lr

08000590 <DEV_I2C_Init>:
function:	I2C Function initialization and transfer
parameter:
Info:
******************************************************************************/
void DEV_I2C_Init(uint8_t Add)
{
 8000590:	b480      	push	{r7}
 8000592:	b083      	sub	sp, #12
 8000594:	af00      	add	r7, sp, #0
 8000596:	4603      	mov	r3, r0
 8000598:	71fb      	strb	r3, [r7, #7]
#if DEV_I2C 
	DEV_I2C_Device = 1;
 800059a:	4b06      	ldr	r3, [pc, #24]	; (80005b4 <DEV_I2C_Init+0x24>)
 800059c:	2201      	movs	r2, #1
 800059e:	701a      	strb	r2, [r3, #0]
	I2C_ADDR =  Add;
 80005a0:	4a05      	ldr	r2, [pc, #20]	; (80005b8 <DEV_I2C_Init+0x28>)
 80005a2:	79fb      	ldrb	r3, [r7, #7]
 80005a4:	7013      	strb	r3, [r2, #0]
#endif
}
 80005a6:	bf00      	nop
 80005a8:	370c      	adds	r7, #12
 80005aa:	46bd      	mov	sp, r7
 80005ac:	f85d 7b04 	ldr.w	r7, [sp], #4
 80005b0:	4770      	bx	lr
 80005b2:	bf00      	nop
 80005b4:	20000084 	.word	0x20000084
 80005b8:	20000085 	.word	0x20000085

080005bc <I2C_Write_Byte>:

void I2C_Write_Byte(uint8_t Cmd, uint8_t value)
{
 80005bc:	b580      	push	{r7, lr}
 80005be:	b088      	sub	sp, #32
 80005c0:	af04      	add	r7, sp, #16
 80005c2:	4603      	mov	r3, r0
 80005c4:	460a      	mov	r2, r1
 80005c6:	71fb      	strb	r3, [r7, #7]
 80005c8:	4613      	mov	r3, r2
 80005ca:	71bb      	strb	r3, [r7, #6]
#if DEV_I2C 
	UBYTE Buf[1] = {0};
 80005cc:	2300      	movs	r3, #0
 80005ce:	733b      	strb	r3, [r7, #12]
	Buf[0] = value;
 80005d0:	79bb      	ldrb	r3, [r7, #6]
 80005d2:	733b      	strb	r3, [r7, #12]
	HAL_I2C_Mem_Write(&hi2c3, I2C_ADDR, Cmd, I2C_MEMADD_SIZE_8BIT, Buf, 1, 0x20);
 80005d4:	4b09      	ldr	r3, [pc, #36]	; (80005fc <I2C_Write_Byte+0x40>)
 80005d6:	781b      	ldrb	r3, [r3, #0]
 80005d8:	b299      	uxth	r1, r3
 80005da:	79fb      	ldrb	r3, [r7, #7]
 80005dc:	b29a      	uxth	r2, r3
 80005de:	2320      	movs	r3, #32
 80005e0:	9302      	str	r3, [sp, #8]
 80005e2:	2301      	movs	r3, #1
 80005e4:	9301      	str	r3, [sp, #4]
 80005e6:	f107 030c 	add.w	r3, r7, #12
 80005ea:	9300      	str	r3, [sp, #0]
 80005ec:	2301      	movs	r3, #1
 80005ee:	4804      	ldr	r0, [pc, #16]	; (8000600 <I2C_Write_Byte+0x44>)
 80005f0:	f001 fcc6 	bl	8001f80 <HAL_I2C_Mem_Write>
#endif
}
 80005f4:	bf00      	nop
 80005f6:	3710      	adds	r7, #16
 80005f8:	46bd      	mov	sp, r7
 80005fa:	bd80      	pop	{r7, pc}
 80005fc:	20000085 	.word	0x20000085
 8000600:	200000d0 	.word	0x200000d0

08000604 <I2C_Read_Byte>:

int I2C_Read_Byte(uint8_t Cmd)
{
 8000604:	b580      	push	{r7, lr}
 8000606:	b088      	sub	sp, #32
 8000608:	af04      	add	r7, sp, #16
 800060a:	4603      	mov	r3, r0
 800060c:	71fb      	strb	r3, [r7, #7]
#if DEV_I2C 
	UBYTE Buf[1]={0};
 800060e:	2300      	movs	r3, #0
 8000610:	733b      	strb	r3, [r7, #12]
	HAL_I2C_Mem_Read(&hi2c3, I2C_ADDR+1, Cmd, I2C_MEMADD_SIZE_8BIT, Buf, 1, 0x20);
 8000612:	4b0b      	ldr	r3, [pc, #44]	; (8000640 <I2C_Read_Byte+0x3c>)
 8000614:	781b      	ldrb	r3, [r3, #0]
 8000616:	b29b      	uxth	r3, r3
 8000618:	3301      	adds	r3, #1
 800061a:	b299      	uxth	r1, r3
 800061c:	79fb      	ldrb	r3, [r7, #7]
 800061e:	b29a      	uxth	r2, r3
 8000620:	2320      	movs	r3, #32
 8000622:	9302      	str	r3, [sp, #8]
 8000624:	2301      	movs	r3, #1
 8000626:	9301      	str	r3, [sp, #4]
 8000628:	f107 030c 	add.w	r3, r7, #12
 800062c:	9300      	str	r3, [sp, #0]
 800062e:	2301      	movs	r3, #1
 8000630:	4804      	ldr	r0, [pc, #16]	; (8000644 <I2C_Read_Byte+0x40>)
 8000632:	f001 fdb9 	bl	80021a8 <HAL_I2C_Mem_Read>
	return Buf[0];
 8000636:	7b3b      	ldrb	r3, [r7, #12]
#endif
}
 8000638:	4618      	mov	r0, r3
 800063a:	3710      	adds	r7, #16
 800063c:	46bd      	mov	sp, r7
 800063e:	bd80      	pop	{r7, pc}
 8000640:	20000085 	.word	0x20000085
 8000644:	200000d0 	.word	0x200000d0

08000648 <DEV_ModuleInit>:
function:	Module Initialize, the library and initialize the pins, SPI protocol
parameter:
Info:
******************************************************************************/
UBYTE DEV_ModuleInit(void)
{
 8000648:	b580      	push	{r7, lr}
 800064a:	af00      	add	r7, sp, #0
		GPIO_Config();
 800064c:	f7ff ff99 	bl	8000582 <GPIO_Config>
    DEV_I2C_Init(0x39<<1);
 8000650:	2072      	movs	r0, #114	; 0x72
 8000652:	f7ff ff9d 	bl	8000590 <DEV_I2C_Init>
    return 0;
 8000656:	2300      	movs	r3, #0
}
 8000658:	4618      	mov	r0, r3
 800065a:	bd80      	pop	{r7, pc}

0800065c <Getdata_test>:
#include "Waveshare_AS7341.h"



void Getdata_test(void)
{   
 800065c:	b580      	push	{r7, lr}
 800065e:	b088      	sub	sp, #32
 8000660:	af00      	add	r7, sp, #0
	
  AS7341_Init(eSpm);
 8000662:	2000      	movs	r0, #0
 8000664:	f000 f8d6 	bl	8000814 <AS7341_Init>
	AS7341_ATIME_config(100);
 8000668:	2064      	movs	r0, #100	; 0x64
 800066a:	f000 fb3f 	bl	8000cec <AS7341_ATIME_config>
	AS7341_ASTEP_config(999);
 800066e:	f240 30e7 	movw	r0, #999	; 0x3e7
 8000672:	f000 fb49 	bl	8000d08 <AS7341_ASTEP_config>
	AS7341_AGAIN_config(6);
 8000676:	2006      	movs	r0, #6
 8000678:	f000 fb5f 	bl	8000d3a <AS7341_AGAIN_config>
	AS7341_EnableLED(false);// LED Enable
 800067c:	2000      	movs	r0, #0
 800067e:	f000 fb6f 	bl	8000d60 <AS7341_EnableLED>
  while(1)
	{
		uint8_t data = I2C_Read_Byte(AS7341_ATIME);
 8000682:	2081      	movs	r0, #129	; 0x81
 8000684:	f7ff ffbe 	bl	8000604 <I2C_Read_Byte>
 8000688:	4603      	mov	r3, r0
 800068a:	77fb      	strb	r3, [r7, #31]
		printf("ATIME %d\r\n",data);
 800068c:	7ffb      	ldrb	r3, [r7, #31]
 800068e:	4619      	mov	r1, r3
 8000690:	4840      	ldr	r0, [pc, #256]	; (8000794 <Getdata_test+0x138>)
 8000692:	f004 fc6d 	bl	8004f70 <iprintf>
		data = I2C_Read_Byte(AS7341_ASTEP_L);
 8000696:	20ca      	movs	r0, #202	; 0xca
 8000698:	f7ff ffb4 	bl	8000604 <I2C_Read_Byte>
 800069c:	4603      	mov	r3, r0
 800069e:	77fb      	strb	r3, [r7, #31]
		printf("ASTEP_L %d\r\n",data);
 80006a0:	7ffb      	ldrb	r3, [r7, #31]
 80006a2:	4619      	mov	r1, r3
 80006a4:	483c      	ldr	r0, [pc, #240]	; (8000798 <Getdata_test+0x13c>)
 80006a6:	f004 fc63 	bl	8004f70 <iprintf>
		data = I2C_Read_Byte(AS7341_ASTEP_H);
 80006aa:	20cb      	movs	r0, #203	; 0xcb
 80006ac:	f7ff ffaa 	bl	8000604 <I2C_Read_Byte>
 80006b0:	4603      	mov	r3, r0
 80006b2:	77fb      	strb	r3, [r7, #31]
		printf("ASTEP_H %d\r\n",data);
 80006b4:	7ffb      	ldrb	r3, [r7, #31]
 80006b6:	4619      	mov	r1, r3
 80006b8:	4838      	ldr	r0, [pc, #224]	; (800079c <Getdata_test+0x140>)
 80006ba:	f004 fc59 	bl	8004f70 <iprintf>
		AS7341_ControlLed(true,10);//Turn on or off the LED and set the brightness of the LED
 80006be:	210a      	movs	r1, #10
 80006c0:	2001      	movs	r0, #1
 80006c2:	f000 fba6 	bl	8000e12 <AS7341_ControlLed>
		sModeOneData_t data1;
		sModeTwoData_t data2;

		AS7341_startMeasure(eF1F4ClearNIR);
 80006c6:	2000      	movs	r0, #0
 80006c8:	f000 f9fe 	bl	8000ac8 <AS7341_startMeasure>
		data1 = AS7341_ReadSpectralDataOne();
 80006cc:	f107 0310 	add.w	r3, r7, #16
 80006d0:	4618      	mov	r0, r3
 80006d2:	f000 fa8e 	bl	8000bf2 <AS7341_ReadSpectralDataOne>
		printf("channel1(405-425nm):\r\n");
 80006d6:	4832      	ldr	r0, [pc, #200]	; (80007a0 <Getdata_test+0x144>)
 80006d8:	f004 fcb0 	bl	800503c <puts>
		printf("%d\r\n",data1.channel1);
 80006dc:	8a3b      	ldrh	r3, [r7, #16]
 80006de:	4619      	mov	r1, r3
 80006e0:	4830      	ldr	r0, [pc, #192]	; (80007a4 <Getdata_test+0x148>)
 80006e2:	f004 fc45 	bl	8004f70 <iprintf>
		printf("channel2(435-455nm):\r\n");
 80006e6:	4830      	ldr	r0, [pc, #192]	; (80007a8 <Getdata_test+0x14c>)
 80006e8:	f004 fca8 	bl	800503c <puts>
		printf("%d\r\n",data1.channel2);
 80006ec:	8a7b      	ldrh	r3, [r7, #18]
 80006ee:	4619      	mov	r1, r3
 80006f0:	482c      	ldr	r0, [pc, #176]	; (80007a4 <Getdata_test+0x148>)
 80006f2:	f004 fc3d 	bl	8004f70 <iprintf>
		printf("channel3(470-490nm):\r\n");
 80006f6:	482d      	ldr	r0, [pc, #180]	; (80007ac <Getdata_test+0x150>)
 80006f8:	f004 fca0 	bl	800503c <puts>
		printf("%d\r\n",data1.channel3);
 80006fc:	8abb      	ldrh	r3, [r7, #20]
 80006fe:	4619      	mov	r1, r3
 8000700:	4828      	ldr	r0, [pc, #160]	; (80007a4 <Getdata_test+0x148>)
 8000702:	f004 fc35 	bl	8004f70 <iprintf>
		printf("channel4(505-525nm):\r\n");   
 8000706:	482a      	ldr	r0, [pc, #168]	; (80007b0 <Getdata_test+0x154>)
 8000708:	f004 fc98 	bl	800503c <puts>
		printf("%d\r\n",data1.channel4);
 800070c:	8afb      	ldrh	r3, [r7, #22]
 800070e:	4619      	mov	r1, r3
 8000710:	4824      	ldr	r0, [pc, #144]	; (80007a4 <Getdata_test+0x148>)
 8000712:	f004 fc2d 	bl	8004f70 <iprintf>

		AS7341_startMeasure(eF5F8ClearNIR);
 8000716:	2001      	movs	r0, #1
 8000718:	f000 f9d6 	bl	8000ac8 <AS7341_startMeasure>
		data2 =AS7341_ReadSpectralDataTwo();
 800071c:	1d3b      	adds	r3, r7, #4
 800071e:	4618      	mov	r0, r3
 8000720:	f000 fa95 	bl	8000c4e <AS7341_ReadSpectralDataTwo>
		printf("channel5(545-565nm):\r\n");
 8000724:	4823      	ldr	r0, [pc, #140]	; (80007b4 <Getdata_test+0x158>)
 8000726:	f004 fc89 	bl	800503c <puts>
		printf("%d\r\n",data2.channel5);
 800072a:	88bb      	ldrh	r3, [r7, #4]
 800072c:	4619      	mov	r1, r3
 800072e:	481d      	ldr	r0, [pc, #116]	; (80007a4 <Getdata_test+0x148>)
 8000730:	f004 fc1e 	bl	8004f70 <iprintf>
		printf("channel6(580-600nm):\r\n");
 8000734:	4820      	ldr	r0, [pc, #128]	; (80007b8 <Getdata_test+0x15c>)
 8000736:	f004 fc81 	bl	800503c <puts>
		printf("%d\r\n",data2.channel6);
 800073a:	88fb      	ldrh	r3, [r7, #6]
 800073c:	4619      	mov	r1, r3
 800073e:	4819      	ldr	r0, [pc, #100]	; (80007a4 <Getdata_test+0x148>)
 8000740:	f004 fc16 	bl	8004f70 <iprintf>
		printf("channel7(620-640nm):\r\n");
 8000744:	481d      	ldr	r0, [pc, #116]	; (80007bc <Getdata_test+0x160>)
 8000746:	f004 fc79 	bl	800503c <puts>
		printf("%d\r\n",data2.channel7);
 800074a:	893b      	ldrh	r3, [r7, #8]
 800074c:	4619      	mov	r1, r3
 800074e:	4815      	ldr	r0, [pc, #84]	; (80007a4 <Getdata_test+0x148>)
 8000750:	f004 fc0e 	bl	8004f70 <iprintf>
		printf("channel8(670-690nm):\r\n");
 8000754:	481a      	ldr	r0, [pc, #104]	; (80007c0 <Getdata_test+0x164>)
 8000756:	f004 fc71 	bl	800503c <puts>
		printf("%d\r\n",data2.channel8);
 800075a:	897b      	ldrh	r3, [r7, #10]
 800075c:	4619      	mov	r1, r3
 800075e:	4811      	ldr	r0, [pc, #68]	; (80007a4 <Getdata_test+0x148>)
 8000760:	f004 fc06 	bl	8004f70 <iprintf>
		printf("Clear:\r\n");
 8000764:	4817      	ldr	r0, [pc, #92]	; (80007c4 <Getdata_test+0x168>)
 8000766:	f004 fc69 	bl	800503c <puts>
		printf("%d\r\n",data2.CLEAR);
 800076a:	89bb      	ldrh	r3, [r7, #12]
 800076c:	4619      	mov	r1, r3
 800076e:	480d      	ldr	r0, [pc, #52]	; (80007a4 <Getdata_test+0x148>)
 8000770:	f004 fbfe 	bl	8004f70 <iprintf>
		printf("NIR:\r\n");
 8000774:	4814      	ldr	r0, [pc, #80]	; (80007c8 <Getdata_test+0x16c>)
 8000776:	f004 fc61 	bl	800503c <puts>
		printf("%d\r\n",data2.NIR);
 800077a:	89fb      	ldrh	r3, [r7, #14]
 800077c:	4619      	mov	r1, r3
 800077e:	4809      	ldr	r0, [pc, #36]	; (80007a4 <Getdata_test+0x148>)
 8000780:	f004 fbf6 	bl	8004f70 <iprintf>
		printf("--------------------------\r\n");
 8000784:	4811      	ldr	r0, [pc, #68]	; (80007cc <Getdata_test+0x170>)
 8000786:	f004 fc59 	bl	800503c <puts>
		DEV_Delay_ms(500);
 800078a:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 800078e:	f7ff feed 	bl	800056c <DEV_Delay_ms>
	{
 8000792:	e776      	b.n	8000682 <Getdata_test+0x26>
 8000794:	08005d28 	.word	0x08005d28
 8000798:	08005d34 	.word	0x08005d34
 800079c:	08005d44 	.word	0x08005d44
 80007a0:	08005d54 	.word	0x08005d54
 80007a4:	08005d6c 	.word	0x08005d6c
 80007a8:	08005d74 	.word	0x08005d74
 80007ac:	08005d8c 	.word	0x08005d8c
 80007b0:	08005da4 	.word	0x08005da4
 80007b4:	08005dbc 	.word	0x08005dbc
 80007b8:	08005dd4 	.word	0x08005dd4
 80007bc:	08005dec 	.word	0x08005dec
 80007c0:	08005e04 	.word	0x08005e04
 80007c4:	08005e1c 	.word	0x08005e1c
 80007c8:	08005e24 	.word	0x08005e24
 80007cc:	08005e2c 	.word	0x08005e2c

080007d0 <AS7341_Read_Byte>:
parameter:  
            Addr: Register address
Info:
******************************************************************************/
static UBYTE AS7341_Read_Byte(UBYTE Addr)
{
 80007d0:	b580      	push	{r7, lr}
 80007d2:	b082      	sub	sp, #8
 80007d4:	af00      	add	r7, sp, #0
 80007d6:	4603      	mov	r3, r0
 80007d8:	71fb      	strb	r3, [r7, #7]
    return I2C_Read_Byte(Addr);
 80007da:	79fb      	ldrb	r3, [r7, #7]
 80007dc:	4618      	mov	r0, r3
 80007de:	f7ff ff11 	bl	8000604 <I2C_Read_Byte>
 80007e2:	4603      	mov	r3, r0
 80007e4:	b2db      	uxtb	r3, r3
}
 80007e6:	4618      	mov	r0, r3
 80007e8:	3708      	adds	r7, #8
 80007ea:	46bd      	mov	sp, r7
 80007ec:	bd80      	pop	{r7, pc}

080007ee <AS7341_Write_Byte>:
            Addr: Register address
           Value: Write to the value of the register
Info:
******************************************************************************/
static void AS7341_Write_Byte(UBYTE Addr, UBYTE Value)
{
 80007ee:	b580      	push	{r7, lr}
 80007f0:	b082      	sub	sp, #8
 80007f2:	af00      	add	r7, sp, #0
 80007f4:	4603      	mov	r3, r0
 80007f6:	460a      	mov	r2, r1
 80007f8:	71fb      	strb	r3, [r7, #7]
 80007fa:	4613      	mov	r3, r2
 80007fc:	71bb      	strb	r3, [r7, #6]
    I2C_Write_Byte(Addr, Value);
 80007fe:	79ba      	ldrb	r2, [r7, #6]
 8000800:	79fb      	ldrb	r3, [r7, #7]
 8000802:	4611      	mov	r1, r2
 8000804:	4618      	mov	r0, r3
 8000806:	f7ff fed9 	bl	80005bc <I2C_Write_Byte>
}
 800080a:	bf00      	nop
 800080c:	3708      	adds	r7, #8
 800080e:	46bd      	mov	sp, r7
 8000810:	bd80      	pop	{r7, pc}
	...

08000814 <AS7341_Init>:
function:	AS7341 Initialization
parameter:
Info:
******************************************************************************/
UBYTE AS7341_Init(eMode_t mode)
{
 8000814:	b580      	push	{r7, lr}
 8000816:	b082      	sub	sp, #8
 8000818:	af00      	add	r7, sp, #0
 800081a:	4603      	mov	r3, r0
 800081c:	71fb      	strb	r3, [r7, #7]
	DEV_I2C_Init(AS7341_ADDRESS<<1);//8-bit address
 800081e:	2072      	movs	r0, #114	; 0x72
 8000820:	f7ff feb6 	bl	8000590 <DEV_I2C_Init>
    //printf("ID = 0x%x\r\n",AS7341_Read_Byte(AS7341_ID));//get AS7341 id	
	AS7341_Enable(true);
 8000824:	2001      	movs	r0, #1
 8000826:	f000 f80b 	bl	8000840 <AS7341_Enable>
	measureMode=mode;
 800082a:	4a04      	ldr	r2, [pc, #16]	; (800083c <AS7341_Init+0x28>)
 800082c:	79fb      	ldrb	r3, [r7, #7]
 800082e:	7013      	strb	r3, [r2, #0]
	return 0;
 8000830:	2300      	movs	r3, #0
}
 8000832:	4618      	mov	r0, r3
 8000834:	3708      	adds	r7, #8
 8000836:	46bd      	mov	sp, r7
 8000838:	bd80      	pop	{r7, pc}
 800083a:	bf00      	nop
 800083c:	20000086 	.word	0x20000086

08000840 <AS7341_Enable>:
/******************************************************************************
function： enable PON
info：	power on
******************************************************************************/
void AS7341_Enable(int flag)
{
 8000840:	b580      	push	{r7, lr}
 8000842:	b084      	sub	sp, #16
 8000844:	af00      	add	r7, sp, #0
 8000846:	6078      	str	r0, [r7, #4]
	UBYTE data;
	data=AS7341_Read_Byte(AS7341_ENABLE);
 8000848:	2080      	movs	r0, #128	; 0x80
 800084a:	f7ff ffc1 	bl	80007d0 <AS7341_Read_Byte>
 800084e:	4603      	mov	r3, r0
 8000850:	73fb      	strb	r3, [r7, #15]
    if(flag == true){
 8000852:	687b      	ldr	r3, [r7, #4]
 8000854:	2b01      	cmp	r3, #1
 8000856:	d104      	bne.n	8000862 <AS7341_Enable+0x22>
    data = data | (1<<0);
 8000858:	7bfb      	ldrb	r3, [r7, #15]
 800085a:	f043 0301 	orr.w	r3, r3, #1
 800085e:	73fb      	strb	r3, [r7, #15]
 8000860:	e003      	b.n	800086a <AS7341_Enable+0x2a>
    } else {
    data = data & (~1);
 8000862:	7bfb      	ldrb	r3, [r7, #15]
 8000864:	f023 0301 	bic.w	r3, r3, #1
 8000868:	73fb      	strb	r3, [r7, #15]
    }
	AS7341_Write_Byte(AS7341_ENABLE,data);
 800086a:	7bfb      	ldrb	r3, [r7, #15]
 800086c:	4619      	mov	r1, r3
 800086e:	2080      	movs	r0, #128	; 0x80
 8000870:	f7ff ffbd 	bl	80007ee <AS7341_Write_Byte>
	printf("Initialization is complete !\r\n");
 8000874:	4805      	ldr	r0, [pc, #20]	; (800088c <AS7341_Enable+0x4c>)
 8000876:	f004 fbe1 	bl	800503c <puts>
    AS7341_Write_Byte(0x00, 0x30);
 800087a:	2130      	movs	r1, #48	; 0x30
 800087c:	2000      	movs	r0, #0
 800087e:	f7ff ffb6 	bl	80007ee <AS7341_Write_Byte>
}
 8000882:	bf00      	nop
 8000884:	3710      	adds	r7, #16
 8000886:	46bd      	mov	sp, r7
 8000888:	bd80      	pop	{r7, pc}
 800088a:	bf00      	nop
 800088c:	08005e48 	.word	0x08005e48

08000890 <AS7341_EnableSpectralMeasure>:
/******************************************************************************
function： enable Spectral measure
info：	
******************************************************************************/
void AS7341_EnableSpectralMeasure(int flag)//Enable spectral measurement
{
 8000890:	b580      	push	{r7, lr}
 8000892:	b084      	sub	sp, #16
 8000894:	af00      	add	r7, sp, #0
 8000896:	6078      	str	r0, [r7, #4]
    UBYTE data;
    data=AS7341_Read_Byte(AS7341_ENABLE);
 8000898:	2080      	movs	r0, #128	; 0x80
 800089a:	f7ff ff99 	bl	80007d0 <AS7341_Read_Byte>
 800089e:	4603      	mov	r3, r0
 80008a0:	73fb      	strb	r3, [r7, #15]
    if(flag == true){
 80008a2:	687b      	ldr	r3, [r7, #4]
 80008a4:	2b01      	cmp	r3, #1
 80008a6:	d104      	bne.n	80008b2 <AS7341_EnableSpectralMeasure+0x22>
      data = data | (1<<1);
 80008a8:	7bfb      	ldrb	r3, [r7, #15]
 80008aa:	f043 0302 	orr.w	r3, r3, #2
 80008ae:	73fb      	strb	r3, [r7, #15]
 80008b0:	e003      	b.n	80008ba <AS7341_EnableSpectralMeasure+0x2a>
    } else {
      data = data & (~(1<<1));
 80008b2:	7bfb      	ldrb	r3, [r7, #15]
 80008b4:	f023 0302 	bic.w	r3, r3, #2
 80008b8:	73fb      	strb	r3, [r7, #15]
    }
    AS7341_Write_Byte(AS7341_ENABLE,data);
 80008ba:	7bfb      	ldrb	r3, [r7, #15]
 80008bc:	4619      	mov	r1, r3
 80008be:	2080      	movs	r0, #128	; 0x80
 80008c0:	f7ff ff95 	bl	80007ee <AS7341_Write_Byte>
}
 80008c4:	bf00      	nop
 80008c6:	3710      	adds	r7, #16
 80008c8:	46bd      	mov	sp, r7
 80008ca:	bd80      	pop	{r7, pc}

080008cc <AS7341_EnableSMUX>:
function： enable SMUX
info：	
******************************************************************************/
void AS7341_EnableSMUX(int flag)//Enable multiplexer
/*The other available channels can be accessed by amultiplexer (SMUX) connecting them to one of the internal ADCs.*/
{
 80008cc:	b580      	push	{r7, lr}
 80008ce:	b084      	sub	sp, #16
 80008d0:	af00      	add	r7, sp, #0
 80008d2:	6078      	str	r0, [r7, #4]
  UBYTE data;
    data=AS7341_Read_Byte(AS7341_ENABLE);
 80008d4:	2080      	movs	r0, #128	; 0x80
 80008d6:	f7ff ff7b 	bl	80007d0 <AS7341_Read_Byte>
 80008da:	4603      	mov	r3, r0
 80008dc:	73fb      	strb	r3, [r7, #15]
  if(flag == true){
 80008de:	687b      	ldr	r3, [r7, #4]
 80008e0:	2b01      	cmp	r3, #1
 80008e2:	d104      	bne.n	80008ee <AS7341_EnableSMUX+0x22>
    data = data | (1<<4);
 80008e4:	7bfb      	ldrb	r3, [r7, #15]
 80008e6:	f043 0310 	orr.w	r3, r3, #16
 80008ea:	73fb      	strb	r3, [r7, #15]
 80008ec:	e003      	b.n	80008f6 <AS7341_EnableSMUX+0x2a>
  } else {
    data = data & (~(1<<4));
 80008ee:	7bfb      	ldrb	r3, [r7, #15]
 80008f0:	f023 0310 	bic.w	r3, r3, #16
 80008f4:	73fb      	strb	r3, [r7, #15]
  }
    AS7341_Write_Byte(AS7341_ENABLE,data);
 80008f6:	7bfb      	ldrb	r3, [r7, #15]
 80008f8:	4619      	mov	r1, r3
 80008fa:	2080      	movs	r0, #128	; 0x80
 80008fc:	f7ff ff77 	bl	80007ee <AS7341_Write_Byte>
}
 8000900:	bf00      	nop
 8000902:	3710      	adds	r7, #16
 8000904:	46bd      	mov	sp, r7
 8000906:	bd80      	pop	{r7, pc}

08000908 <AS7341_Config>:
/******************************************************************************
function:	choose model for spectral measurement
info：	
******************************************************************************/
void AS7341_Config(eMode_t mode)
{
 8000908:	b580      	push	{r7, lr}
 800090a:	b084      	sub	sp, #16
 800090c:	af00      	add	r7, sp, #0
 800090e:	4603      	mov	r3, r0
 8000910:	71fb      	strb	r3, [r7, #7]
  UBYTE data;
  AS7341_SetBank(1);
 8000912:	2001      	movs	r0, #1
 8000914:	f000 fa5a 	bl	8000dcc <AS7341_SetBank>
  data=AS7341_Read_Byte(AS7341_CONFIG);
 8000918:	2070      	movs	r0, #112	; 0x70
 800091a:	f7ff ff59 	bl	80007d0 <AS7341_Read_Byte>
 800091e:	4603      	mov	r3, r0
 8000920:	73fb      	strb	r3, [r7, #15]
  switch(mode){
 8000922:	79fb      	ldrb	r3, [r7, #7]
 8000924:	2b03      	cmp	r3, #3
 8000926:	d015      	beq.n	8000954 <AS7341_Config+0x4c>
 8000928:	2b03      	cmp	r3, #3
 800092a:	dc18      	bgt.n	800095e <AS7341_Config+0x56>
 800092c:	2b00      	cmp	r3, #0
 800092e:	d002      	beq.n	8000936 <AS7341_Config+0x2e>
 8000930:	2b01      	cmp	r3, #1
 8000932:	d005      	beq.n	8000940 <AS7341_Config+0x38>
	break;
    case eSynd : {
      data = (data & (~3)) | eSynd;
    };
	break;
    default : break;
 8000934:	e013      	b.n	800095e <AS7341_Config+0x56>
      data = (data & (~3)) | eSpm;
 8000936:	7bfb      	ldrb	r3, [r7, #15]
 8000938:	f023 0303 	bic.w	r3, r3, #3
 800093c:	73fb      	strb	r3, [r7, #15]
	break;
 800093e:	e00f      	b.n	8000960 <AS7341_Config+0x58>
      data = (data & (~3)) | eSyns;
 8000940:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8000944:	f023 0303 	bic.w	r3, r3, #3
 8000948:	b25b      	sxtb	r3, r3
 800094a:	f043 0301 	orr.w	r3, r3, #1
 800094e:	b25b      	sxtb	r3, r3
 8000950:	73fb      	strb	r3, [r7, #15]
	break;
 8000952:	e005      	b.n	8000960 <AS7341_Config+0x58>
      data = (data & (~3)) | eSynd;
 8000954:	7bfb      	ldrb	r3, [r7, #15]
 8000956:	f043 0303 	orr.w	r3, r3, #3
 800095a:	73fb      	strb	r3, [r7, #15]
	break;
 800095c:	e000      	b.n	8000960 <AS7341_Config+0x58>
    default : break;
 800095e:	bf00      	nop
  }
  AS7341_Write_Byte(AS7341_CONFIG,data);
 8000960:	7bfb      	ldrb	r3, [r7, #15]
 8000962:	4619      	mov	r1, r3
 8000964:	2070      	movs	r0, #112	; 0x70
 8000966:	f7ff ff42 	bl	80007ee <AS7341_Write_Byte>
  AS7341_SetBank(0);
 800096a:	2000      	movs	r0, #0
 800096c:	f000 fa2e 	bl	8000dcc <AS7341_SetBank>
}
 8000970:	bf00      	nop
 8000972:	3710      	adds	r7, #16
 8000974:	46bd      	mov	sp, r7
 8000976:	bd80      	pop	{r7, pc}

08000978 <F1F4_Clear_NIR>:
/******************************************************************************
function:	Configure SMUX for sensors F1-4, Clear and NIR
info：	
******************************************************************************/
void F1F4_Clear_NIR() 
{
 8000978:	b580      	push	{r7, lr}
 800097a:	af00      	add	r7, sp, #0
  AS7341_Write_Byte(0x00, 0x30); 
 800097c:	2130      	movs	r1, #48	; 0x30
 800097e:	2000      	movs	r0, #0
 8000980:	f7ff ff35 	bl	80007ee <AS7341_Write_Byte>
  AS7341_Write_Byte(0x01, 0x01); 
 8000984:	2101      	movs	r1, #1
 8000986:	2001      	movs	r0, #1
 8000988:	f7ff ff31 	bl	80007ee <AS7341_Write_Byte>
  AS7341_Write_Byte(0x02, 0x00); 
 800098c:	2100      	movs	r1, #0
 800098e:	2002      	movs	r0, #2
 8000990:	f7ff ff2d 	bl	80007ee <AS7341_Write_Byte>
  AS7341_Write_Byte(0x03, 0x00); 
 8000994:	2100      	movs	r1, #0
 8000996:	2003      	movs	r0, #3
 8000998:	f7ff ff29 	bl	80007ee <AS7341_Write_Byte>
  AS7341_Write_Byte(0x04, 0x00); 
 800099c:	2100      	movs	r1, #0
 800099e:	2004      	movs	r0, #4
 80009a0:	f7ff ff25 	bl	80007ee <AS7341_Write_Byte>
  AS7341_Write_Byte(0x05, 0x42); 
 80009a4:	2142      	movs	r1, #66	; 0x42
 80009a6:	2005      	movs	r0, #5
 80009a8:	f7ff ff21 	bl	80007ee <AS7341_Write_Byte>
  AS7341_Write_Byte(0x06, 0x00); 
 80009ac:	2100      	movs	r1, #0
 80009ae:	2006      	movs	r0, #6
 80009b0:	f7ff ff1d 	bl	80007ee <AS7341_Write_Byte>
  AS7341_Write_Byte(0x07, 0x00); 
 80009b4:	2100      	movs	r1, #0
 80009b6:	2007      	movs	r0, #7
 80009b8:	f7ff ff19 	bl	80007ee <AS7341_Write_Byte>
  AS7341_Write_Byte(0x08, 0x50); 
 80009bc:	2150      	movs	r1, #80	; 0x50
 80009be:	2008      	movs	r0, #8
 80009c0:	f7ff ff15 	bl	80007ee <AS7341_Write_Byte>
  AS7341_Write_Byte(0x09, 0x00); 
 80009c4:	2100      	movs	r1, #0
 80009c6:	2009      	movs	r0, #9
 80009c8:	f7ff ff11 	bl	80007ee <AS7341_Write_Byte>
  AS7341_Write_Byte(0x0A, 0x00); 
 80009cc:	2100      	movs	r1, #0
 80009ce:	200a      	movs	r0, #10
 80009d0:	f7ff ff0d 	bl	80007ee <AS7341_Write_Byte>
  AS7341_Write_Byte(0x0B, 0x00); 
 80009d4:	2100      	movs	r1, #0
 80009d6:	200b      	movs	r0, #11
 80009d8:	f7ff ff09 	bl	80007ee <AS7341_Write_Byte>
  AS7341_Write_Byte(0x0C, 0x20); 
 80009dc:	2120      	movs	r1, #32
 80009de:	200c      	movs	r0, #12
 80009e0:	f7ff ff05 	bl	80007ee <AS7341_Write_Byte>
  AS7341_Write_Byte(0x0D, 0x04); 
 80009e4:	2104      	movs	r1, #4
 80009e6:	200d      	movs	r0, #13
 80009e8:	f7ff ff01 	bl	80007ee <AS7341_Write_Byte>
  AS7341_Write_Byte(0x0E, 0x00); 
 80009ec:	2100      	movs	r1, #0
 80009ee:	200e      	movs	r0, #14
 80009f0:	f7ff fefd 	bl	80007ee <AS7341_Write_Byte>
  AS7341_Write_Byte(0x0F, 0x30); 
 80009f4:	2130      	movs	r1, #48	; 0x30
 80009f6:	200f      	movs	r0, #15
 80009f8:	f7ff fef9 	bl	80007ee <AS7341_Write_Byte>
  AS7341_Write_Byte(0x10, 0x01); 
 80009fc:	2101      	movs	r1, #1
 80009fe:	2010      	movs	r0, #16
 8000a00:	f7ff fef5 	bl	80007ee <AS7341_Write_Byte>
  AS7341_Write_Byte(0x11, 0x50); 
 8000a04:	2150      	movs	r1, #80	; 0x50
 8000a06:	2011      	movs	r0, #17
 8000a08:	f7ff fef1 	bl	80007ee <AS7341_Write_Byte>
  AS7341_Write_Byte(0x12, 0x00); 
 8000a0c:	2100      	movs	r1, #0
 8000a0e:	2012      	movs	r0, #18
 8000a10:	f7ff feed 	bl	80007ee <AS7341_Write_Byte>
  AS7341_Write_Byte(0x13, 0x06); 
 8000a14:	2106      	movs	r1, #6
 8000a16:	2013      	movs	r0, #19
 8000a18:	f7ff fee9 	bl	80007ee <AS7341_Write_Byte>
}
 8000a1c:	bf00      	nop
 8000a1e:	bd80      	pop	{r7, pc}

08000a20 <F5F8_Clear_NIR>:
/******************************************************************************
function:	Configure SMUX for sensors F5-8, Clear and NIR
info：	
******************************************************************************/
void F5F8_Clear_NIR() 
{
 8000a20:	b580      	push	{r7, lr}
 8000a22:	af00      	add	r7, sp, #0
  AS7341_Write_Byte(0x00, 0x00); 
 8000a24:	2100      	movs	r1, #0
 8000a26:	2000      	movs	r0, #0
 8000a28:	f7ff fee1 	bl	80007ee <AS7341_Write_Byte>
  AS7341_Write_Byte(0x01, 0x00); 
 8000a2c:	2100      	movs	r1, #0
 8000a2e:	2001      	movs	r0, #1
 8000a30:	f7ff fedd 	bl	80007ee <AS7341_Write_Byte>
  AS7341_Write_Byte(0x02, 0x00); 
 8000a34:	2100      	movs	r1, #0
 8000a36:	2002      	movs	r0, #2
 8000a38:	f7ff fed9 	bl	80007ee <AS7341_Write_Byte>
  AS7341_Write_Byte(0x03, 0x40); 
 8000a3c:	2140      	movs	r1, #64	; 0x40
 8000a3e:	2003      	movs	r0, #3
 8000a40:	f7ff fed5 	bl	80007ee <AS7341_Write_Byte>
  AS7341_Write_Byte(0x04, 0x02); 
 8000a44:	2102      	movs	r1, #2
 8000a46:	2004      	movs	r0, #4
 8000a48:	f7ff fed1 	bl	80007ee <AS7341_Write_Byte>
  AS7341_Write_Byte(0x05, 0x00); 
 8000a4c:	2100      	movs	r1, #0
 8000a4e:	2005      	movs	r0, #5
 8000a50:	f7ff fecd 	bl	80007ee <AS7341_Write_Byte>
  AS7341_Write_Byte(0x06, 0x10); 
 8000a54:	2110      	movs	r1, #16
 8000a56:	2006      	movs	r0, #6
 8000a58:	f7ff fec9 	bl	80007ee <AS7341_Write_Byte>
  AS7341_Write_Byte(0x07, 0x03); 
 8000a5c:	2103      	movs	r1, #3
 8000a5e:	2007      	movs	r0, #7
 8000a60:	f7ff fec5 	bl	80007ee <AS7341_Write_Byte>
  AS7341_Write_Byte(0x08, 0x50); 
 8000a64:	2150      	movs	r1, #80	; 0x50
 8000a66:	2008      	movs	r0, #8
 8000a68:	f7ff fec1 	bl	80007ee <AS7341_Write_Byte>
  AS7341_Write_Byte(0x09, 0x10); 
 8000a6c:	2110      	movs	r1, #16
 8000a6e:	2009      	movs	r0, #9
 8000a70:	f7ff febd 	bl	80007ee <AS7341_Write_Byte>
  AS7341_Write_Byte(0x0A, 0x03); 
 8000a74:	2103      	movs	r1, #3
 8000a76:	200a      	movs	r0, #10
 8000a78:	f7ff feb9 	bl	80007ee <AS7341_Write_Byte>
  AS7341_Write_Byte(0x0B, 0x00); 
 8000a7c:	2100      	movs	r1, #0
 8000a7e:	200b      	movs	r0, #11
 8000a80:	f7ff feb5 	bl	80007ee <AS7341_Write_Byte>
  AS7341_Write_Byte(0x0C, 0x00); 
 8000a84:	2100      	movs	r1, #0
 8000a86:	200c      	movs	r0, #12
 8000a88:	f7ff feb1 	bl	80007ee <AS7341_Write_Byte>
  AS7341_Write_Byte(0x0D, 0x00); 
 8000a8c:	2100      	movs	r1, #0
 8000a8e:	200d      	movs	r0, #13
 8000a90:	f7ff fead 	bl	80007ee <AS7341_Write_Byte>
  AS7341_Write_Byte(0x0E, 0x24); 
 8000a94:	2124      	movs	r1, #36	; 0x24
 8000a96:	200e      	movs	r0, #14
 8000a98:	f7ff fea9 	bl	80007ee <AS7341_Write_Byte>
  AS7341_Write_Byte(0x0F, 0x00); 
 8000a9c:	2100      	movs	r1, #0
 8000a9e:	200f      	movs	r0, #15
 8000aa0:	f7ff fea5 	bl	80007ee <AS7341_Write_Byte>
  AS7341_Write_Byte(0x10, 0x00); 
 8000aa4:	2100      	movs	r1, #0
 8000aa6:	2010      	movs	r0, #16
 8000aa8:	f7ff fea1 	bl	80007ee <AS7341_Write_Byte>
  AS7341_Write_Byte(0x11, 0x50); 
 8000aac:	2150      	movs	r1, #80	; 0x50
 8000aae:	2011      	movs	r0, #17
 8000ab0:	f7ff fe9d 	bl	80007ee <AS7341_Write_Byte>
  AS7341_Write_Byte(0x12, 0x00); 
 8000ab4:	2100      	movs	r1, #0
 8000ab6:	2012      	movs	r0, #18
 8000ab8:	f7ff fe99 	bl	80007ee <AS7341_Write_Byte>
  AS7341_Write_Byte(0x13, 0x06); 
 8000abc:	2106      	movs	r1, #6
 8000abe:	2013      	movs	r0, #19
 8000ac0:	f7ff fe95 	bl	80007ee <AS7341_Write_Byte>
}
 8000ac4:	bf00      	nop
 8000ac6:	bd80      	pop	{r7, pc}

08000ac8 <AS7341_startMeasure>:
/******************************************************************************
function:	Start the measurement
info：		This function only handles SPM and SYNS modes.
******************************************************************************/
void AS7341_startMeasure(eChChoose_t mode)
{
 8000ac8:	b580      	push	{r7, lr}
 8000aca:	b084      	sub	sp, #16
 8000acc:	af00      	add	r7, sp, #0
 8000ace:	4603      	mov	r3, r0
 8000ad0:	71fb      	strb	r3, [r7, #7]
	  UBYTE data=0;
 8000ad2:	2300      	movs	r3, #0
 8000ad4:	73fb      	strb	r3, [r7, #15]
	  data = AS7341_Read_Byte(AS7341_CFG_0);  
 8000ad6:	20a9      	movs	r0, #169	; 0xa9
 8000ad8:	f7ff fe7a 	bl	80007d0 <AS7341_Read_Byte>
 8000adc:	4603      	mov	r3, r0
 8000ade:	73fb      	strb	r3, [r7, #15]
	  data = data & (~(1<<4));
 8000ae0:	7bfb      	ldrb	r3, [r7, #15]
 8000ae2:	f023 0310 	bic.w	r3, r3, #16
 8000ae6:	73fb      	strb	r3, [r7, #15]

	  AS7341_Write_Byte(AS7341_CFG_0,data);
 8000ae8:	7bfb      	ldrb	r3, [r7, #15]
 8000aea:	4619      	mov	r1, r3
 8000aec:	20a9      	movs	r0, #169	; 0xa9
 8000aee:	f7ff fe7e 	bl	80007ee <AS7341_Write_Byte>
	  
	  AS7341_EnableSpectralMeasure(false);
 8000af2:	2000      	movs	r0, #0
 8000af4:	f7ff fecc 	bl	8000890 <AS7341_EnableSpectralMeasure>
	  AS7341_Write_Byte(0xAF,0x10);//SMUX Command config
 8000af8:	2110      	movs	r1, #16
 8000afa:	20af      	movs	r0, #175	; 0xaf
 8000afc:	f7ff fe77 	bl	80007ee <AS7341_Write_Byte>
	  
	  if(mode  == eF1F4ClearNIR)
 8000b00:	79fb      	ldrb	r3, [r7, #7]
 8000b02:	2b00      	cmp	r3, #0
 8000b04:	d102      	bne.n	8000b0c <AS7341_startMeasure+0x44>
      F1F4_Clear_NIR();
 8000b06:	f7ff ff37 	bl	8000978 <F1F4_Clear_NIR>
 8000b0a:	e004      	b.n	8000b16 <AS7341_startMeasure+0x4e>
	  else if(mode  == eF5F8ClearNIR)
 8000b0c:	79fb      	ldrb	r3, [r7, #7]
 8000b0e:	2b01      	cmp	r3, #1
 8000b10:	d101      	bne.n	8000b16 <AS7341_startMeasure+0x4e>
	  F5F8_Clear_NIR();
 8000b12:	f7ff ff85 	bl	8000a20 <F5F8_Clear_NIR>
	  AS7341_EnableSMUX(true);
 8000b16:	2001      	movs	r0, #1
 8000b18:	f7ff fed8 	bl	80008cc <AS7341_EnableSMUX>
	  if(measureMode == eSyns){
 8000b1c:	4b12      	ldr	r3, [pc, #72]	; (8000b68 <AS7341_startMeasure+0xa0>)
 8000b1e:	781b      	ldrb	r3, [r3, #0]
 8000b20:	2b01      	cmp	r3, #1
 8000b22:	d106      	bne.n	8000b32 <AS7341_startMeasure+0x6a>
	  AS7341_SetGpioMode(INPUT);
 8000b24:	2000      	movs	r0, #0
 8000b26:	f000 f8c0 	bl	8000caa <AS7341_SetGpioMode>
      AS7341_Config(eSyns);
 8000b2a:	2001      	movs	r0, #1
 8000b2c:	f7ff feec 	bl	8000908 <AS7341_Config>
 8000b30:	e006      	b.n	8000b40 <AS7341_startMeasure+0x78>
      }
	  else if(measureMode == eSpm){
 8000b32:	4b0d      	ldr	r3, [pc, #52]	; (8000b68 <AS7341_startMeasure+0xa0>)
 8000b34:	781b      	ldrb	r3, [r3, #0]
 8000b36:	2b00      	cmp	r3, #0
 8000b38:	d102      	bne.n	8000b40 <AS7341_startMeasure+0x78>
      AS7341_Config(eSpm);
 8000b3a:	2000      	movs	r0, #0
 8000b3c:	f7ff fee4 	bl	8000908 <AS7341_Config>
	  }
	  AS7341_EnableSpectralMeasure(true);
 8000b40:	2001      	movs	r0, #1
 8000b42:	f7ff fea5 	bl	8000890 <AS7341_EnableSpectralMeasure>
      if(measureMode == eSpm){
 8000b46:	4b08      	ldr	r3, [pc, #32]	; (8000b68 <AS7341_startMeasure+0xa0>)
 8000b48:	781b      	ldrb	r3, [r3, #0]
 8000b4a:	2b00      	cmp	r3, #0
 8000b4c:	d108      	bne.n	8000b60 <AS7341_startMeasure+0x98>
        while(!AS7341_MeasureComplete()){
 8000b4e:	e002      	b.n	8000b56 <AS7341_startMeasure+0x8e>
        DEV_Delay_ms(1);
 8000b50:	2001      	movs	r0, #1
 8000b52:	f7ff fd0b 	bl	800056c <DEV_Delay_ms>
        while(!AS7341_MeasureComplete()){
 8000b56:	f000 f809 	bl	8000b6c <AS7341_MeasureComplete>
 8000b5a:	4603      	mov	r3, r0
 8000b5c:	2b00      	cmp	r3, #0
 8000b5e:	d0f7      	beq.n	8000b50 <AS7341_startMeasure+0x88>
        }
      }
}
 8000b60:	bf00      	nop
 8000b62:	3710      	adds	r7, #16
 8000b64:	46bd      	mov	sp, r7
 8000b66:	bd80      	pop	{r7, pc}
 8000b68:	20000086 	.word	0x20000086

08000b6c <AS7341_MeasureComplete>:
/******************************************************************************
function:  Determine whether the measurement is complete
info：		
******************************************************************************/

int AS7341_MeasureComplete(){
 8000b6c:	b580      	push	{r7, lr}
 8000b6e:	b082      	sub	sp, #8
 8000b70:	af00      	add	r7, sp, #0
	UBYTE status;
	status = AS7341_Read_Byte(AS7341_STATUS_2); 
 8000b72:	20a3      	movs	r0, #163	; 0xa3
 8000b74:	f7ff fe2c 	bl	80007d0 <AS7341_Read_Byte>
 8000b78:	4603      	mov	r3, r0
 8000b7a:	71fb      	strb	r3, [r7, #7]
	if((status & (1<<6))){
 8000b7c:	79fb      	ldrb	r3, [r7, #7]
 8000b7e:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8000b82:	2b00      	cmp	r3, #0
 8000b84:	d001      	beq.n	8000b8a <AS7341_MeasureComplete+0x1e>
		return true;
 8000b86:	2301      	movs	r3, #1
 8000b88:	e000      	b.n	8000b8c <AS7341_MeasureComplete+0x20>
	}
	else{
		return false;
 8000b8a:	2300      	movs	r3, #0
	}
}
 8000b8c:	4618      	mov	r0, r3
 8000b8e:	3708      	adds	r7, #8
 8000b90:	46bd      	mov	sp, r7
 8000b92:	bd80      	pop	{r7, pc}

08000b94 <AS7341_GetChannelData>:
/******************************************************************************
function:  Gets data for all channels
info：		
******************************************************************************/
UWORD AS7341_GetChannelData(UBYTE channel)
{
 8000b94:	b580      	push	{r7, lr}
 8000b96:	b084      	sub	sp, #16
 8000b98:	af00      	add	r7, sp, #0
 8000b9a:	4603      	mov	r3, r0
 8000b9c:	71fb      	strb	r3, [r7, #7]
  UWORD data[2];
  UWORD channelData = 0x0000;
 8000b9e:	2300      	movs	r3, #0
 8000ba0:	81fb      	strh	r3, [r7, #14]
  data[0] = AS7341_Read_Byte(AS7341_CH0_DATA_L + channel*2); 
 8000ba2:	79fb      	ldrb	r3, [r7, #7]
 8000ba4:	005b      	lsls	r3, r3, #1
 8000ba6:	b2db      	uxtb	r3, r3
 8000ba8:	3b6b      	subs	r3, #107	; 0x6b
 8000baa:	b2db      	uxtb	r3, r3
 8000bac:	4618      	mov	r0, r3
 8000bae:	f7ff fe0f 	bl	80007d0 <AS7341_Read_Byte>
 8000bb2:	4603      	mov	r3, r0
 8000bb4:	b29b      	uxth	r3, r3
 8000bb6:	813b      	strh	r3, [r7, #8]
  data[1] = AS7341_Read_Byte(AS7341_CH0_DATA_H + channel*2); 
 8000bb8:	79fb      	ldrb	r3, [r7, #7]
 8000bba:	334b      	adds	r3, #75	; 0x4b
 8000bbc:	b2db      	uxtb	r3, r3
 8000bbe:	005b      	lsls	r3, r3, #1
 8000bc0:	b2db      	uxtb	r3, r3
 8000bc2:	4618      	mov	r0, r3
 8000bc4:	f7ff fe04 	bl	80007d0 <AS7341_Read_Byte>
 8000bc8:	4603      	mov	r3, r0
 8000bca:	b29b      	uxth	r3, r3
 8000bcc:	817b      	strh	r3, [r7, #10]
  channelData = data[1];
 8000bce:	897b      	ldrh	r3, [r7, #10]
 8000bd0:	81fb      	strh	r3, [r7, #14]
  channelData = (channelData<<8) | data[0];
 8000bd2:	89fb      	ldrh	r3, [r7, #14]
 8000bd4:	021b      	lsls	r3, r3, #8
 8000bd6:	b21a      	sxth	r2, r3
 8000bd8:	893b      	ldrh	r3, [r7, #8]
 8000bda:	b21b      	sxth	r3, r3
 8000bdc:	4313      	orrs	r3, r2
 8000bde:	b21b      	sxth	r3, r3
 8000be0:	81fb      	strh	r3, [r7, #14]
  DEV_Delay_ms(50);
 8000be2:	2032      	movs	r0, #50	; 0x32
 8000be4:	f7ff fcc2 	bl	800056c <DEV_Delay_ms>
  return channelData;
 8000be8:	89fb      	ldrh	r3, [r7, #14]
}
 8000bea:	4618      	mov	r0, r3
 8000bec:	3710      	adds	r7, #16
 8000bee:	46bd      	mov	sp, r7
 8000bf0:	bd80      	pop	{r7, pc}

08000bf2 <AS7341_ReadSpectralDataOne>:
function:  Use SMUX to read data from the low channel
info：		
******************************************************************************/

sModeOneData_t AS7341_ReadSpectralDataOne()
{
 8000bf2:	b590      	push	{r4, r7, lr}
 8000bf4:	b087      	sub	sp, #28
 8000bf6:	af00      	add	r7, sp, #0
 8000bf8:	6078      	str	r0, [r7, #4]
  sModeOneData_t data;
  data.channel1 = AS7341_GetChannelData(0);
 8000bfa:	2000      	movs	r0, #0
 8000bfc:	f7ff ffca 	bl	8000b94 <AS7341_GetChannelData>
 8000c00:	4603      	mov	r3, r0
 8000c02:	81bb      	strh	r3, [r7, #12]
  data.channel2 = AS7341_GetChannelData(1);
 8000c04:	2001      	movs	r0, #1
 8000c06:	f7ff ffc5 	bl	8000b94 <AS7341_GetChannelData>
 8000c0a:	4603      	mov	r3, r0
 8000c0c:	81fb      	strh	r3, [r7, #14]
  data.channel3 = AS7341_GetChannelData(2);
 8000c0e:	2002      	movs	r0, #2
 8000c10:	f7ff ffc0 	bl	8000b94 <AS7341_GetChannelData>
 8000c14:	4603      	mov	r3, r0
 8000c16:	823b      	strh	r3, [r7, #16]
  data.channel4 = AS7341_GetChannelData(3);
 8000c18:	2003      	movs	r0, #3
 8000c1a:	f7ff ffbb 	bl	8000b94 <AS7341_GetChannelData>
 8000c1e:	4603      	mov	r3, r0
 8000c20:	827b      	strh	r3, [r7, #18]
  data.CLEAR = AS7341_GetChannelData(4);
 8000c22:	2004      	movs	r0, #4
 8000c24:	f7ff ffb6 	bl	8000b94 <AS7341_GetChannelData>
 8000c28:	4603      	mov	r3, r0
 8000c2a:	82bb      	strh	r3, [r7, #20]
  data.NIR = AS7341_GetChannelData(5);
 8000c2c:	2005      	movs	r0, #5
 8000c2e:	f7ff ffb1 	bl	8000b94 <AS7341_GetChannelData>
 8000c32:	4603      	mov	r3, r0
 8000c34:	82fb      	strh	r3, [r7, #22]
  return data;
 8000c36:	687b      	ldr	r3, [r7, #4]
 8000c38:	461c      	mov	r4, r3
 8000c3a:	f107 030c 	add.w	r3, r7, #12
 8000c3e:	cb07      	ldmia	r3!, {r0, r1, r2}
 8000c40:	6020      	str	r0, [r4, #0]
 8000c42:	6061      	str	r1, [r4, #4]
 8000c44:	60a2      	str	r2, [r4, #8]
}
 8000c46:	6878      	ldr	r0, [r7, #4]
 8000c48:	371c      	adds	r7, #28
 8000c4a:	46bd      	mov	sp, r7
 8000c4c:	bd90      	pop	{r4, r7, pc}

08000c4e <AS7341_ReadSpectralDataTwo>:
function:  Use SMUX to read data from the high channel
info：		
******************************************************************************/

sModeTwoData_t AS7341_ReadSpectralDataTwo()
{
 8000c4e:	b590      	push	{r4, r7, lr}
 8000c50:	b087      	sub	sp, #28
 8000c52:	af00      	add	r7, sp, #0
 8000c54:	6078      	str	r0, [r7, #4]
  sModeTwoData_t data;
  data.channel5 = AS7341_GetChannelData(0);
 8000c56:	2000      	movs	r0, #0
 8000c58:	f7ff ff9c 	bl	8000b94 <AS7341_GetChannelData>
 8000c5c:	4603      	mov	r3, r0
 8000c5e:	81bb      	strh	r3, [r7, #12]
  data.channel6 = AS7341_GetChannelData(1);
 8000c60:	2001      	movs	r0, #1
 8000c62:	f7ff ff97 	bl	8000b94 <AS7341_GetChannelData>
 8000c66:	4603      	mov	r3, r0
 8000c68:	81fb      	strh	r3, [r7, #14]
  data.channel7 = AS7341_GetChannelData(2);
 8000c6a:	2002      	movs	r0, #2
 8000c6c:	f7ff ff92 	bl	8000b94 <AS7341_GetChannelData>
 8000c70:	4603      	mov	r3, r0
 8000c72:	823b      	strh	r3, [r7, #16]
  data.channel8 = AS7341_GetChannelData(3);
 8000c74:	2003      	movs	r0, #3
 8000c76:	f7ff ff8d 	bl	8000b94 <AS7341_GetChannelData>
 8000c7a:	4603      	mov	r3, r0
 8000c7c:	827b      	strh	r3, [r7, #18]
  data.CLEAR = AS7341_GetChannelData(4);
 8000c7e:	2004      	movs	r0, #4
 8000c80:	f7ff ff88 	bl	8000b94 <AS7341_GetChannelData>
 8000c84:	4603      	mov	r3, r0
 8000c86:	82bb      	strh	r3, [r7, #20]
  data.NIR = AS7341_GetChannelData(5);
 8000c88:	2005      	movs	r0, #5
 8000c8a:	f7ff ff83 	bl	8000b94 <AS7341_GetChannelData>
 8000c8e:	4603      	mov	r3, r0
 8000c90:	82fb      	strh	r3, [r7, #22]
  return data;
 8000c92:	687b      	ldr	r3, [r7, #4]
 8000c94:	461c      	mov	r4, r3
 8000c96:	f107 030c 	add.w	r3, r7, #12
 8000c9a:	cb07      	ldmia	r3!, {r0, r1, r2}
 8000c9c:	6020      	str	r0, [r4, #0]
 8000c9e:	6061      	str	r1, [r4, #4]
 8000ca0:	60a2      	str	r2, [r4, #8]
}
 8000ca2:	6878      	ldr	r0, [r7, #4]
 8000ca4:	371c      	adds	r7, #28
 8000ca6:	46bd      	mov	sp, r7
 8000ca8:	bd90      	pop	{r4, r7, pc}

08000caa <AS7341_SetGpioMode>:
/******************************************************************************
function:	Set GPIO to input or output mode
info：
******************************************************************************/
void AS7341_SetGpioMode(UBYTE mode)
{
 8000caa:	b580      	push	{r7, lr}
 8000cac:	b084      	sub	sp, #16
 8000cae:	af00      	add	r7, sp, #0
 8000cb0:	4603      	mov	r3, r0
 8000cb2:	71fb      	strb	r3, [r7, #7]
  UBYTE data;

  data = AS7341_Read_Byte(AS7341_GPIO_2);  
 8000cb4:	20be      	movs	r0, #190	; 0xbe
 8000cb6:	f7ff fd8b 	bl	80007d0 <AS7341_Read_Byte>
 8000cba:	4603      	mov	r3, r0
 8000cbc:	73fb      	strb	r3, [r7, #15]
  if(mode == INPUT){
 8000cbe:	79fb      	ldrb	r3, [r7, #7]
 8000cc0:	2b00      	cmp	r3, #0
 8000cc2:	d103      	bne.n	8000ccc <AS7341_SetGpioMode+0x22>
     data = data | (1<<2);
 8000cc4:	7bfb      	ldrb	r3, [r7, #15]
 8000cc6:	f043 0304 	orr.w	r3, r3, #4
 8000cca:	73fb      	strb	r3, [r7, #15]
  }
  
  if(mode == OUTPUT){
 8000ccc:	79fb      	ldrb	r3, [r7, #7]
 8000cce:	2b01      	cmp	r3, #1
 8000cd0:	d103      	bne.n	8000cda <AS7341_SetGpioMode+0x30>
     data = data & (~(1<<2));
 8000cd2:	7bfb      	ldrb	r3, [r7, #15]
 8000cd4:	f023 0304 	bic.w	r3, r3, #4
 8000cd8:	73fb      	strb	r3, [r7, #15]
  }
  AS7341_Write_Byte(AS7341_GPIO_2,data);
 8000cda:	7bfb      	ldrb	r3, [r7, #15]
 8000cdc:	4619      	mov	r1, r3
 8000cde:	20be      	movs	r0, #190	; 0xbe
 8000ce0:	f7ff fd85 	bl	80007ee <AS7341_Write_Byte>
}
 8000ce4:	bf00      	nop
 8000ce6:	3710      	adds	r7, #16
 8000ce8:	46bd      	mov	sp, r7
 8000cea:	bd80      	pop	{r7, pc}

08000cec <AS7341_ATIME_config>:
/******************************************************************************
function:	Configure the ATIME register
info：
******************************************************************************/
void AS7341_ATIME_config(UBYTE value)
{
 8000cec:	b580      	push	{r7, lr}
 8000cee:	b082      	sub	sp, #8
 8000cf0:	af00      	add	r7, sp, #0
 8000cf2:	4603      	mov	r3, r0
 8000cf4:	71fb      	strb	r3, [r7, #7]
  AS7341_Write_Byte(AS7341_ATIME,value);
 8000cf6:	79fb      	ldrb	r3, [r7, #7]
 8000cf8:	4619      	mov	r1, r3
 8000cfa:	2081      	movs	r0, #129	; 0x81
 8000cfc:	f7ff fd77 	bl	80007ee <AS7341_Write_Byte>
}
 8000d00:	bf00      	nop
 8000d02:	3708      	adds	r7, #8
 8000d04:	46bd      	mov	sp, r7
 8000d06:	bd80      	pop	{r7, pc}

08000d08 <AS7341_ASTEP_config>:
/******************************************************************************
function:	Configure the ASTEP register
info：
******************************************************************************/
void AS7341_ASTEP_config(UWORD value)
{
 8000d08:	b580      	push	{r7, lr}
 8000d0a:	b084      	sub	sp, #16
 8000d0c:	af00      	add	r7, sp, #0
 8000d0e:	4603      	mov	r3, r0
 8000d10:	80fb      	strh	r3, [r7, #6]
  UBYTE highValue,lowValue;
  lowValue = value & 0x00ff;
 8000d12:	88fb      	ldrh	r3, [r7, #6]
 8000d14:	73fb      	strb	r3, [r7, #15]
  highValue = value >> 8 ;
 8000d16:	88fb      	ldrh	r3, [r7, #6]
 8000d18:	0a1b      	lsrs	r3, r3, #8
 8000d1a:	b29b      	uxth	r3, r3
 8000d1c:	73bb      	strb	r3, [r7, #14]
  AS7341_Write_Byte(AS7341_ASTEP_L,lowValue);
 8000d1e:	7bfb      	ldrb	r3, [r7, #15]
 8000d20:	4619      	mov	r1, r3
 8000d22:	20ca      	movs	r0, #202	; 0xca
 8000d24:	f7ff fd63 	bl	80007ee <AS7341_Write_Byte>
  AS7341_Write_Byte(AS7341_ASTEP_H,highValue);
 8000d28:	7bbb      	ldrb	r3, [r7, #14]
 8000d2a:	4619      	mov	r1, r3
 8000d2c:	20cb      	movs	r0, #203	; 0xcb
 8000d2e:	f7ff fd5e 	bl	80007ee <AS7341_Write_Byte>
}
 8000d32:	bf00      	nop
 8000d34:	3710      	adds	r7, #16
 8000d36:	46bd      	mov	sp, r7
 8000d38:	bd80      	pop	{r7, pc}

08000d3a <AS7341_AGAIN_config>:
function:	Configure the AGAIN register
value:    0    1    2    3    4    5      6     7     8     9      10
gain:   X0.5 | X1 | X2 | X4 | X8 | X16 | X32 | X64 | X128 | X256 | X512
******************************************************************************/
void AS7341_AGAIN_config(UBYTE value)
{
 8000d3a:	b580      	push	{r7, lr}
 8000d3c:	b082      	sub	sp, #8
 8000d3e:	af00      	add	r7, sp, #0
 8000d40:	4603      	mov	r3, r0
 8000d42:	71fb      	strb	r3, [r7, #7]
  if(value > 10) value = 10;
 8000d44:	79fb      	ldrb	r3, [r7, #7]
 8000d46:	2b0a      	cmp	r3, #10
 8000d48:	d901      	bls.n	8000d4e <AS7341_AGAIN_config+0x14>
 8000d4a:	230a      	movs	r3, #10
 8000d4c:	71fb      	strb	r3, [r7, #7]
  AS7341_Write_Byte(AS7341_CFG_1,value);
 8000d4e:	79fb      	ldrb	r3, [r7, #7]
 8000d50:	4619      	mov	r1, r3
 8000d52:	20aa      	movs	r0, #170	; 0xaa
 8000d54:	f7ff fd4b 	bl	80007ee <AS7341_Write_Byte>
}
 8000d58:	bf00      	nop
 8000d5a:	3708      	adds	r7, #8
 8000d5c:	46bd      	mov	sp, r7
 8000d5e:	bd80      	pop	{r7, pc}

08000d60 <AS7341_EnableLED>:
function:	enable led
info：true		: Enable
			false		: Anergy
******************************************************************************/
void AS7341_EnableLED(int flag)
{
 8000d60:	b580      	push	{r7, lr}
 8000d62:	b084      	sub	sp, #16
 8000d64:	af00      	add	r7, sp, #0
 8000d66:	6078      	str	r0, [r7, #4]
  UBYTE data=0;
 8000d68:	2300      	movs	r3, #0
 8000d6a:	73fb      	strb	r3, [r7, #15]
  UBYTE data1=0;
 8000d6c:	2300      	movs	r3, #0
 8000d6e:	73bb      	strb	r3, [r7, #14]
  AS7341_SetBank(1);
 8000d70:	2001      	movs	r0, #1
 8000d72:	f000 f82b 	bl	8000dcc <AS7341_SetBank>
  data = AS7341_Read_Byte(AS7341_CONFIG);
 8000d76:	2070      	movs	r0, #112	; 0x70
 8000d78:	f7ff fd2a 	bl	80007d0 <AS7341_Read_Byte>
 8000d7c:	4603      	mov	r3, r0
 8000d7e:	73fb      	strb	r3, [r7, #15]
  data1 = AS7341_Read_Byte(AS7341_LED);
 8000d80:	2074      	movs	r0, #116	; 0x74
 8000d82:	f7ff fd25 	bl	80007d0 <AS7341_Read_Byte>
 8000d86:	4603      	mov	r3, r0
 8000d88:	73bb      	strb	r3, [r7, #14]
  if(flag== true)
 8000d8a:	687b      	ldr	r3, [r7, #4]
 8000d8c:	2b01      	cmp	r3, #1
 8000d8e:	d104      	bne.n	8000d9a <AS7341_EnableLED+0x3a>
	{
    data = data | 0x08;
 8000d90:	7bfb      	ldrb	r3, [r7, #15]
 8000d92:	f043 0308 	orr.w	r3, r3, #8
 8000d96:	73fb      	strb	r3, [r7, #15]
 8000d98:	e00c      	b.n	8000db4 <AS7341_EnableLED+0x54>
	} 
	else 
	{
    data = data & 0xf7;
 8000d9a:	7bfb      	ldrb	r3, [r7, #15]
 8000d9c:	f023 0308 	bic.w	r3, r3, #8
 8000da0:	73fb      	strb	r3, [r7, #15]
    data1 = data1 & 0x7f;
 8000da2:	7bbb      	ldrb	r3, [r7, #14]
 8000da4:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 8000da8:	73bb      	strb	r3, [r7, #14]
		AS7341_Write_Byte(AS7341_LED,data1);
 8000daa:	7bbb      	ldrb	r3, [r7, #14]
 8000dac:	4619      	mov	r1, r3
 8000dae:	2074      	movs	r0, #116	; 0x74
 8000db0:	f7ff fd1d 	bl	80007ee <AS7341_Write_Byte>
  }
  AS7341_Write_Byte(AS7341_CONFIG,data);
 8000db4:	7bfb      	ldrb	r3, [r7, #15]
 8000db6:	4619      	mov	r1, r3
 8000db8:	2070      	movs	r0, #112	; 0x70
 8000dba:	f7ff fd18 	bl	80007ee <AS7341_Write_Byte>
  AS7341_SetBank(0);
 8000dbe:	2000      	movs	r0, #0
 8000dc0:	f000 f804 	bl	8000dcc <AS7341_SetBank>
}
 8000dc4:	bf00      	nop
 8000dc6:	3710      	adds	r7, #16
 8000dc8:	46bd      	mov	sp, r7
 8000dca:	bd80      	pop	{r7, pc}

08000dcc <AS7341_SetBank>:
function:	set REG_BANK
info：	0: Register access to register 0x80 and above
		1: Register access to register 0x60 to 0x74
******************************************************************************/
void AS7341_SetBank(UBYTE addr)
{
 8000dcc:	b580      	push	{r7, lr}
 8000dce:	b084      	sub	sp, #16
 8000dd0:	af00      	add	r7, sp, #0
 8000dd2:	4603      	mov	r3, r0
 8000dd4:	71fb      	strb	r3, [r7, #7]
  UBYTE data=0;
 8000dd6:	2300      	movs	r3, #0
 8000dd8:	73fb      	strb	r3, [r7, #15]
  data = AS7341_Read_Byte(AS7341_CFG_0);
 8000dda:	20a9      	movs	r0, #169	; 0xa9
 8000ddc:	f7ff fcf8 	bl	80007d0 <AS7341_Read_Byte>
 8000de0:	4603      	mov	r3, r0
 8000de2:	73fb      	strb	r3, [r7, #15]
  if(addr == 1){
 8000de4:	79fb      	ldrb	r3, [r7, #7]
 8000de6:	2b01      	cmp	r3, #1
 8000de8:	d103      	bne.n	8000df2 <AS7341_SetBank+0x26>
  
    data = data | (1<<4);
 8000dea:	7bfb      	ldrb	r3, [r7, #15]
 8000dec:	f043 0310 	orr.w	r3, r3, #16
 8000df0:	73fb      	strb	r3, [r7, #15]
  }
  
  if(addr == 0){
 8000df2:	79fb      	ldrb	r3, [r7, #7]
 8000df4:	2b00      	cmp	r3, #0
 8000df6:	d103      	bne.n	8000e00 <AS7341_SetBank+0x34>
  
    data = data & (~(1<<4));
 8000df8:	7bfb      	ldrb	r3, [r7, #15]
 8000dfa:	f023 0310 	bic.w	r3, r3, #16
 8000dfe:	73fb      	strb	r3, [r7, #15]
  }
  AS7341_Write_Byte(AS7341_CFG_0,data);
 8000e00:	7bfb      	ldrb	r3, [r7, #15]
 8000e02:	4619      	mov	r1, r3
 8000e04:	20a9      	movs	r0, #169	; 0xa9
 8000e06:	f7ff fcf2 	bl	80007ee <AS7341_Write_Byte>
}
 8000e0a:	bf00      	nop
 8000e0c:	3710      	adds	r7, #16
 8000e0e:	46bd      	mov	sp, r7
 8000e10:	bd80      	pop	{r7, pc}

08000e12 <AS7341_ControlLed>:
info：   LED 			 :   true  : LED ON
											 false : LED OFF
         current   :  intensity control
******************************************************************************/
void AS7341_ControlLed(UBYTE LED,UBYTE current)
{
 8000e12:	b580      	push	{r7, lr}
 8000e14:	b084      	sub	sp, #16
 8000e16:	af00      	add	r7, sp, #0
 8000e18:	4603      	mov	r3, r0
 8000e1a:	460a      	mov	r2, r1
 8000e1c:	71fb      	strb	r3, [r7, #7]
 8000e1e:	4613      	mov	r3, r2
 8000e20:	71bb      	strb	r3, [r7, #6]
  UBYTE data=0;
 8000e22:	2300      	movs	r3, #0
 8000e24:	73fb      	strb	r3, [r7, #15]
  if(current < 1) current = 1;
 8000e26:	79bb      	ldrb	r3, [r7, #6]
 8000e28:	2b00      	cmp	r3, #0
 8000e2a:	d101      	bne.n	8000e30 <AS7341_ControlLed+0x1e>
 8000e2c:	2301      	movs	r3, #1
 8000e2e:	71bb      	strb	r3, [r7, #6]
    current--;
 8000e30:	79bb      	ldrb	r3, [r7, #6]
 8000e32:	3b01      	subs	r3, #1
 8000e34:	71bb      	strb	r3, [r7, #6]
  if(current > 19) current = 19;
 8000e36:	79bb      	ldrb	r3, [r7, #6]
 8000e38:	2b13      	cmp	r3, #19
 8000e3a:	d901      	bls.n	8000e40 <AS7341_ControlLed+0x2e>
 8000e3c:	2313      	movs	r3, #19
 8000e3e:	71bb      	strb	r3, [r7, #6]
  AS7341_SetBank(1); 
 8000e40:	2001      	movs	r0, #1
 8000e42:	f7ff ffc3 	bl	8000dcc <AS7341_SetBank>
	if(LED == true)	
 8000e46:	79fb      	ldrb	r3, [r7, #7]
 8000e48:	2b01      	cmp	r3, #1
 8000e4a:	d104      	bne.n	8000e56 <AS7341_ControlLed+0x44>
		data = 0x80 | current;
 8000e4c:	79bb      	ldrb	r3, [r7, #6]
 8000e4e:	f063 037f 	orn	r3, r3, #127	; 0x7f
 8000e52:	73fb      	strb	r3, [r7, #15]
 8000e54:	e001      	b.n	8000e5a <AS7341_ControlLed+0x48>
	else	
		data = current;
 8000e56:	79bb      	ldrb	r3, [r7, #6]
 8000e58:	73fb      	strb	r3, [r7, #15]
  AS7341_Write_Byte(AS7341_LED,data);
 8000e5a:	7bfb      	ldrb	r3, [r7, #15]
 8000e5c:	4619      	mov	r1, r3
 8000e5e:	2074      	movs	r0, #116	; 0x74
 8000e60:	f7ff fcc5 	bl	80007ee <AS7341_Write_Byte>
  DEV_Delay_ms(100);
 8000e64:	2064      	movs	r0, #100	; 0x64
 8000e66:	f7ff fb81 	bl	800056c <DEV_Delay_ms>
  AS7341_SetBank(0);
 8000e6a:	2000      	movs	r0, #0
 8000e6c:	f7ff ffae 	bl	8000dcc <AS7341_SetBank>
}
 8000e70:	bf00      	nop
 8000e72:	3710      	adds	r7, #16
 8000e74:	46bd      	mov	sp, r7
 8000e76:	bd80      	pop	{r7, pc}

08000e78 <MX_DMA_Init>:
  * Enable DMA controller clock
  * Configure DMA for memory to memory transfers
  *   hdma_memtomem_dma1_channel1
  */
void MX_DMA_Init(void)
{
 8000e78:	b580      	push	{r7, lr}
 8000e7a:	b082      	sub	sp, #8
 8000e7c:	af00      	add	r7, sp, #0

  /* DMA controller clock enable */
  __HAL_RCC_DMA1_CLK_ENABLE();
 8000e7e:	4b1a      	ldr	r3, [pc, #104]	; (8000ee8 <MX_DMA_Init+0x70>)
 8000e80:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8000e82:	4a19      	ldr	r2, [pc, #100]	; (8000ee8 <MX_DMA_Init+0x70>)
 8000e84:	f043 0301 	orr.w	r3, r3, #1
 8000e88:	6493      	str	r3, [r2, #72]	; 0x48
 8000e8a:	4b17      	ldr	r3, [pc, #92]	; (8000ee8 <MX_DMA_Init+0x70>)
 8000e8c:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8000e8e:	f003 0301 	and.w	r3, r3, #1
 8000e92:	607b      	str	r3, [r7, #4]
 8000e94:	687b      	ldr	r3, [r7, #4]

  /* Configure DMA request hdma_memtomem_dma1_channel1 on DMA1_Channel1 */
  hdma_memtomem_dma1_channel1.Instance = DMA1_Channel1;
 8000e96:	4b15      	ldr	r3, [pc, #84]	; (8000eec <MX_DMA_Init+0x74>)
 8000e98:	4a15      	ldr	r2, [pc, #84]	; (8000ef0 <MX_DMA_Init+0x78>)
 8000e9a:	601a      	str	r2, [r3, #0]
  hdma_memtomem_dma1_channel1.Init.Request = DMA_REQUEST_0;
 8000e9c:	4b13      	ldr	r3, [pc, #76]	; (8000eec <MX_DMA_Init+0x74>)
 8000e9e:	2200      	movs	r2, #0
 8000ea0:	605a      	str	r2, [r3, #4]
  hdma_memtomem_dma1_channel1.Init.Direction = DMA_MEMORY_TO_MEMORY;
 8000ea2:	4b12      	ldr	r3, [pc, #72]	; (8000eec <MX_DMA_Init+0x74>)
 8000ea4:	f44f 4280 	mov.w	r2, #16384	; 0x4000
 8000ea8:	609a      	str	r2, [r3, #8]
  hdma_memtomem_dma1_channel1.Init.PeriphInc = DMA_PINC_ENABLE;
 8000eaa:	4b10      	ldr	r3, [pc, #64]	; (8000eec <MX_DMA_Init+0x74>)
 8000eac:	2240      	movs	r2, #64	; 0x40
 8000eae:	60da      	str	r2, [r3, #12]
  hdma_memtomem_dma1_channel1.Init.MemInc = DMA_MINC_ENABLE;
 8000eb0:	4b0e      	ldr	r3, [pc, #56]	; (8000eec <MX_DMA_Init+0x74>)
 8000eb2:	2280      	movs	r2, #128	; 0x80
 8000eb4:	611a      	str	r2, [r3, #16]
  hdma_memtomem_dma1_channel1.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 8000eb6:	4b0d      	ldr	r3, [pc, #52]	; (8000eec <MX_DMA_Init+0x74>)
 8000eb8:	2200      	movs	r2, #0
 8000eba:	615a      	str	r2, [r3, #20]
  hdma_memtomem_dma1_channel1.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 8000ebc:	4b0b      	ldr	r3, [pc, #44]	; (8000eec <MX_DMA_Init+0x74>)
 8000ebe:	2200      	movs	r2, #0
 8000ec0:	619a      	str	r2, [r3, #24]
  hdma_memtomem_dma1_channel1.Init.Mode = DMA_NORMAL;
 8000ec2:	4b0a      	ldr	r3, [pc, #40]	; (8000eec <MX_DMA_Init+0x74>)
 8000ec4:	2200      	movs	r2, #0
 8000ec6:	61da      	str	r2, [r3, #28]
  hdma_memtomem_dma1_channel1.Init.Priority = DMA_PRIORITY_LOW;
 8000ec8:	4b08      	ldr	r3, [pc, #32]	; (8000eec <MX_DMA_Init+0x74>)
 8000eca:	2200      	movs	r2, #0
 8000ecc:	621a      	str	r2, [r3, #32]
  if (HAL_DMA_Init(&hdma_memtomem_dma1_channel1) != HAL_OK)
 8000ece:	4807      	ldr	r0, [pc, #28]	; (8000eec <MX_DMA_Init+0x74>)
 8000ed0:	f000 fd40 	bl	8001954 <HAL_DMA_Init>
 8000ed4:	4603      	mov	r3, r0
 8000ed6:	2b00      	cmp	r3, #0
 8000ed8:	d001      	beq.n	8000ede <MX_DMA_Init+0x66>
  {
    Error_Handler();
 8000eda:	f000 f9ae 	bl	800123a <Error_Handler>
  }

}
 8000ede:	bf00      	nop
 8000ee0:	3708      	adds	r7, #8
 8000ee2:	46bd      	mov	sp, r7
 8000ee4:	bd80      	pop	{r7, pc}
 8000ee6:	bf00      	nop
 8000ee8:	40021000 	.word	0x40021000
 8000eec:	20000088 	.word	0x20000088
 8000ef0:	40020008 	.word	0x40020008

08000ef4 <MX_GPIO_Init>:
        * Output
        * EVENT_OUT
        * EXTI
*/
void MX_GPIO_Init(void)
{
 8000ef4:	b580      	push	{r7, lr}
 8000ef6:	b08a      	sub	sp, #40	; 0x28
 8000ef8:	af00      	add	r7, sp, #0

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000efa:	f107 0314 	add.w	r3, r7, #20
 8000efe:	2200      	movs	r2, #0
 8000f00:	601a      	str	r2, [r3, #0]
 8000f02:	605a      	str	r2, [r3, #4]
 8000f04:	609a      	str	r2, [r3, #8]
 8000f06:	60da      	str	r2, [r3, #12]
 8000f08:	611a      	str	r2, [r3, #16]

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8000f0a:	4b3c      	ldr	r3, [pc, #240]	; (8000ffc <MX_GPIO_Init+0x108>)
 8000f0c:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8000f0e:	4a3b      	ldr	r2, [pc, #236]	; (8000ffc <MX_GPIO_Init+0x108>)
 8000f10:	f043 0304 	orr.w	r3, r3, #4
 8000f14:	64d3      	str	r3, [r2, #76]	; 0x4c
 8000f16:	4b39      	ldr	r3, [pc, #228]	; (8000ffc <MX_GPIO_Init+0x108>)
 8000f18:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8000f1a:	f003 0304 	and.w	r3, r3, #4
 8000f1e:	613b      	str	r3, [r7, #16]
 8000f20:	693b      	ldr	r3, [r7, #16]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 8000f22:	4b36      	ldr	r3, [pc, #216]	; (8000ffc <MX_GPIO_Init+0x108>)
 8000f24:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8000f26:	4a35      	ldr	r2, [pc, #212]	; (8000ffc <MX_GPIO_Init+0x108>)
 8000f28:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8000f2c:	64d3      	str	r3, [r2, #76]	; 0x4c
 8000f2e:	4b33      	ldr	r3, [pc, #204]	; (8000ffc <MX_GPIO_Init+0x108>)
 8000f30:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8000f32:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8000f36:	60fb      	str	r3, [r7, #12]
 8000f38:	68fb      	ldr	r3, [r7, #12]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8000f3a:	4b30      	ldr	r3, [pc, #192]	; (8000ffc <MX_GPIO_Init+0x108>)
 8000f3c:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8000f3e:	4a2f      	ldr	r2, [pc, #188]	; (8000ffc <MX_GPIO_Init+0x108>)
 8000f40:	f043 0301 	orr.w	r3, r3, #1
 8000f44:	64d3      	str	r3, [r2, #76]	; 0x4c
 8000f46:	4b2d      	ldr	r3, [pc, #180]	; (8000ffc <MX_GPIO_Init+0x108>)
 8000f48:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8000f4a:	f003 0301 	and.w	r3, r3, #1
 8000f4e:	60bb      	str	r3, [r7, #8]
 8000f50:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8000f52:	4b2a      	ldr	r3, [pc, #168]	; (8000ffc <MX_GPIO_Init+0x108>)
 8000f54:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8000f56:	4a29      	ldr	r2, [pc, #164]	; (8000ffc <MX_GPIO_Init+0x108>)
 8000f58:	f043 0302 	orr.w	r3, r3, #2
 8000f5c:	64d3      	str	r3, [r2, #76]	; 0x4c
 8000f5e:	4b27      	ldr	r3, [pc, #156]	; (8000ffc <MX_GPIO_Init+0x108>)
 8000f60:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8000f62:	f003 0302 	and.w	r3, r3, #2
 8000f66:	607b      	str	r3, [r7, #4]
 8000f68:	687b      	ldr	r3, [r7, #4]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(LD2_GPIO_Port, LD2_Pin, GPIO_PIN_RESET);
 8000f6a:	2200      	movs	r2, #0
 8000f6c:	2120      	movs	r1, #32
 8000f6e:	f04f 4090 	mov.w	r0, #1207959552	; 0x48000000
 8000f72:	f000 ff51 	bl	8001e18 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(Control_GPIO_Port, Control_Pin, GPIO_PIN_RESET);
 8000f76:	2200      	movs	r2, #0
 8000f78:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8000f7c:	4820      	ldr	r0, [pc, #128]	; (8001000 <MX_GPIO_Init+0x10c>)
 8000f7e:	f000 ff4b 	bl	8001e18 <HAL_GPIO_WritePin>

  /*Configure GPIO pin : PtPin */
  GPIO_InitStruct.Pin = B1_Pin;
 8000f82:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8000f86:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
 8000f88:	f44f 1304 	mov.w	r3, #2162688	; 0x210000
 8000f8c:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_PULLUP;
 8000f8e:	2301      	movs	r3, #1
 8000f90:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(B1_GPIO_Port, &GPIO_InitStruct);
 8000f92:	f107 0314 	add.w	r3, r7, #20
 8000f96:	4619      	mov	r1, r3
 8000f98:	4819      	ldr	r0, [pc, #100]	; (8001000 <MX_GPIO_Init+0x10c>)
 8000f9a:	f000 fd93 	bl	8001ac4 <HAL_GPIO_Init>

  /*Configure GPIO pin : PtPin */
  GPIO_InitStruct.Pin = LD2_Pin;
 8000f9e:	2320      	movs	r3, #32
 8000fa0:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000fa2:	2301      	movs	r3, #1
 8000fa4:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000fa6:	2300      	movs	r3, #0
 8000fa8:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000faa:	2300      	movs	r3, #0
 8000fac:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(LD2_GPIO_Port, &GPIO_InitStruct);
 8000fae:	f107 0314 	add.w	r3, r7, #20
 8000fb2:	4619      	mov	r1, r3
 8000fb4:	f04f 4090 	mov.w	r0, #1207959552	; 0x48000000
 8000fb8:	f000 fd84 	bl	8001ac4 <HAL_GPIO_Init>

  /*Configure GPIO pin : PtPin */
  GPIO_InitStruct.Pin = Control_Pin;
 8000fbc:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8000fc0:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000fc2:	2301      	movs	r3, #1
 8000fc4:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_PULLUP;
 8000fc6:	2301      	movs	r3, #1
 8000fc8:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000fca:	2300      	movs	r3, #0
 8000fcc:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(Control_GPIO_Port, &GPIO_InitStruct);
 8000fce:	f107 0314 	add.w	r3, r7, #20
 8000fd2:	4619      	mov	r1, r3
 8000fd4:	480a      	ldr	r0, [pc, #40]	; (8001000 <MX_GPIO_Init+0x10c>)
 8000fd6:	f000 fd75 	bl	8001ac4 <HAL_GPIO_Init>

  /*Configure GPIO pin : PtPin */
  GPIO_InitStruct.Pin = INT_Pin;
 8000fda:	f44f 6300 	mov.w	r3, #2048	; 0x800
 8000fde:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8000fe0:	2300      	movs	r3, #0
 8000fe2:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000fe4:	2300      	movs	r3, #0
 8000fe6:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(INT_GPIO_Port, &GPIO_InitStruct);
 8000fe8:	f107 0314 	add.w	r3, r7, #20
 8000fec:	4619      	mov	r1, r3
 8000fee:	4804      	ldr	r0, [pc, #16]	; (8001000 <MX_GPIO_Init+0x10c>)
 8000ff0:	f000 fd68 	bl	8001ac4 <HAL_GPIO_Init>

}
 8000ff4:	bf00      	nop
 8000ff6:	3728      	adds	r7, #40	; 0x28
 8000ff8:	46bd      	mov	sp, r7
 8000ffa:	bd80      	pop	{r7, pc}
 8000ffc:	40021000 	.word	0x40021000
 8001000:	48000800 	.word	0x48000800

08001004 <MX_I2C3_Init>:

I2C_HandleTypeDef hi2c3;

/* I2C3 init function */
void MX_I2C3_Init(void)
{
 8001004:	b580      	push	{r7, lr}
 8001006:	af00      	add	r7, sp, #0
  /* USER CODE END I2C3_Init 0 */

  /* USER CODE BEGIN I2C3_Init 1 */

  /* USER CODE END I2C3_Init 1 */
  hi2c3.Instance = I2C3;
 8001008:	4b1b      	ldr	r3, [pc, #108]	; (8001078 <MX_I2C3_Init+0x74>)
 800100a:	4a1c      	ldr	r2, [pc, #112]	; (800107c <MX_I2C3_Init+0x78>)
 800100c:	601a      	str	r2, [r3, #0]
  hi2c3.Init.Timing = 0x10909CEC;
 800100e:	4b1a      	ldr	r3, [pc, #104]	; (8001078 <MX_I2C3_Init+0x74>)
 8001010:	4a1b      	ldr	r2, [pc, #108]	; (8001080 <MX_I2C3_Init+0x7c>)
 8001012:	605a      	str	r2, [r3, #4]
  hi2c3.Init.OwnAddress1 = 0;
 8001014:	4b18      	ldr	r3, [pc, #96]	; (8001078 <MX_I2C3_Init+0x74>)
 8001016:	2200      	movs	r2, #0
 8001018:	609a      	str	r2, [r3, #8]
  hi2c3.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 800101a:	4b17      	ldr	r3, [pc, #92]	; (8001078 <MX_I2C3_Init+0x74>)
 800101c:	2201      	movs	r2, #1
 800101e:	60da      	str	r2, [r3, #12]
  hi2c3.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 8001020:	4b15      	ldr	r3, [pc, #84]	; (8001078 <MX_I2C3_Init+0x74>)
 8001022:	2200      	movs	r2, #0
 8001024:	611a      	str	r2, [r3, #16]
  hi2c3.Init.OwnAddress2 = 0;
 8001026:	4b14      	ldr	r3, [pc, #80]	; (8001078 <MX_I2C3_Init+0x74>)
 8001028:	2200      	movs	r2, #0
 800102a:	615a      	str	r2, [r3, #20]
  hi2c3.Init.OwnAddress2Masks = I2C_OA2_NOMASK;
 800102c:	4b12      	ldr	r3, [pc, #72]	; (8001078 <MX_I2C3_Init+0x74>)
 800102e:	2200      	movs	r2, #0
 8001030:	619a      	str	r2, [r3, #24]
  hi2c3.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 8001032:	4b11      	ldr	r3, [pc, #68]	; (8001078 <MX_I2C3_Init+0x74>)
 8001034:	2200      	movs	r2, #0
 8001036:	61da      	str	r2, [r3, #28]
  hi2c3.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 8001038:	4b0f      	ldr	r3, [pc, #60]	; (8001078 <MX_I2C3_Init+0x74>)
 800103a:	2200      	movs	r2, #0
 800103c:	621a      	str	r2, [r3, #32]
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 800103e:	480e      	ldr	r0, [pc, #56]	; (8001078 <MX_I2C3_Init+0x74>)
 8001040:	f000 ff02 	bl	8001e48 <HAL_I2C_Init>
 8001044:	4603      	mov	r3, r0
 8001046:	2b00      	cmp	r3, #0
 8001048:	d001      	beq.n	800104e <MX_I2C3_Init+0x4a>
  {
    Error_Handler();
 800104a:	f000 f8f6 	bl	800123a <Error_Handler>
  }

  /** Configure Analogue filter
  */
  if (HAL_I2CEx_ConfigAnalogFilter(&hi2c3, I2C_ANALOGFILTER_ENABLE) != HAL_OK)
 800104e:	2100      	movs	r1, #0
 8001050:	4809      	ldr	r0, [pc, #36]	; (8001078 <MX_I2C3_Init+0x74>)
 8001052:	f001 fc7b 	bl	800294c <HAL_I2CEx_ConfigAnalogFilter>
 8001056:	4603      	mov	r3, r0
 8001058:	2b00      	cmp	r3, #0
 800105a:	d001      	beq.n	8001060 <MX_I2C3_Init+0x5c>
  {
    Error_Handler();
 800105c:	f000 f8ed 	bl	800123a <Error_Handler>
  }

  /** Configure Digital filter
  */
  if (HAL_I2CEx_ConfigDigitalFilter(&hi2c3, 0) != HAL_OK)
 8001060:	2100      	movs	r1, #0
 8001062:	4805      	ldr	r0, [pc, #20]	; (8001078 <MX_I2C3_Init+0x74>)
 8001064:	f001 fcbd 	bl	80029e2 <HAL_I2CEx_ConfigDigitalFilter>
 8001068:	4603      	mov	r3, r0
 800106a:	2b00      	cmp	r3, #0
 800106c:	d001      	beq.n	8001072 <MX_I2C3_Init+0x6e>
  {
    Error_Handler();
 800106e:	f000 f8e4 	bl	800123a <Error_Handler>
  }
  /* USER CODE BEGIN I2C3_Init 2 */

  /* USER CODE END I2C3_Init 2 */

}
 8001072:	bf00      	nop
 8001074:	bd80      	pop	{r7, pc}
 8001076:	bf00      	nop
 8001078:	200000d0 	.word	0x200000d0
 800107c:	40005c00 	.word	0x40005c00
 8001080:	10909cec 	.word	0x10909cec

08001084 <HAL_I2C_MspInit>:

void HAL_I2C_MspInit(I2C_HandleTypeDef* i2cHandle)
{
 8001084:	b580      	push	{r7, lr}
 8001086:	b0ac      	sub	sp, #176	; 0xb0
 8001088:	af00      	add	r7, sp, #0
 800108a:	6078      	str	r0, [r7, #4]

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800108c:	f107 039c 	add.w	r3, r7, #156	; 0x9c
 8001090:	2200      	movs	r2, #0
 8001092:	601a      	str	r2, [r3, #0]
 8001094:	605a      	str	r2, [r3, #4]
 8001096:	609a      	str	r2, [r3, #8]
 8001098:	60da      	str	r2, [r3, #12]
 800109a:	611a      	str	r2, [r3, #16]
  RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 800109c:	f107 0314 	add.w	r3, r7, #20
 80010a0:	2288      	movs	r2, #136	; 0x88
 80010a2:	2100      	movs	r1, #0
 80010a4:	4618      	mov	r0, r3
 80010a6:	f004 f8a9 	bl	80051fc <memset>
  if(i2cHandle->Instance==I2C3)
 80010aa:	687b      	ldr	r3, [r7, #4]
 80010ac:	681b      	ldr	r3, [r3, #0]
 80010ae:	4a21      	ldr	r2, [pc, #132]	; (8001134 <HAL_I2C_MspInit+0xb0>)
 80010b0:	4293      	cmp	r3, r2
 80010b2:	d13b      	bne.n	800112c <HAL_I2C_MspInit+0xa8>

  /* USER CODE END I2C3_MspInit 0 */

  /** Initializes the peripherals clock
  */
    PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_I2C3;
 80010b4:	f44f 7380 	mov.w	r3, #256	; 0x100
 80010b8:	617b      	str	r3, [r7, #20]
    PeriphClkInit.I2c3ClockSelection = RCC_I2C3CLKSOURCE_PCLK1;
 80010ba:	2300      	movs	r3, #0
 80010bc:	66fb      	str	r3, [r7, #108]	; 0x6c
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 80010be:	f107 0314 	add.w	r3, r7, #20
 80010c2:	4618      	mov	r0, r3
 80010c4:	f002 fb3e 	bl	8003744 <HAL_RCCEx_PeriphCLKConfig>
 80010c8:	4603      	mov	r3, r0
 80010ca:	2b00      	cmp	r3, #0
 80010cc:	d001      	beq.n	80010d2 <HAL_I2C_MspInit+0x4e>
    {
      Error_Handler();
 80010ce:	f000 f8b4 	bl	800123a <Error_Handler>
    }

    __HAL_RCC_GPIOC_CLK_ENABLE();
 80010d2:	4b19      	ldr	r3, [pc, #100]	; (8001138 <HAL_I2C_MspInit+0xb4>)
 80010d4:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80010d6:	4a18      	ldr	r2, [pc, #96]	; (8001138 <HAL_I2C_MspInit+0xb4>)
 80010d8:	f043 0304 	orr.w	r3, r3, #4
 80010dc:	64d3      	str	r3, [r2, #76]	; 0x4c
 80010de:	4b16      	ldr	r3, [pc, #88]	; (8001138 <HAL_I2C_MspInit+0xb4>)
 80010e0:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80010e2:	f003 0304 	and.w	r3, r3, #4
 80010e6:	613b      	str	r3, [r7, #16]
 80010e8:	693b      	ldr	r3, [r7, #16]
    /**I2C3 GPIO Configuration
    PC0     ------> I2C3_SCL
    PC1     ------> I2C3_SDA
    */
    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 80010ea:	2303      	movs	r3, #3
 80010ec:	f8c7 309c 	str.w	r3, [r7, #156]	; 0x9c
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 80010f0:	2312      	movs	r3, #18
 80010f2:	f8c7 30a0 	str.w	r3, [r7, #160]	; 0xa0
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80010f6:	2300      	movs	r3, #0
 80010f8:	f8c7 30a4 	str.w	r3, [r7, #164]	; 0xa4
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80010fc:	2303      	movs	r3, #3
 80010fe:	f8c7 30a8 	str.w	r3, [r7, #168]	; 0xa8
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8001102:	2304      	movs	r3, #4
 8001104:	f8c7 30ac 	str.w	r3, [r7, #172]	; 0xac
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001108:	f107 039c 	add.w	r3, r7, #156	; 0x9c
 800110c:	4619      	mov	r1, r3
 800110e:	480b      	ldr	r0, [pc, #44]	; (800113c <HAL_I2C_MspInit+0xb8>)
 8001110:	f000 fcd8 	bl	8001ac4 <HAL_GPIO_Init>

    /* I2C3 clock enable */
    __HAL_RCC_I2C3_CLK_ENABLE();
 8001114:	4b08      	ldr	r3, [pc, #32]	; (8001138 <HAL_I2C_MspInit+0xb4>)
 8001116:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8001118:	4a07      	ldr	r2, [pc, #28]	; (8001138 <HAL_I2C_MspInit+0xb4>)
 800111a:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 800111e:	6593      	str	r3, [r2, #88]	; 0x58
 8001120:	4b05      	ldr	r3, [pc, #20]	; (8001138 <HAL_I2C_MspInit+0xb4>)
 8001122:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8001124:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 8001128:	60fb      	str	r3, [r7, #12]
 800112a:	68fb      	ldr	r3, [r7, #12]
  /* USER CODE BEGIN I2C3_MspInit 1 */

  /* USER CODE END I2C3_MspInit 1 */
  }
}
 800112c:	bf00      	nop
 800112e:	37b0      	adds	r7, #176	; 0xb0
 8001130:	46bd      	mov	sp, r7
 8001132:	bd80      	pop	{r7, pc}
 8001134:	40005c00 	.word	0x40005c00
 8001138:	40021000 	.word	0x40021000
 800113c:	48000800 	.word	0x48000800

08001140 <__io_putchar>:
#else
#define PUTCHAR_PROTOTYPE int fputc(int ch, FILE *f)
#endif

PUTCHAR_PROTOTYPE
{
 8001140:	b580      	push	{r7, lr}
 8001142:	b082      	sub	sp, #8
 8001144:	af00      	add	r7, sp, #0
 8001146:	6078      	str	r0, [r7, #4]
  HAL_UART_Transmit(&huart2, (uint8_t *)&ch, 1, HAL_MAX_DELAY);
 8001148:	1d39      	adds	r1, r7, #4
 800114a:	f04f 33ff 	mov.w	r3, #4294967295
 800114e:	2201      	movs	r2, #1
 8001150:	4803      	ldr	r0, [pc, #12]	; (8001160 <__io_putchar+0x20>)
 8001152:	f003 f8f3 	bl	800433c <HAL_UART_Transmit>
  return ch;
 8001156:	687b      	ldr	r3, [r7, #4]
}
 8001158:	4618      	mov	r0, r3
 800115a:	3708      	adds	r7, #8
 800115c:	46bd      	mov	sp, r7
 800115e:	bd80      	pop	{r7, pc}
 8001160:	20000174 	.word	0x20000174

08001164 <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 8001164:	b580      	push	{r7, lr}
 8001166:	af00      	add	r7, sp, #0
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 8001168:	f000 fa6e 	bl	8001648 <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 800116c:	f000 f814 	bl	8001198 <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 8001170:	f7ff fec0 	bl	8000ef4 <MX_GPIO_Init>
  MX_DMA_Init();
 8001174:	f7ff fe80 	bl	8000e78 <MX_DMA_Init>
  MX_USART2_UART_Init();
 8001178:	f000 f9b0 	bl	80014dc <MX_USART2_UART_Init>
  MX_TIM16_Init();
 800117c:	f000 f966 	bl	800144c <MX_TIM16_Init>
  MX_I2C3_Init();
 8001180:	f7ff ff40 	bl	8001004 <MX_I2C3_Init>
  /* USER CODE BEGIN 2 */

  printf("AS7341 Spectral Sensor Code...\r\n");
 8001184:	4803      	ldr	r0, [pc, #12]	; (8001194 <main+0x30>)
 8001186:	f003 ff59 	bl	800503c <puts>
  DEV_ModuleInit();
 800118a:	f7ff fa5d 	bl	8000648 <DEV_ModuleInit>
  {
    /* USER CODE END WHILE */

    /* USER CODE BEGIN 3 */

	Getdata_test();
 800118e:	f7ff fa65 	bl	800065c <Getdata_test>
 8001192:	e7fc      	b.n	800118e <main+0x2a>
 8001194:	08005eb0 	.word	0x08005eb0

08001198 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8001198:	b580      	push	{r7, lr}
 800119a:	b096      	sub	sp, #88	; 0x58
 800119c:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 800119e:	f107 0314 	add.w	r3, r7, #20
 80011a2:	2244      	movs	r2, #68	; 0x44
 80011a4:	2100      	movs	r1, #0
 80011a6:	4618      	mov	r0, r3
 80011a8:	f004 f828 	bl	80051fc <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 80011ac:	463b      	mov	r3, r7
 80011ae:	2200      	movs	r2, #0
 80011b0:	601a      	str	r2, [r3, #0]
 80011b2:	605a      	str	r2, [r3, #4]
 80011b4:	609a      	str	r2, [r3, #8]
 80011b6:	60da      	str	r2, [r3, #12]
 80011b8:	611a      	str	r2, [r3, #16]

  /** Configure the main internal regulator output voltage
  */
  if (HAL_PWREx_ControlVoltageScaling(PWR_REGULATOR_VOLTAGE_SCALE1) != HAL_OK)
 80011ba:	f44f 7000 	mov.w	r0, #512	; 0x200
 80011be:	f001 fc6b 	bl	8002a98 <HAL_PWREx_ControlVoltageScaling>
 80011c2:	4603      	mov	r3, r0
 80011c4:	2b00      	cmp	r3, #0
 80011c6:	d001      	beq.n	80011cc <SystemClock_Config+0x34>
  {
    Error_Handler();
 80011c8:	f000 f837 	bl	800123a <Error_Handler>
  }

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 80011cc:	2302      	movs	r3, #2
 80011ce:	617b      	str	r3, [r7, #20]
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 80011d0:	f44f 7380 	mov.w	r3, #256	; 0x100
 80011d4:	623b      	str	r3, [r7, #32]
  RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 80011d6:	2310      	movs	r3, #16
 80011d8:	627b      	str	r3, [r7, #36]	; 0x24
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 80011da:	2302      	movs	r3, #2
 80011dc:	63fb      	str	r3, [r7, #60]	; 0x3c
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 80011de:	2302      	movs	r3, #2
 80011e0:	643b      	str	r3, [r7, #64]	; 0x40
  RCC_OscInitStruct.PLL.PLLM = 1;
 80011e2:	2301      	movs	r3, #1
 80011e4:	647b      	str	r3, [r7, #68]	; 0x44
  RCC_OscInitStruct.PLL.PLLN = 10;
 80011e6:	230a      	movs	r3, #10
 80011e8:	64bb      	str	r3, [r7, #72]	; 0x48
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV7;
 80011ea:	2307      	movs	r3, #7
 80011ec:	64fb      	str	r3, [r7, #76]	; 0x4c
  RCC_OscInitStruct.PLL.PLLQ = RCC_PLLQ_DIV2;
 80011ee:	2302      	movs	r3, #2
 80011f0:	653b      	str	r3, [r7, #80]	; 0x50
  RCC_OscInitStruct.PLL.PLLR = RCC_PLLR_DIV2;
 80011f2:	2302      	movs	r3, #2
 80011f4:	657b      	str	r3, [r7, #84]	; 0x54
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 80011f6:	f107 0314 	add.w	r3, r7, #20
 80011fa:	4618      	mov	r0, r3
 80011fc:	f001 fca2 	bl	8002b44 <HAL_RCC_OscConfig>
 8001200:	4603      	mov	r3, r0
 8001202:	2b00      	cmp	r3, #0
 8001204:	d001      	beq.n	800120a <SystemClock_Config+0x72>
  {
    Error_Handler();
 8001206:	f000 f818 	bl	800123a <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 800120a:	230f      	movs	r3, #15
 800120c:	603b      	str	r3, [r7, #0]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 800120e:	2303      	movs	r3, #3
 8001210:	607b      	str	r3, [r7, #4]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8001212:	2300      	movs	r3, #0
 8001214:	60bb      	str	r3, [r7, #8]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 8001216:	2300      	movs	r3, #0
 8001218:	60fb      	str	r3, [r7, #12]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 800121a:	2300      	movs	r3, #0
 800121c:	613b      	str	r3, [r7, #16]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_4) != HAL_OK)
 800121e:	463b      	mov	r3, r7
 8001220:	2104      	movs	r1, #4
 8001222:	4618      	mov	r0, r3
 8001224:	f002 f86a 	bl	80032fc <HAL_RCC_ClockConfig>
 8001228:	4603      	mov	r3, r0
 800122a:	2b00      	cmp	r3, #0
 800122c:	d001      	beq.n	8001232 <SystemClock_Config+0x9a>
  {
    Error_Handler();
 800122e:	f000 f804 	bl	800123a <Error_Handler>
  }
}
 8001232:	bf00      	nop
 8001234:	3758      	adds	r7, #88	; 0x58
 8001236:	46bd      	mov	sp, r7
 8001238:	bd80      	pop	{r7, pc}

0800123a <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 800123a:	b480      	push	{r7}
 800123c:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 800123e:	b672      	cpsid	i
}
 8001240:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 8001242:	e7fe      	b.n	8001242 <Error_Handler+0x8>

08001244 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8001244:	b480      	push	{r7}
 8001246:	b083      	sub	sp, #12
 8001248:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 800124a:	4b0f      	ldr	r3, [pc, #60]	; (8001288 <HAL_MspInit+0x44>)
 800124c:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800124e:	4a0e      	ldr	r2, [pc, #56]	; (8001288 <HAL_MspInit+0x44>)
 8001250:	f043 0301 	orr.w	r3, r3, #1
 8001254:	6613      	str	r3, [r2, #96]	; 0x60
 8001256:	4b0c      	ldr	r3, [pc, #48]	; (8001288 <HAL_MspInit+0x44>)
 8001258:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800125a:	f003 0301 	and.w	r3, r3, #1
 800125e:	607b      	str	r3, [r7, #4]
 8001260:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_PWR_CLK_ENABLE();
 8001262:	4b09      	ldr	r3, [pc, #36]	; (8001288 <HAL_MspInit+0x44>)
 8001264:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8001266:	4a08      	ldr	r2, [pc, #32]	; (8001288 <HAL_MspInit+0x44>)
 8001268:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 800126c:	6593      	str	r3, [r2, #88]	; 0x58
 800126e:	4b06      	ldr	r3, [pc, #24]	; (8001288 <HAL_MspInit+0x44>)
 8001270:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8001272:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001276:	603b      	str	r3, [r7, #0]
 8001278:	683b      	ldr	r3, [r7, #0]
  /* System interrupt init*/

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 800127a:	bf00      	nop
 800127c:	370c      	adds	r7, #12
 800127e:	46bd      	mov	sp, r7
 8001280:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001284:	4770      	bx	lr
 8001286:	bf00      	nop
 8001288:	40021000 	.word	0x40021000

0800128c <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 800128c:	b480      	push	{r7}
 800128e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  while (1)
 8001290:	e7fe      	b.n	8001290 <NMI_Handler+0x4>

08001292 <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 8001292:	b480      	push	{r7}
 8001294:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8001296:	e7fe      	b.n	8001296 <HardFault_Handler+0x4>

08001298 <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 8001298:	b480      	push	{r7}
 800129a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 800129c:	e7fe      	b.n	800129c <MemManage_Handler+0x4>

0800129e <BusFault_Handler>:

/**
  * @brief This function handles Prefetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 800129e:	b480      	push	{r7}
 80012a0:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 80012a2:	e7fe      	b.n	80012a2 <BusFault_Handler+0x4>

080012a4 <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 80012a4:	b480      	push	{r7}
 80012a6:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 80012a8:	e7fe      	b.n	80012a8 <UsageFault_Handler+0x4>

080012aa <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 80012aa:	b480      	push	{r7}
 80012ac:	af00      	add	r7, sp, #0

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 80012ae:	bf00      	nop
 80012b0:	46bd      	mov	sp, r7
 80012b2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80012b6:	4770      	bx	lr

080012b8 <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 80012b8:	b480      	push	{r7}
 80012ba:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 80012bc:	bf00      	nop
 80012be:	46bd      	mov	sp, r7
 80012c0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80012c4:	4770      	bx	lr

080012c6 <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 80012c6:	b480      	push	{r7}
 80012c8:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 80012ca:	bf00      	nop
 80012cc:	46bd      	mov	sp, r7
 80012ce:	f85d 7b04 	ldr.w	r7, [sp], #4
 80012d2:	4770      	bx	lr

080012d4 <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 80012d4:	b580      	push	{r7, lr}
 80012d6:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 80012d8:	f000 fa12 	bl	8001700 <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 80012dc:	bf00      	nop
 80012de:	bd80      	pop	{r7, pc}

080012e0 <_read>:
  _kill(status, -1);
  while (1) {}    /* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 80012e0:	b580      	push	{r7, lr}
 80012e2:	b086      	sub	sp, #24
 80012e4:	af00      	add	r7, sp, #0
 80012e6:	60f8      	str	r0, [r7, #12]
 80012e8:	60b9      	str	r1, [r7, #8]
 80012ea:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80012ec:	2300      	movs	r3, #0
 80012ee:	617b      	str	r3, [r7, #20]
 80012f0:	e00a      	b.n	8001308 <_read+0x28>
  {
    *ptr++ = __io_getchar();
 80012f2:	f3af 8000 	nop.w
 80012f6:	4601      	mov	r1, r0
 80012f8:	68bb      	ldr	r3, [r7, #8]
 80012fa:	1c5a      	adds	r2, r3, #1
 80012fc:	60ba      	str	r2, [r7, #8]
 80012fe:	b2ca      	uxtb	r2, r1
 8001300:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001302:	697b      	ldr	r3, [r7, #20]
 8001304:	3301      	adds	r3, #1
 8001306:	617b      	str	r3, [r7, #20]
 8001308:	697a      	ldr	r2, [r7, #20]
 800130a:	687b      	ldr	r3, [r7, #4]
 800130c:	429a      	cmp	r2, r3
 800130e:	dbf0      	blt.n	80012f2 <_read+0x12>
  }

  return len;
 8001310:	687b      	ldr	r3, [r7, #4]
}
 8001312:	4618      	mov	r0, r3
 8001314:	3718      	adds	r7, #24
 8001316:	46bd      	mov	sp, r7
 8001318:	bd80      	pop	{r7, pc}

0800131a <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 800131a:	b580      	push	{r7, lr}
 800131c:	b086      	sub	sp, #24
 800131e:	af00      	add	r7, sp, #0
 8001320:	60f8      	str	r0, [r7, #12]
 8001322:	60b9      	str	r1, [r7, #8]
 8001324:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001326:	2300      	movs	r3, #0
 8001328:	617b      	str	r3, [r7, #20]
 800132a:	e009      	b.n	8001340 <_write+0x26>
  {
    __io_putchar(*ptr++);
 800132c:	68bb      	ldr	r3, [r7, #8]
 800132e:	1c5a      	adds	r2, r3, #1
 8001330:	60ba      	str	r2, [r7, #8]
 8001332:	781b      	ldrb	r3, [r3, #0]
 8001334:	4618      	mov	r0, r3
 8001336:	f7ff ff03 	bl	8001140 <__io_putchar>
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800133a:	697b      	ldr	r3, [r7, #20]
 800133c:	3301      	adds	r3, #1
 800133e:	617b      	str	r3, [r7, #20]
 8001340:	697a      	ldr	r2, [r7, #20]
 8001342:	687b      	ldr	r3, [r7, #4]
 8001344:	429a      	cmp	r2, r3
 8001346:	dbf1      	blt.n	800132c <_write+0x12>
  }
  return len;
 8001348:	687b      	ldr	r3, [r7, #4]
}
 800134a:	4618      	mov	r0, r3
 800134c:	3718      	adds	r7, #24
 800134e:	46bd      	mov	sp, r7
 8001350:	bd80      	pop	{r7, pc}

08001352 <_close>:

int _close(int file)
{
 8001352:	b480      	push	{r7}
 8001354:	b083      	sub	sp, #12
 8001356:	af00      	add	r7, sp, #0
 8001358:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 800135a:	f04f 33ff 	mov.w	r3, #4294967295
}
 800135e:	4618      	mov	r0, r3
 8001360:	370c      	adds	r7, #12
 8001362:	46bd      	mov	sp, r7
 8001364:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001368:	4770      	bx	lr

0800136a <_fstat>:


int _fstat(int file, struct stat *st)
{
 800136a:	b480      	push	{r7}
 800136c:	b083      	sub	sp, #12
 800136e:	af00      	add	r7, sp, #0
 8001370:	6078      	str	r0, [r7, #4]
 8001372:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 8001374:	683b      	ldr	r3, [r7, #0]
 8001376:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 800137a:	605a      	str	r2, [r3, #4]
  return 0;
 800137c:	2300      	movs	r3, #0
}
 800137e:	4618      	mov	r0, r3
 8001380:	370c      	adds	r7, #12
 8001382:	46bd      	mov	sp, r7
 8001384:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001388:	4770      	bx	lr

0800138a <_isatty>:

int _isatty(int file)
{
 800138a:	b480      	push	{r7}
 800138c:	b083      	sub	sp, #12
 800138e:	af00      	add	r7, sp, #0
 8001390:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 8001392:	2301      	movs	r3, #1
}
 8001394:	4618      	mov	r0, r3
 8001396:	370c      	adds	r7, #12
 8001398:	46bd      	mov	sp, r7
 800139a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800139e:	4770      	bx	lr

080013a0 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 80013a0:	b480      	push	{r7}
 80013a2:	b085      	sub	sp, #20
 80013a4:	af00      	add	r7, sp, #0
 80013a6:	60f8      	str	r0, [r7, #12]
 80013a8:	60b9      	str	r1, [r7, #8]
 80013aa:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 80013ac:	2300      	movs	r3, #0
}
 80013ae:	4618      	mov	r0, r3
 80013b0:	3714      	adds	r7, #20
 80013b2:	46bd      	mov	sp, r7
 80013b4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80013b8:	4770      	bx	lr
	...

080013bc <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 80013bc:	b580      	push	{r7, lr}
 80013be:	b086      	sub	sp, #24
 80013c0:	af00      	add	r7, sp, #0
 80013c2:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 80013c4:	4a14      	ldr	r2, [pc, #80]	; (8001418 <_sbrk+0x5c>)
 80013c6:	4b15      	ldr	r3, [pc, #84]	; (800141c <_sbrk+0x60>)
 80013c8:	1ad3      	subs	r3, r2, r3
 80013ca:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 80013cc:	697b      	ldr	r3, [r7, #20]
 80013ce:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 80013d0:	4b13      	ldr	r3, [pc, #76]	; (8001420 <_sbrk+0x64>)
 80013d2:	681b      	ldr	r3, [r3, #0]
 80013d4:	2b00      	cmp	r3, #0
 80013d6:	d102      	bne.n	80013de <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 80013d8:	4b11      	ldr	r3, [pc, #68]	; (8001420 <_sbrk+0x64>)
 80013da:	4a12      	ldr	r2, [pc, #72]	; (8001424 <_sbrk+0x68>)
 80013dc:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 80013de:	4b10      	ldr	r3, [pc, #64]	; (8001420 <_sbrk+0x64>)
 80013e0:	681a      	ldr	r2, [r3, #0]
 80013e2:	687b      	ldr	r3, [r7, #4]
 80013e4:	4413      	add	r3, r2
 80013e6:	693a      	ldr	r2, [r7, #16]
 80013e8:	429a      	cmp	r2, r3
 80013ea:	d207      	bcs.n	80013fc <_sbrk+0x40>
  {
    errno = ENOMEM;
 80013ec:	f003 ff54 	bl	8005298 <__errno>
 80013f0:	4603      	mov	r3, r0
 80013f2:	220c      	movs	r2, #12
 80013f4:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 80013f6:	f04f 33ff 	mov.w	r3, #4294967295
 80013fa:	e009      	b.n	8001410 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 80013fc:	4b08      	ldr	r3, [pc, #32]	; (8001420 <_sbrk+0x64>)
 80013fe:	681b      	ldr	r3, [r3, #0]
 8001400:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 8001402:	4b07      	ldr	r3, [pc, #28]	; (8001420 <_sbrk+0x64>)
 8001404:	681a      	ldr	r2, [r3, #0]
 8001406:	687b      	ldr	r3, [r7, #4]
 8001408:	4413      	add	r3, r2
 800140a:	4a05      	ldr	r2, [pc, #20]	; (8001420 <_sbrk+0x64>)
 800140c:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 800140e:	68fb      	ldr	r3, [r7, #12]
}
 8001410:	4618      	mov	r0, r3
 8001412:	3718      	adds	r7, #24
 8001414:	46bd      	mov	sp, r7
 8001416:	bd80      	pop	{r7, pc}
 8001418:	20018000 	.word	0x20018000
 800141c:	00000400 	.word	0x00000400
 8001420:	20000124 	.word	0x20000124
 8001424:	20000350 	.word	0x20000350

08001428 <SystemInit>:
  * @brief  Setup the microcontroller system.
  * @retval None
  */

void SystemInit(void)
{
 8001428:	b480      	push	{r7}
 800142a:	af00      	add	r7, sp, #0
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET;
#endif

  /* FPU settings ------------------------------------------------------------*/
#if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
  SCB->CPACR |= ((3UL << 20U)|(3UL << 22U));  /* set CP10 and CP11 Full Access */
 800142c:	4b06      	ldr	r3, [pc, #24]	; (8001448 <SystemInit+0x20>)
 800142e:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8001432:	4a05      	ldr	r2, [pc, #20]	; (8001448 <SystemInit+0x20>)
 8001434:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 8001438:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
#endif
}
 800143c:	bf00      	nop
 800143e:	46bd      	mov	sp, r7
 8001440:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001444:	4770      	bx	lr
 8001446:	bf00      	nop
 8001448:	e000ed00 	.word	0xe000ed00

0800144c <MX_TIM16_Init>:

TIM_HandleTypeDef htim16;

/* TIM16 init function */
void MX_TIM16_Init(void)
{
 800144c:	b580      	push	{r7, lr}
 800144e:	af00      	add	r7, sp, #0
  /* USER CODE END TIM16_Init 0 */

  /* USER CODE BEGIN TIM16_Init 1 */

  /* USER CODE END TIM16_Init 1 */
  htim16.Instance = TIM16;
 8001450:	4b10      	ldr	r3, [pc, #64]	; (8001494 <MX_TIM16_Init+0x48>)
 8001452:	4a11      	ldr	r2, [pc, #68]	; (8001498 <MX_TIM16_Init+0x4c>)
 8001454:	601a      	str	r2, [r3, #0]
  htim16.Init.Prescaler = 299;
 8001456:	4b0f      	ldr	r3, [pc, #60]	; (8001494 <MX_TIM16_Init+0x48>)
 8001458:	f240 122b 	movw	r2, #299	; 0x12b
 800145c:	605a      	str	r2, [r3, #4]
  htim16.Init.CounterMode = TIM_COUNTERMODE_UP;
 800145e:	4b0d      	ldr	r3, [pc, #52]	; (8001494 <MX_TIM16_Init+0x48>)
 8001460:	2200      	movs	r2, #0
 8001462:	609a      	str	r2, [r3, #8]
  htim16.Init.Period = 65535;
 8001464:	4b0b      	ldr	r3, [pc, #44]	; (8001494 <MX_TIM16_Init+0x48>)
 8001466:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800146a:	60da      	str	r2, [r3, #12]
  htim16.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 800146c:	4b09      	ldr	r3, [pc, #36]	; (8001494 <MX_TIM16_Init+0x48>)
 800146e:	2200      	movs	r2, #0
 8001470:	611a      	str	r2, [r3, #16]
  htim16.Init.RepetitionCounter = 0;
 8001472:	4b08      	ldr	r3, [pc, #32]	; (8001494 <MX_TIM16_Init+0x48>)
 8001474:	2200      	movs	r2, #0
 8001476:	615a      	str	r2, [r3, #20]
  htim16.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8001478:	4b06      	ldr	r3, [pc, #24]	; (8001494 <MX_TIM16_Init+0x48>)
 800147a:	2200      	movs	r2, #0
 800147c:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim16) != HAL_OK)
 800147e:	4805      	ldr	r0, [pc, #20]	; (8001494 <MX_TIM16_Init+0x48>)
 8001480:	f002 fe1c 	bl	80040bc <HAL_TIM_Base_Init>
 8001484:	4603      	mov	r3, r0
 8001486:	2b00      	cmp	r3, #0
 8001488:	d001      	beq.n	800148e <MX_TIM16_Init+0x42>
  {
    Error_Handler();
 800148a:	f7ff fed6 	bl	800123a <Error_Handler>
  }
  /* USER CODE BEGIN TIM16_Init 2 */

  /* USER CODE END TIM16_Init 2 */

}
 800148e:	bf00      	nop
 8001490:	bd80      	pop	{r7, pc}
 8001492:	bf00      	nop
 8001494:	20000128 	.word	0x20000128
 8001498:	40014400 	.word	0x40014400

0800149c <HAL_TIM_Base_MspInit>:

void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* tim_baseHandle)
{
 800149c:	b480      	push	{r7}
 800149e:	b085      	sub	sp, #20
 80014a0:	af00      	add	r7, sp, #0
 80014a2:	6078      	str	r0, [r7, #4]

  if(tim_baseHandle->Instance==TIM16)
 80014a4:	687b      	ldr	r3, [r7, #4]
 80014a6:	681b      	ldr	r3, [r3, #0]
 80014a8:	4a0a      	ldr	r2, [pc, #40]	; (80014d4 <HAL_TIM_Base_MspInit+0x38>)
 80014aa:	4293      	cmp	r3, r2
 80014ac:	d10b      	bne.n	80014c6 <HAL_TIM_Base_MspInit+0x2a>
  {
  /* USER CODE BEGIN TIM16_MspInit 0 */

  /* USER CODE END TIM16_MspInit 0 */
    /* TIM16 clock enable */
    __HAL_RCC_TIM16_CLK_ENABLE();
 80014ae:	4b0a      	ldr	r3, [pc, #40]	; (80014d8 <HAL_TIM_Base_MspInit+0x3c>)
 80014b0:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 80014b2:	4a09      	ldr	r2, [pc, #36]	; (80014d8 <HAL_TIM_Base_MspInit+0x3c>)
 80014b4:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 80014b8:	6613      	str	r3, [r2, #96]	; 0x60
 80014ba:	4b07      	ldr	r3, [pc, #28]	; (80014d8 <HAL_TIM_Base_MspInit+0x3c>)
 80014bc:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 80014be:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80014c2:	60fb      	str	r3, [r7, #12]
 80014c4:	68fb      	ldr	r3, [r7, #12]
  /* USER CODE BEGIN TIM16_MspInit 1 */

  /* USER CODE END TIM16_MspInit 1 */
  }
}
 80014c6:	bf00      	nop
 80014c8:	3714      	adds	r7, #20
 80014ca:	46bd      	mov	sp, r7
 80014cc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80014d0:	4770      	bx	lr
 80014d2:	bf00      	nop
 80014d4:	40014400 	.word	0x40014400
 80014d8:	40021000 	.word	0x40021000

080014dc <MX_USART2_UART_Init>:
UART_HandleTypeDef huart2;

/* USART2 init function */

void MX_USART2_UART_Init(void)
{
 80014dc:	b580      	push	{r7, lr}
 80014de:	af00      	add	r7, sp, #0
  /* USER CODE END USART2_Init 0 */

  /* USER CODE BEGIN USART2_Init 1 */

  /* USER CODE END USART2_Init 1 */
  huart2.Instance = USART2;
 80014e0:	4b14      	ldr	r3, [pc, #80]	; (8001534 <MX_USART2_UART_Init+0x58>)
 80014e2:	4a15      	ldr	r2, [pc, #84]	; (8001538 <MX_USART2_UART_Init+0x5c>)
 80014e4:	601a      	str	r2, [r3, #0]
  huart2.Init.BaudRate = 115200;
 80014e6:	4b13      	ldr	r3, [pc, #76]	; (8001534 <MX_USART2_UART_Init+0x58>)
 80014e8:	f44f 32e1 	mov.w	r2, #115200	; 0x1c200
 80014ec:	605a      	str	r2, [r3, #4]
  huart2.Init.WordLength = UART_WORDLENGTH_8B;
 80014ee:	4b11      	ldr	r3, [pc, #68]	; (8001534 <MX_USART2_UART_Init+0x58>)
 80014f0:	2200      	movs	r2, #0
 80014f2:	609a      	str	r2, [r3, #8]
  huart2.Init.StopBits = UART_STOPBITS_1;
 80014f4:	4b0f      	ldr	r3, [pc, #60]	; (8001534 <MX_USART2_UART_Init+0x58>)
 80014f6:	2200      	movs	r2, #0
 80014f8:	60da      	str	r2, [r3, #12]
  huart2.Init.Parity = UART_PARITY_NONE;
 80014fa:	4b0e      	ldr	r3, [pc, #56]	; (8001534 <MX_USART2_UART_Init+0x58>)
 80014fc:	2200      	movs	r2, #0
 80014fe:	611a      	str	r2, [r3, #16]
  huart2.Init.Mode = UART_MODE_TX_RX;
 8001500:	4b0c      	ldr	r3, [pc, #48]	; (8001534 <MX_USART2_UART_Init+0x58>)
 8001502:	220c      	movs	r2, #12
 8001504:	615a      	str	r2, [r3, #20]
  huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 8001506:	4b0b      	ldr	r3, [pc, #44]	; (8001534 <MX_USART2_UART_Init+0x58>)
 8001508:	2200      	movs	r2, #0
 800150a:	619a      	str	r2, [r3, #24]
  huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 800150c:	4b09      	ldr	r3, [pc, #36]	; (8001534 <MX_USART2_UART_Init+0x58>)
 800150e:	2200      	movs	r2, #0
 8001510:	61da      	str	r2, [r3, #28]
  huart2.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 8001512:	4b08      	ldr	r3, [pc, #32]	; (8001534 <MX_USART2_UART_Init+0x58>)
 8001514:	2200      	movs	r2, #0
 8001516:	621a      	str	r2, [r3, #32]
  huart2.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 8001518:	4b06      	ldr	r3, [pc, #24]	; (8001534 <MX_USART2_UART_Init+0x58>)
 800151a:	2200      	movs	r2, #0
 800151c:	625a      	str	r2, [r3, #36]	; 0x24
  if (HAL_UART_Init(&huart2) != HAL_OK)
 800151e:	4805      	ldr	r0, [pc, #20]	; (8001534 <MX_USART2_UART_Init+0x58>)
 8001520:	f002 febe 	bl	80042a0 <HAL_UART_Init>
 8001524:	4603      	mov	r3, r0
 8001526:	2b00      	cmp	r3, #0
 8001528:	d001      	beq.n	800152e <MX_USART2_UART_Init+0x52>
  {
    Error_Handler();
 800152a:	f7ff fe86 	bl	800123a <Error_Handler>
  }
  /* USER CODE BEGIN USART2_Init 2 */

  /* USER CODE END USART2_Init 2 */

}
 800152e:	bf00      	nop
 8001530:	bd80      	pop	{r7, pc}
 8001532:	bf00      	nop
 8001534:	20000174 	.word	0x20000174
 8001538:	40004400 	.word	0x40004400

0800153c <HAL_UART_MspInit>:

void HAL_UART_MspInit(UART_HandleTypeDef* uartHandle)
{
 800153c:	b580      	push	{r7, lr}
 800153e:	b0ac      	sub	sp, #176	; 0xb0
 8001540:	af00      	add	r7, sp, #0
 8001542:	6078      	str	r0, [r7, #4]

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001544:	f107 039c 	add.w	r3, r7, #156	; 0x9c
 8001548:	2200      	movs	r2, #0
 800154a:	601a      	str	r2, [r3, #0]
 800154c:	605a      	str	r2, [r3, #4]
 800154e:	609a      	str	r2, [r3, #8]
 8001550:	60da      	str	r2, [r3, #12]
 8001552:	611a      	str	r2, [r3, #16]
  RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 8001554:	f107 0314 	add.w	r3, r7, #20
 8001558:	2288      	movs	r2, #136	; 0x88
 800155a:	2100      	movs	r1, #0
 800155c:	4618      	mov	r0, r3
 800155e:	f003 fe4d 	bl	80051fc <memset>
  if(uartHandle->Instance==USART2)
 8001562:	687b      	ldr	r3, [r7, #4]
 8001564:	681b      	ldr	r3, [r3, #0]
 8001566:	4a21      	ldr	r2, [pc, #132]	; (80015ec <HAL_UART_MspInit+0xb0>)
 8001568:	4293      	cmp	r3, r2
 800156a:	d13b      	bne.n	80015e4 <HAL_UART_MspInit+0xa8>

  /* USER CODE END USART2_MspInit 0 */

  /** Initializes the peripherals clock
  */
    PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_USART2;
 800156c:	2302      	movs	r3, #2
 800156e:	617b      	str	r3, [r7, #20]
    PeriphClkInit.Usart2ClockSelection = RCC_USART2CLKSOURCE_SYSCLK;
 8001570:	2304      	movs	r3, #4
 8001572:	653b      	str	r3, [r7, #80]	; 0x50
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 8001574:	f107 0314 	add.w	r3, r7, #20
 8001578:	4618      	mov	r0, r3
 800157a:	f002 f8e3 	bl	8003744 <HAL_RCCEx_PeriphCLKConfig>
 800157e:	4603      	mov	r3, r0
 8001580:	2b00      	cmp	r3, #0
 8001582:	d001      	beq.n	8001588 <HAL_UART_MspInit+0x4c>
    {
      Error_Handler();
 8001584:	f7ff fe59 	bl	800123a <Error_Handler>
    }

    /* USART2 clock enable */
    __HAL_RCC_USART2_CLK_ENABLE();
 8001588:	4b19      	ldr	r3, [pc, #100]	; (80015f0 <HAL_UART_MspInit+0xb4>)
 800158a:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 800158c:	4a18      	ldr	r2, [pc, #96]	; (80015f0 <HAL_UART_MspInit+0xb4>)
 800158e:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8001592:	6593      	str	r3, [r2, #88]	; 0x58
 8001594:	4b16      	ldr	r3, [pc, #88]	; (80015f0 <HAL_UART_MspInit+0xb4>)
 8001596:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8001598:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800159c:	613b      	str	r3, [r7, #16]
 800159e:	693b      	ldr	r3, [r7, #16]

    __HAL_RCC_GPIOA_CLK_ENABLE();
 80015a0:	4b13      	ldr	r3, [pc, #76]	; (80015f0 <HAL_UART_MspInit+0xb4>)
 80015a2:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80015a4:	4a12      	ldr	r2, [pc, #72]	; (80015f0 <HAL_UART_MspInit+0xb4>)
 80015a6:	f043 0301 	orr.w	r3, r3, #1
 80015aa:	64d3      	str	r3, [r2, #76]	; 0x4c
 80015ac:	4b10      	ldr	r3, [pc, #64]	; (80015f0 <HAL_UART_MspInit+0xb4>)
 80015ae:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80015b0:	f003 0301 	and.w	r3, r3, #1
 80015b4:	60fb      	str	r3, [r7, #12]
 80015b6:	68fb      	ldr	r3, [r7, #12]
    /**USART2 GPIO Configuration
    PA2     ------> USART2_TX
    PA3     ------> USART2_RX
    */
    GPIO_InitStruct.Pin = USART_TX_Pin|USART_RX_Pin;
 80015b8:	230c      	movs	r3, #12
 80015ba:	f8c7 309c 	str.w	r3, [r7, #156]	; 0x9c
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80015be:	2302      	movs	r3, #2
 80015c0:	f8c7 30a0 	str.w	r3, [r7, #160]	; 0xa0
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80015c4:	2300      	movs	r3, #0
 80015c6:	f8c7 30a4 	str.w	r3, [r7, #164]	; 0xa4
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80015ca:	2303      	movs	r3, #3
 80015cc:	f8c7 30a8 	str.w	r3, [r7, #168]	; 0xa8
    GPIO_InitStruct.Alternate = GPIO_AF7_USART2;
 80015d0:	2307      	movs	r3, #7
 80015d2:	f8c7 30ac 	str.w	r3, [r7, #172]	; 0xac
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80015d6:	f107 039c 	add.w	r3, r7, #156	; 0x9c
 80015da:	4619      	mov	r1, r3
 80015dc:	f04f 4090 	mov.w	r0, #1207959552	; 0x48000000
 80015e0:	f000 fa70 	bl	8001ac4 <HAL_GPIO_Init>

  /* USER CODE BEGIN USART2_MspInit 1 */

  /* USER CODE END USART2_MspInit 1 */
  }
}
 80015e4:	bf00      	nop
 80015e6:	37b0      	adds	r7, #176	; 0xb0
 80015e8:	46bd      	mov	sp, r7
 80015ea:	bd80      	pop	{r7, pc}
 80015ec:	40004400 	.word	0x40004400
 80015f0:	40021000 	.word	0x40021000

080015f4 <Reset_Handler>:
 80015f4:	f8df d034 	ldr.w	sp, [pc, #52]	; 800162c <LoopForever+0x2>
 80015f8:	f7ff ff16 	bl	8001428 <SystemInit>
 80015fc:	480c      	ldr	r0, [pc, #48]	; (8001630 <LoopForever+0x6>)
 80015fe:	490d      	ldr	r1, [pc, #52]	; (8001634 <LoopForever+0xa>)
 8001600:	4a0d      	ldr	r2, [pc, #52]	; (8001638 <LoopForever+0xe>)
 8001602:	2300      	movs	r3, #0
 8001604:	e002      	b.n	800160c <LoopCopyDataInit>

08001606 <CopyDataInit>:
 8001606:	58d4      	ldr	r4, [r2, r3]
 8001608:	50c4      	str	r4, [r0, r3]
 800160a:	3304      	adds	r3, #4

0800160c <LoopCopyDataInit>:
 800160c:	18c4      	adds	r4, r0, r3
 800160e:	428c      	cmp	r4, r1
 8001610:	d3f9      	bcc.n	8001606 <CopyDataInit>
 8001612:	4a0a      	ldr	r2, [pc, #40]	; (800163c <LoopForever+0x12>)
 8001614:	4c0a      	ldr	r4, [pc, #40]	; (8001640 <LoopForever+0x16>)
 8001616:	2300      	movs	r3, #0
 8001618:	e001      	b.n	800161e <LoopFillZerobss>

0800161a <FillZerobss>:
 800161a:	6013      	str	r3, [r2, #0]
 800161c:	3204      	adds	r2, #4

0800161e <LoopFillZerobss>:
 800161e:	42a2      	cmp	r2, r4
 8001620:	d3fb      	bcc.n	800161a <FillZerobss>
 8001622:	f003 fe3f 	bl	80052a4 <__libc_init_array>
 8001626:	f7ff fd9d 	bl	8001164 <main>

0800162a <LoopForever>:
 800162a:	e7fe      	b.n	800162a <LoopForever>
 800162c:	20018000 	.word	0x20018000
 8001630:	20000000 	.word	0x20000000
 8001634:	20000068 	.word	0x20000068
 8001638:	08005f5c 	.word	0x08005f5c
 800163c:	20000068 	.word	0x20000068
 8001640:	2000034c 	.word	0x2000034c

08001644 <ADC1_2_IRQHandler>:
 8001644:	e7fe      	b.n	8001644 <ADC1_2_IRQHandler>
	...

08001648 <HAL_Init>:
 8001648:	b580      	push	{r7, lr}
 800164a:	b082      	sub	sp, #8
 800164c:	af00      	add	r7, sp, #0
 800164e:	2300      	movs	r3, #0
 8001650:	71fb      	strb	r3, [r7, #7]
 8001652:	4b0c      	ldr	r3, [pc, #48]	; (8001684 <HAL_Init+0x3c>)
 8001654:	681b      	ldr	r3, [r3, #0]
 8001656:	4a0b      	ldr	r2, [pc, #44]	; (8001684 <HAL_Init+0x3c>)
 8001658:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800165c:	6013      	str	r3, [r2, #0]
 800165e:	2003      	movs	r0, #3
 8001660:	f000 f944 	bl	80018ec <HAL_NVIC_SetPriorityGrouping>
 8001664:	2000      	movs	r0, #0
 8001666:	f000 f80f 	bl	8001688 <HAL_InitTick>
 800166a:	4603      	mov	r3, r0
 800166c:	2b00      	cmp	r3, #0
 800166e:	d002      	beq.n	8001676 <HAL_Init+0x2e>
 8001670:	2301      	movs	r3, #1
 8001672:	71fb      	strb	r3, [r7, #7]
 8001674:	e001      	b.n	800167a <HAL_Init+0x32>
 8001676:	f7ff fde5 	bl	8001244 <HAL_MspInit>
 800167a:	79fb      	ldrb	r3, [r7, #7]
 800167c:	4618      	mov	r0, r3
 800167e:	3708      	adds	r7, #8
 8001680:	46bd      	mov	sp, r7
 8001682:	bd80      	pop	{r7, pc}
 8001684:	40022000 	.word	0x40022000

08001688 <HAL_InitTick>:
 8001688:	b580      	push	{r7, lr}
 800168a:	b084      	sub	sp, #16
 800168c:	af00      	add	r7, sp, #0
 800168e:	6078      	str	r0, [r7, #4]
 8001690:	2300      	movs	r3, #0
 8001692:	73fb      	strb	r3, [r7, #15]
 8001694:	4b17      	ldr	r3, [pc, #92]	; (80016f4 <HAL_InitTick+0x6c>)
 8001696:	781b      	ldrb	r3, [r3, #0]
 8001698:	2b00      	cmp	r3, #0
 800169a:	d023      	beq.n	80016e4 <HAL_InitTick+0x5c>
 800169c:	4b16      	ldr	r3, [pc, #88]	; (80016f8 <HAL_InitTick+0x70>)
 800169e:	681a      	ldr	r2, [r3, #0]
 80016a0:	4b14      	ldr	r3, [pc, #80]	; (80016f4 <HAL_InitTick+0x6c>)
 80016a2:	781b      	ldrb	r3, [r3, #0]
 80016a4:	4619      	mov	r1, r3
 80016a6:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 80016aa:	fbb3 f3f1 	udiv	r3, r3, r1
 80016ae:	fbb2 f3f3 	udiv	r3, r2, r3
 80016b2:	4618      	mov	r0, r3
 80016b4:	f000 f941 	bl	800193a <HAL_SYSTICK_Config>
 80016b8:	4603      	mov	r3, r0
 80016ba:	2b00      	cmp	r3, #0
 80016bc:	d10f      	bne.n	80016de <HAL_InitTick+0x56>
 80016be:	687b      	ldr	r3, [r7, #4]
 80016c0:	2b0f      	cmp	r3, #15
 80016c2:	d809      	bhi.n	80016d8 <HAL_InitTick+0x50>
 80016c4:	2200      	movs	r2, #0
 80016c6:	6879      	ldr	r1, [r7, #4]
 80016c8:	f04f 30ff 	mov.w	r0, #4294967295
 80016cc:	f000 f919 	bl	8001902 <HAL_NVIC_SetPriority>
 80016d0:	4a0a      	ldr	r2, [pc, #40]	; (80016fc <HAL_InitTick+0x74>)
 80016d2:	687b      	ldr	r3, [r7, #4]
 80016d4:	6013      	str	r3, [r2, #0]
 80016d6:	e007      	b.n	80016e8 <HAL_InitTick+0x60>
 80016d8:	2301      	movs	r3, #1
 80016da:	73fb      	strb	r3, [r7, #15]
 80016dc:	e004      	b.n	80016e8 <HAL_InitTick+0x60>
 80016de:	2301      	movs	r3, #1
 80016e0:	73fb      	strb	r3, [r7, #15]
 80016e2:	e001      	b.n	80016e8 <HAL_InitTick+0x60>
 80016e4:	2301      	movs	r3, #1
 80016e6:	73fb      	strb	r3, [r7, #15]
 80016e8:	7bfb      	ldrb	r3, [r7, #15]
 80016ea:	4618      	mov	r0, r3
 80016ec:	3710      	adds	r7, #16
 80016ee:	46bd      	mov	sp, r7
 80016f0:	bd80      	pop	{r7, pc}
 80016f2:	bf00      	nop
 80016f4:	20000008 	.word	0x20000008
 80016f8:	20000000 	.word	0x20000000
 80016fc:	20000004 	.word	0x20000004

08001700 <HAL_IncTick>:
 8001700:	b480      	push	{r7}
 8001702:	af00      	add	r7, sp, #0
 8001704:	4b06      	ldr	r3, [pc, #24]	; (8001720 <HAL_IncTick+0x20>)
 8001706:	781b      	ldrb	r3, [r3, #0]
 8001708:	461a      	mov	r2, r3
 800170a:	4b06      	ldr	r3, [pc, #24]	; (8001724 <HAL_IncTick+0x24>)
 800170c:	681b      	ldr	r3, [r3, #0]
 800170e:	4413      	add	r3, r2
 8001710:	4a04      	ldr	r2, [pc, #16]	; (8001724 <HAL_IncTick+0x24>)
 8001712:	6013      	str	r3, [r2, #0]
 8001714:	bf00      	nop
 8001716:	46bd      	mov	sp, r7
 8001718:	f85d 7b04 	ldr.w	r7, [sp], #4
 800171c:	4770      	bx	lr
 800171e:	bf00      	nop
 8001720:	20000008 	.word	0x20000008
 8001724:	200001fc 	.word	0x200001fc

08001728 <HAL_GetTick>:
 8001728:	b480      	push	{r7}
 800172a:	af00      	add	r7, sp, #0
 800172c:	4b03      	ldr	r3, [pc, #12]	; (800173c <HAL_GetTick+0x14>)
 800172e:	681b      	ldr	r3, [r3, #0]
 8001730:	4618      	mov	r0, r3
 8001732:	46bd      	mov	sp, r7
 8001734:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001738:	4770      	bx	lr
 800173a:	bf00      	nop
 800173c:	200001fc 	.word	0x200001fc

08001740 <HAL_Delay>:
 8001740:	b580      	push	{r7, lr}
 8001742:	b084      	sub	sp, #16
 8001744:	af00      	add	r7, sp, #0
 8001746:	6078      	str	r0, [r7, #4]
 8001748:	f7ff ffee 	bl	8001728 <HAL_GetTick>
 800174c:	60b8      	str	r0, [r7, #8]
 800174e:	687b      	ldr	r3, [r7, #4]
 8001750:	60fb      	str	r3, [r7, #12]
 8001752:	68fb      	ldr	r3, [r7, #12]
 8001754:	f1b3 3fff 	cmp.w	r3, #4294967295
 8001758:	d005      	beq.n	8001766 <HAL_Delay+0x26>
 800175a:	4b0a      	ldr	r3, [pc, #40]	; (8001784 <HAL_Delay+0x44>)
 800175c:	781b      	ldrb	r3, [r3, #0]
 800175e:	461a      	mov	r2, r3
 8001760:	68fb      	ldr	r3, [r7, #12]
 8001762:	4413      	add	r3, r2
 8001764:	60fb      	str	r3, [r7, #12]
 8001766:	bf00      	nop
 8001768:	f7ff ffde 	bl	8001728 <HAL_GetTick>
 800176c:	4602      	mov	r2, r0
 800176e:	68bb      	ldr	r3, [r7, #8]
 8001770:	1ad3      	subs	r3, r2, r3
 8001772:	68fa      	ldr	r2, [r7, #12]
 8001774:	429a      	cmp	r2, r3
 8001776:	d8f7      	bhi.n	8001768 <HAL_Delay+0x28>
 8001778:	bf00      	nop
 800177a:	bf00      	nop
 800177c:	3710      	adds	r7, #16
 800177e:	46bd      	mov	sp, r7
 8001780:	bd80      	pop	{r7, pc}
 8001782:	bf00      	nop
 8001784:	20000008 	.word	0x20000008

08001788 <__NVIC_SetPriorityGrouping>:
 8001788:	b480      	push	{r7}
 800178a:	b085      	sub	sp, #20
 800178c:	af00      	add	r7, sp, #0
 800178e:	6078      	str	r0, [r7, #4]
 8001790:	687b      	ldr	r3, [r7, #4]
 8001792:	f003 0307 	and.w	r3, r3, #7
 8001796:	60fb      	str	r3, [r7, #12]
 8001798:	4b0c      	ldr	r3, [pc, #48]	; (80017cc <__NVIC_SetPriorityGrouping+0x44>)
 800179a:	68db      	ldr	r3, [r3, #12]
 800179c:	60bb      	str	r3, [r7, #8]
 800179e:	68ba      	ldr	r2, [r7, #8]
 80017a0:	f64f 03ff 	movw	r3, #63743	; 0xf8ff
 80017a4:	4013      	ands	r3, r2
 80017a6:	60bb      	str	r3, [r7, #8]
 80017a8:	68fb      	ldr	r3, [r7, #12]
 80017aa:	021a      	lsls	r2, r3, #8
 80017ac:	68bb      	ldr	r3, [r7, #8]
 80017ae:	4313      	orrs	r3, r2
 80017b0:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 80017b4:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 80017b8:	60bb      	str	r3, [r7, #8]
 80017ba:	4a04      	ldr	r2, [pc, #16]	; (80017cc <__NVIC_SetPriorityGrouping+0x44>)
 80017bc:	68bb      	ldr	r3, [r7, #8]
 80017be:	60d3      	str	r3, [r2, #12]
 80017c0:	bf00      	nop
 80017c2:	3714      	adds	r7, #20
 80017c4:	46bd      	mov	sp, r7
 80017c6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80017ca:	4770      	bx	lr
 80017cc:	e000ed00 	.word	0xe000ed00

080017d0 <__NVIC_GetPriorityGrouping>:
 80017d0:	b480      	push	{r7}
 80017d2:	af00      	add	r7, sp, #0
 80017d4:	4b04      	ldr	r3, [pc, #16]	; (80017e8 <__NVIC_GetPriorityGrouping+0x18>)
 80017d6:	68db      	ldr	r3, [r3, #12]
 80017d8:	0a1b      	lsrs	r3, r3, #8
 80017da:	f003 0307 	and.w	r3, r3, #7
 80017de:	4618      	mov	r0, r3
 80017e0:	46bd      	mov	sp, r7
 80017e2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80017e6:	4770      	bx	lr
 80017e8:	e000ed00 	.word	0xe000ed00

080017ec <__NVIC_SetPriority>:
 80017ec:	b480      	push	{r7}
 80017ee:	b083      	sub	sp, #12
 80017f0:	af00      	add	r7, sp, #0
 80017f2:	4603      	mov	r3, r0
 80017f4:	6039      	str	r1, [r7, #0]
 80017f6:	71fb      	strb	r3, [r7, #7]
 80017f8:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80017fc:	2b00      	cmp	r3, #0
 80017fe:	db0a      	blt.n	8001816 <__NVIC_SetPriority+0x2a>
 8001800:	683b      	ldr	r3, [r7, #0]
 8001802:	b2da      	uxtb	r2, r3
 8001804:	490c      	ldr	r1, [pc, #48]	; (8001838 <__NVIC_SetPriority+0x4c>)
 8001806:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800180a:	0112      	lsls	r2, r2, #4
 800180c:	b2d2      	uxtb	r2, r2
 800180e:	440b      	add	r3, r1
 8001810:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
 8001814:	e00a      	b.n	800182c <__NVIC_SetPriority+0x40>
 8001816:	683b      	ldr	r3, [r7, #0]
 8001818:	b2da      	uxtb	r2, r3
 800181a:	4908      	ldr	r1, [pc, #32]	; (800183c <__NVIC_SetPriority+0x50>)
 800181c:	79fb      	ldrb	r3, [r7, #7]
 800181e:	f003 030f 	and.w	r3, r3, #15
 8001822:	3b04      	subs	r3, #4
 8001824:	0112      	lsls	r2, r2, #4
 8001826:	b2d2      	uxtb	r2, r2
 8001828:	440b      	add	r3, r1
 800182a:	761a      	strb	r2, [r3, #24]
 800182c:	bf00      	nop
 800182e:	370c      	adds	r7, #12
 8001830:	46bd      	mov	sp, r7
 8001832:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001836:	4770      	bx	lr
 8001838:	e000e100 	.word	0xe000e100
 800183c:	e000ed00 	.word	0xe000ed00

08001840 <NVIC_EncodePriority>:
 8001840:	b480      	push	{r7}
 8001842:	b089      	sub	sp, #36	; 0x24
 8001844:	af00      	add	r7, sp, #0
 8001846:	60f8      	str	r0, [r7, #12]
 8001848:	60b9      	str	r1, [r7, #8]
 800184a:	607a      	str	r2, [r7, #4]
 800184c:	68fb      	ldr	r3, [r7, #12]
 800184e:	f003 0307 	and.w	r3, r3, #7
 8001852:	61fb      	str	r3, [r7, #28]
 8001854:	69fb      	ldr	r3, [r7, #28]
 8001856:	f1c3 0307 	rsb	r3, r3, #7
 800185a:	2b04      	cmp	r3, #4
 800185c:	bf28      	it	cs
 800185e:	2304      	movcs	r3, #4
 8001860:	61bb      	str	r3, [r7, #24]
 8001862:	69fb      	ldr	r3, [r7, #28]
 8001864:	3304      	adds	r3, #4
 8001866:	2b06      	cmp	r3, #6
 8001868:	d902      	bls.n	8001870 <NVIC_EncodePriority+0x30>
 800186a:	69fb      	ldr	r3, [r7, #28]
 800186c:	3b03      	subs	r3, #3
 800186e:	e000      	b.n	8001872 <NVIC_EncodePriority+0x32>
 8001870:	2300      	movs	r3, #0
 8001872:	617b      	str	r3, [r7, #20]
 8001874:	f04f 32ff 	mov.w	r2, #4294967295
 8001878:	69bb      	ldr	r3, [r7, #24]
 800187a:	fa02 f303 	lsl.w	r3, r2, r3
 800187e:	43da      	mvns	r2, r3
 8001880:	68bb      	ldr	r3, [r7, #8]
 8001882:	401a      	ands	r2, r3
 8001884:	697b      	ldr	r3, [r7, #20]
 8001886:	409a      	lsls	r2, r3
 8001888:	f04f 31ff 	mov.w	r1, #4294967295
 800188c:	697b      	ldr	r3, [r7, #20]
 800188e:	fa01 f303 	lsl.w	r3, r1, r3
 8001892:	43d9      	mvns	r1, r3
 8001894:	687b      	ldr	r3, [r7, #4]
 8001896:	400b      	ands	r3, r1
 8001898:	4313      	orrs	r3, r2
 800189a:	4618      	mov	r0, r3
 800189c:	3724      	adds	r7, #36	; 0x24
 800189e:	46bd      	mov	sp, r7
 80018a0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80018a4:	4770      	bx	lr
	...

080018a8 <SysTick_Config>:
 80018a8:	b580      	push	{r7, lr}
 80018aa:	b082      	sub	sp, #8
 80018ac:	af00      	add	r7, sp, #0
 80018ae:	6078      	str	r0, [r7, #4]
 80018b0:	687b      	ldr	r3, [r7, #4]
 80018b2:	3b01      	subs	r3, #1
 80018b4:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 80018b8:	d301      	bcc.n	80018be <SysTick_Config+0x16>
 80018ba:	2301      	movs	r3, #1
 80018bc:	e00f      	b.n	80018de <SysTick_Config+0x36>
 80018be:	4a0a      	ldr	r2, [pc, #40]	; (80018e8 <SysTick_Config+0x40>)
 80018c0:	687b      	ldr	r3, [r7, #4]
 80018c2:	3b01      	subs	r3, #1
 80018c4:	6053      	str	r3, [r2, #4]
 80018c6:	210f      	movs	r1, #15
 80018c8:	f04f 30ff 	mov.w	r0, #4294967295
 80018cc:	f7ff ff8e 	bl	80017ec <__NVIC_SetPriority>
 80018d0:	4b05      	ldr	r3, [pc, #20]	; (80018e8 <SysTick_Config+0x40>)
 80018d2:	2200      	movs	r2, #0
 80018d4:	609a      	str	r2, [r3, #8]
 80018d6:	4b04      	ldr	r3, [pc, #16]	; (80018e8 <SysTick_Config+0x40>)
 80018d8:	2207      	movs	r2, #7
 80018da:	601a      	str	r2, [r3, #0]
 80018dc:	2300      	movs	r3, #0
 80018de:	4618      	mov	r0, r3
 80018e0:	3708      	adds	r7, #8
 80018e2:	46bd      	mov	sp, r7
 80018e4:	bd80      	pop	{r7, pc}
 80018e6:	bf00      	nop
 80018e8:	e000e010 	.word	0xe000e010

080018ec <HAL_NVIC_SetPriorityGrouping>:
 80018ec:	b580      	push	{r7, lr}
 80018ee:	b082      	sub	sp, #8
 80018f0:	af00      	add	r7, sp, #0
 80018f2:	6078      	str	r0, [r7, #4]
 80018f4:	6878      	ldr	r0, [r7, #4]
 80018f6:	f7ff ff47 	bl	8001788 <__NVIC_SetPriorityGrouping>
 80018fa:	bf00      	nop
 80018fc:	3708      	adds	r7, #8
 80018fe:	46bd      	mov	sp, r7
 8001900:	bd80      	pop	{r7, pc}

08001902 <HAL_NVIC_SetPriority>:
 8001902:	b580      	push	{r7, lr}
 8001904:	b086      	sub	sp, #24
 8001906:	af00      	add	r7, sp, #0
 8001908:	4603      	mov	r3, r0
 800190a:	60b9      	str	r1, [r7, #8]
 800190c:	607a      	str	r2, [r7, #4]
 800190e:	73fb      	strb	r3, [r7, #15]
 8001910:	2300      	movs	r3, #0
 8001912:	617b      	str	r3, [r7, #20]
 8001914:	f7ff ff5c 	bl	80017d0 <__NVIC_GetPriorityGrouping>
 8001918:	6178      	str	r0, [r7, #20]
 800191a:	687a      	ldr	r2, [r7, #4]
 800191c:	68b9      	ldr	r1, [r7, #8]
 800191e:	6978      	ldr	r0, [r7, #20]
 8001920:	f7ff ff8e 	bl	8001840 <NVIC_EncodePriority>
 8001924:	4602      	mov	r2, r0
 8001926:	f997 300f 	ldrsb.w	r3, [r7, #15]
 800192a:	4611      	mov	r1, r2
 800192c:	4618      	mov	r0, r3
 800192e:	f7ff ff5d 	bl	80017ec <__NVIC_SetPriority>
 8001932:	bf00      	nop
 8001934:	3718      	adds	r7, #24
 8001936:	46bd      	mov	sp, r7
 8001938:	bd80      	pop	{r7, pc}

0800193a <HAL_SYSTICK_Config>:
 800193a:	b580      	push	{r7, lr}
 800193c:	b082      	sub	sp, #8
 800193e:	af00      	add	r7, sp, #0
 8001940:	6078      	str	r0, [r7, #4]
 8001942:	6878      	ldr	r0, [r7, #4]
 8001944:	f7ff ffb0 	bl	80018a8 <SysTick_Config>
 8001948:	4603      	mov	r3, r0
 800194a:	4618      	mov	r0, r3
 800194c:	3708      	adds	r7, #8
 800194e:	46bd      	mov	sp, r7
 8001950:	bd80      	pop	{r7, pc}
	...

08001954 <HAL_DMA_Init>:
 8001954:	b480      	push	{r7}
 8001956:	b085      	sub	sp, #20
 8001958:	af00      	add	r7, sp, #0
 800195a:	6078      	str	r0, [r7, #4]
 800195c:	687b      	ldr	r3, [r7, #4]
 800195e:	2b00      	cmp	r3, #0
 8001960:	d101      	bne.n	8001966 <HAL_DMA_Init+0x12>
 8001962:	2301      	movs	r3, #1
 8001964:	e098      	b.n	8001a98 <HAL_DMA_Init+0x144>
 8001966:	687b      	ldr	r3, [r7, #4]
 8001968:	681b      	ldr	r3, [r3, #0]
 800196a:	461a      	mov	r2, r3
 800196c:	4b4d      	ldr	r3, [pc, #308]	; (8001aa4 <HAL_DMA_Init+0x150>)
 800196e:	429a      	cmp	r2, r3
 8001970:	d80f      	bhi.n	8001992 <HAL_DMA_Init+0x3e>
 8001972:	687b      	ldr	r3, [r7, #4]
 8001974:	681b      	ldr	r3, [r3, #0]
 8001976:	461a      	mov	r2, r3
 8001978:	4b4b      	ldr	r3, [pc, #300]	; (8001aa8 <HAL_DMA_Init+0x154>)
 800197a:	4413      	add	r3, r2
 800197c:	4a4b      	ldr	r2, [pc, #300]	; (8001aac <HAL_DMA_Init+0x158>)
 800197e:	fba2 2303 	umull	r2, r3, r2, r3
 8001982:	091b      	lsrs	r3, r3, #4
 8001984:	009a      	lsls	r2, r3, #2
 8001986:	687b      	ldr	r3, [r7, #4]
 8001988:	645a      	str	r2, [r3, #68]	; 0x44
 800198a:	687b      	ldr	r3, [r7, #4]
 800198c:	4a48      	ldr	r2, [pc, #288]	; (8001ab0 <HAL_DMA_Init+0x15c>)
 800198e:	641a      	str	r2, [r3, #64]	; 0x40
 8001990:	e00e      	b.n	80019b0 <HAL_DMA_Init+0x5c>
 8001992:	687b      	ldr	r3, [r7, #4]
 8001994:	681b      	ldr	r3, [r3, #0]
 8001996:	461a      	mov	r2, r3
 8001998:	4b46      	ldr	r3, [pc, #280]	; (8001ab4 <HAL_DMA_Init+0x160>)
 800199a:	4413      	add	r3, r2
 800199c:	4a43      	ldr	r2, [pc, #268]	; (8001aac <HAL_DMA_Init+0x158>)
 800199e:	fba2 2303 	umull	r2, r3, r2, r3
 80019a2:	091b      	lsrs	r3, r3, #4
 80019a4:	009a      	lsls	r2, r3, #2
 80019a6:	687b      	ldr	r3, [r7, #4]
 80019a8:	645a      	str	r2, [r3, #68]	; 0x44
 80019aa:	687b      	ldr	r3, [r7, #4]
 80019ac:	4a42      	ldr	r2, [pc, #264]	; (8001ab8 <HAL_DMA_Init+0x164>)
 80019ae:	641a      	str	r2, [r3, #64]	; 0x40
 80019b0:	687b      	ldr	r3, [r7, #4]
 80019b2:	2202      	movs	r2, #2
 80019b4:	f883 2025 	strb.w	r2, [r3, #37]	; 0x25
 80019b8:	687b      	ldr	r3, [r7, #4]
 80019ba:	681b      	ldr	r3, [r3, #0]
 80019bc:	681b      	ldr	r3, [r3, #0]
 80019be:	60fb      	str	r3, [r7, #12]
 80019c0:	68fb      	ldr	r3, [r7, #12]
 80019c2:	f423 43ff 	bic.w	r3, r3, #32640	; 0x7f80
 80019c6:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 80019ca:	60fb      	str	r3, [r7, #12]
 80019cc:	687b      	ldr	r3, [r7, #4]
 80019ce:	689a      	ldr	r2, [r3, #8]
 80019d0:	687b      	ldr	r3, [r7, #4]
 80019d2:	68db      	ldr	r3, [r3, #12]
 80019d4:	431a      	orrs	r2, r3
 80019d6:	687b      	ldr	r3, [r7, #4]
 80019d8:	691b      	ldr	r3, [r3, #16]
 80019da:	431a      	orrs	r2, r3
 80019dc:	687b      	ldr	r3, [r7, #4]
 80019de:	695b      	ldr	r3, [r3, #20]
 80019e0:	431a      	orrs	r2, r3
 80019e2:	687b      	ldr	r3, [r7, #4]
 80019e4:	699b      	ldr	r3, [r3, #24]
 80019e6:	431a      	orrs	r2, r3
 80019e8:	687b      	ldr	r3, [r7, #4]
 80019ea:	69db      	ldr	r3, [r3, #28]
 80019ec:	431a      	orrs	r2, r3
 80019ee:	687b      	ldr	r3, [r7, #4]
 80019f0:	6a1b      	ldr	r3, [r3, #32]
 80019f2:	4313      	orrs	r3, r2
 80019f4:	68fa      	ldr	r2, [r7, #12]
 80019f6:	4313      	orrs	r3, r2
 80019f8:	60fb      	str	r3, [r7, #12]
 80019fa:	687b      	ldr	r3, [r7, #4]
 80019fc:	681b      	ldr	r3, [r3, #0]
 80019fe:	68fa      	ldr	r2, [r7, #12]
 8001a00:	601a      	str	r2, [r3, #0]
 8001a02:	687b      	ldr	r3, [r7, #4]
 8001a04:	689b      	ldr	r3, [r3, #8]
 8001a06:	f5b3 4f80 	cmp.w	r3, #16384	; 0x4000
 8001a0a:	d039      	beq.n	8001a80 <HAL_DMA_Init+0x12c>
 8001a0c:	687b      	ldr	r3, [r7, #4]
 8001a0e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001a10:	4a27      	ldr	r2, [pc, #156]	; (8001ab0 <HAL_DMA_Init+0x15c>)
 8001a12:	4293      	cmp	r3, r2
 8001a14:	d11a      	bne.n	8001a4c <HAL_DMA_Init+0xf8>
 8001a16:	4b29      	ldr	r3, [pc, #164]	; (8001abc <HAL_DMA_Init+0x168>)
 8001a18:	681a      	ldr	r2, [r3, #0]
 8001a1a:	687b      	ldr	r3, [r7, #4]
 8001a1c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8001a1e:	f003 031c 	and.w	r3, r3, #28
 8001a22:	210f      	movs	r1, #15
 8001a24:	fa01 f303 	lsl.w	r3, r1, r3
 8001a28:	43db      	mvns	r3, r3
 8001a2a:	4924      	ldr	r1, [pc, #144]	; (8001abc <HAL_DMA_Init+0x168>)
 8001a2c:	4013      	ands	r3, r2
 8001a2e:	600b      	str	r3, [r1, #0]
 8001a30:	4b22      	ldr	r3, [pc, #136]	; (8001abc <HAL_DMA_Init+0x168>)
 8001a32:	681a      	ldr	r2, [r3, #0]
 8001a34:	687b      	ldr	r3, [r7, #4]
 8001a36:	6859      	ldr	r1, [r3, #4]
 8001a38:	687b      	ldr	r3, [r7, #4]
 8001a3a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8001a3c:	f003 031c 	and.w	r3, r3, #28
 8001a40:	fa01 f303 	lsl.w	r3, r1, r3
 8001a44:	491d      	ldr	r1, [pc, #116]	; (8001abc <HAL_DMA_Init+0x168>)
 8001a46:	4313      	orrs	r3, r2
 8001a48:	600b      	str	r3, [r1, #0]
 8001a4a:	e019      	b.n	8001a80 <HAL_DMA_Init+0x12c>
 8001a4c:	4b1c      	ldr	r3, [pc, #112]	; (8001ac0 <HAL_DMA_Init+0x16c>)
 8001a4e:	681a      	ldr	r2, [r3, #0]
 8001a50:	687b      	ldr	r3, [r7, #4]
 8001a52:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8001a54:	f003 031c 	and.w	r3, r3, #28
 8001a58:	210f      	movs	r1, #15
 8001a5a:	fa01 f303 	lsl.w	r3, r1, r3
 8001a5e:	43db      	mvns	r3, r3
 8001a60:	4917      	ldr	r1, [pc, #92]	; (8001ac0 <HAL_DMA_Init+0x16c>)
 8001a62:	4013      	ands	r3, r2
 8001a64:	600b      	str	r3, [r1, #0]
 8001a66:	4b16      	ldr	r3, [pc, #88]	; (8001ac0 <HAL_DMA_Init+0x16c>)
 8001a68:	681a      	ldr	r2, [r3, #0]
 8001a6a:	687b      	ldr	r3, [r7, #4]
 8001a6c:	6859      	ldr	r1, [r3, #4]
 8001a6e:	687b      	ldr	r3, [r7, #4]
 8001a70:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8001a72:	f003 031c 	and.w	r3, r3, #28
 8001a76:	fa01 f303 	lsl.w	r3, r1, r3
 8001a7a:	4911      	ldr	r1, [pc, #68]	; (8001ac0 <HAL_DMA_Init+0x16c>)
 8001a7c:	4313      	orrs	r3, r2
 8001a7e:	600b      	str	r3, [r1, #0]
 8001a80:	687b      	ldr	r3, [r7, #4]
 8001a82:	2200      	movs	r2, #0
 8001a84:	63da      	str	r2, [r3, #60]	; 0x3c
 8001a86:	687b      	ldr	r3, [r7, #4]
 8001a88:	2201      	movs	r2, #1
 8001a8a:	f883 2025 	strb.w	r2, [r3, #37]	; 0x25
 8001a8e:	687b      	ldr	r3, [r7, #4]
 8001a90:	2200      	movs	r2, #0
 8001a92:	f883 2024 	strb.w	r2, [r3, #36]	; 0x24
 8001a96:	2300      	movs	r3, #0
 8001a98:	4618      	mov	r0, r3
 8001a9a:	3714      	adds	r7, #20
 8001a9c:	46bd      	mov	sp, r7
 8001a9e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001aa2:	4770      	bx	lr
 8001aa4:	40020407 	.word	0x40020407
 8001aa8:	bffdfff8 	.word	0xbffdfff8
 8001aac:	cccccccd 	.word	0xcccccccd
 8001ab0:	40020000 	.word	0x40020000
 8001ab4:	bffdfbf8 	.word	0xbffdfbf8
 8001ab8:	40020400 	.word	0x40020400
 8001abc:	400200a8 	.word	0x400200a8
 8001ac0:	400204a8 	.word	0x400204a8

08001ac4 <HAL_GPIO_Init>:
 8001ac4:	b480      	push	{r7}
 8001ac6:	b087      	sub	sp, #28
 8001ac8:	af00      	add	r7, sp, #0
 8001aca:	6078      	str	r0, [r7, #4]
 8001acc:	6039      	str	r1, [r7, #0]
 8001ace:	2300      	movs	r3, #0
 8001ad0:	617b      	str	r3, [r7, #20]
 8001ad2:	e17f      	b.n	8001dd4 <HAL_GPIO_Init+0x310>
 8001ad4:	683b      	ldr	r3, [r7, #0]
 8001ad6:	681a      	ldr	r2, [r3, #0]
 8001ad8:	2101      	movs	r1, #1
 8001ada:	697b      	ldr	r3, [r7, #20]
 8001adc:	fa01 f303 	lsl.w	r3, r1, r3
 8001ae0:	4013      	ands	r3, r2
 8001ae2:	60fb      	str	r3, [r7, #12]
 8001ae4:	68fb      	ldr	r3, [r7, #12]
 8001ae6:	2b00      	cmp	r3, #0
 8001ae8:	f000 8171 	beq.w	8001dce <HAL_GPIO_Init+0x30a>
 8001aec:	683b      	ldr	r3, [r7, #0]
 8001aee:	685b      	ldr	r3, [r3, #4]
 8001af0:	f003 0303 	and.w	r3, r3, #3
 8001af4:	2b01      	cmp	r3, #1
 8001af6:	d005      	beq.n	8001b04 <HAL_GPIO_Init+0x40>
 8001af8:	683b      	ldr	r3, [r7, #0]
 8001afa:	685b      	ldr	r3, [r3, #4]
 8001afc:	f003 0303 	and.w	r3, r3, #3
 8001b00:	2b02      	cmp	r3, #2
 8001b02:	d130      	bne.n	8001b66 <HAL_GPIO_Init+0xa2>
 8001b04:	687b      	ldr	r3, [r7, #4]
 8001b06:	689b      	ldr	r3, [r3, #8]
 8001b08:	613b      	str	r3, [r7, #16]
 8001b0a:	697b      	ldr	r3, [r7, #20]
 8001b0c:	005b      	lsls	r3, r3, #1
 8001b0e:	2203      	movs	r2, #3
 8001b10:	fa02 f303 	lsl.w	r3, r2, r3
 8001b14:	43db      	mvns	r3, r3
 8001b16:	693a      	ldr	r2, [r7, #16]
 8001b18:	4013      	ands	r3, r2
 8001b1a:	613b      	str	r3, [r7, #16]
 8001b1c:	683b      	ldr	r3, [r7, #0]
 8001b1e:	68da      	ldr	r2, [r3, #12]
 8001b20:	697b      	ldr	r3, [r7, #20]
 8001b22:	005b      	lsls	r3, r3, #1
 8001b24:	fa02 f303 	lsl.w	r3, r2, r3
 8001b28:	693a      	ldr	r2, [r7, #16]
 8001b2a:	4313      	orrs	r3, r2
 8001b2c:	613b      	str	r3, [r7, #16]
 8001b2e:	687b      	ldr	r3, [r7, #4]
 8001b30:	693a      	ldr	r2, [r7, #16]
 8001b32:	609a      	str	r2, [r3, #8]
 8001b34:	687b      	ldr	r3, [r7, #4]
 8001b36:	685b      	ldr	r3, [r3, #4]
 8001b38:	613b      	str	r3, [r7, #16]
 8001b3a:	2201      	movs	r2, #1
 8001b3c:	697b      	ldr	r3, [r7, #20]
 8001b3e:	fa02 f303 	lsl.w	r3, r2, r3
 8001b42:	43db      	mvns	r3, r3
 8001b44:	693a      	ldr	r2, [r7, #16]
 8001b46:	4013      	ands	r3, r2
 8001b48:	613b      	str	r3, [r7, #16]
 8001b4a:	683b      	ldr	r3, [r7, #0]
 8001b4c:	685b      	ldr	r3, [r3, #4]
 8001b4e:	091b      	lsrs	r3, r3, #4
 8001b50:	f003 0201 	and.w	r2, r3, #1
 8001b54:	697b      	ldr	r3, [r7, #20]
 8001b56:	fa02 f303 	lsl.w	r3, r2, r3
 8001b5a:	693a      	ldr	r2, [r7, #16]
 8001b5c:	4313      	orrs	r3, r2
 8001b5e:	613b      	str	r3, [r7, #16]
 8001b60:	687b      	ldr	r3, [r7, #4]
 8001b62:	693a      	ldr	r2, [r7, #16]
 8001b64:	605a      	str	r2, [r3, #4]
 8001b66:	683b      	ldr	r3, [r7, #0]
 8001b68:	685b      	ldr	r3, [r3, #4]
 8001b6a:	f003 0303 	and.w	r3, r3, #3
 8001b6e:	2b03      	cmp	r3, #3
 8001b70:	d118      	bne.n	8001ba4 <HAL_GPIO_Init+0xe0>
 8001b72:	687b      	ldr	r3, [r7, #4]
 8001b74:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8001b76:	613b      	str	r3, [r7, #16]
 8001b78:	2201      	movs	r2, #1
 8001b7a:	697b      	ldr	r3, [r7, #20]
 8001b7c:	fa02 f303 	lsl.w	r3, r2, r3
 8001b80:	43db      	mvns	r3, r3
 8001b82:	693a      	ldr	r2, [r7, #16]
 8001b84:	4013      	ands	r3, r2
 8001b86:	613b      	str	r3, [r7, #16]
 8001b88:	683b      	ldr	r3, [r7, #0]
 8001b8a:	685b      	ldr	r3, [r3, #4]
 8001b8c:	08db      	lsrs	r3, r3, #3
 8001b8e:	f003 0201 	and.w	r2, r3, #1
 8001b92:	697b      	ldr	r3, [r7, #20]
 8001b94:	fa02 f303 	lsl.w	r3, r2, r3
 8001b98:	693a      	ldr	r2, [r7, #16]
 8001b9a:	4313      	orrs	r3, r2
 8001b9c:	613b      	str	r3, [r7, #16]
 8001b9e:	687b      	ldr	r3, [r7, #4]
 8001ba0:	693a      	ldr	r2, [r7, #16]
 8001ba2:	62da      	str	r2, [r3, #44]	; 0x2c
 8001ba4:	683b      	ldr	r3, [r7, #0]
 8001ba6:	685b      	ldr	r3, [r3, #4]
 8001ba8:	f003 0303 	and.w	r3, r3, #3
 8001bac:	2b03      	cmp	r3, #3
 8001bae:	d017      	beq.n	8001be0 <HAL_GPIO_Init+0x11c>
 8001bb0:	687b      	ldr	r3, [r7, #4]
 8001bb2:	68db      	ldr	r3, [r3, #12]
 8001bb4:	613b      	str	r3, [r7, #16]
 8001bb6:	697b      	ldr	r3, [r7, #20]
 8001bb8:	005b      	lsls	r3, r3, #1
 8001bba:	2203      	movs	r2, #3
 8001bbc:	fa02 f303 	lsl.w	r3, r2, r3
 8001bc0:	43db      	mvns	r3, r3
 8001bc2:	693a      	ldr	r2, [r7, #16]
 8001bc4:	4013      	ands	r3, r2
 8001bc6:	613b      	str	r3, [r7, #16]
 8001bc8:	683b      	ldr	r3, [r7, #0]
 8001bca:	689a      	ldr	r2, [r3, #8]
 8001bcc:	697b      	ldr	r3, [r7, #20]
 8001bce:	005b      	lsls	r3, r3, #1
 8001bd0:	fa02 f303 	lsl.w	r3, r2, r3
 8001bd4:	693a      	ldr	r2, [r7, #16]
 8001bd6:	4313      	orrs	r3, r2
 8001bd8:	613b      	str	r3, [r7, #16]
 8001bda:	687b      	ldr	r3, [r7, #4]
 8001bdc:	693a      	ldr	r2, [r7, #16]
 8001bde:	60da      	str	r2, [r3, #12]
 8001be0:	683b      	ldr	r3, [r7, #0]
 8001be2:	685b      	ldr	r3, [r3, #4]
 8001be4:	f003 0303 	and.w	r3, r3, #3
 8001be8:	2b02      	cmp	r3, #2
 8001bea:	d123      	bne.n	8001c34 <HAL_GPIO_Init+0x170>
 8001bec:	697b      	ldr	r3, [r7, #20]
 8001bee:	08da      	lsrs	r2, r3, #3
 8001bf0:	687b      	ldr	r3, [r7, #4]
 8001bf2:	3208      	adds	r2, #8
 8001bf4:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8001bf8:	613b      	str	r3, [r7, #16]
 8001bfa:	697b      	ldr	r3, [r7, #20]
 8001bfc:	f003 0307 	and.w	r3, r3, #7
 8001c00:	009b      	lsls	r3, r3, #2
 8001c02:	220f      	movs	r2, #15
 8001c04:	fa02 f303 	lsl.w	r3, r2, r3
 8001c08:	43db      	mvns	r3, r3
 8001c0a:	693a      	ldr	r2, [r7, #16]
 8001c0c:	4013      	ands	r3, r2
 8001c0e:	613b      	str	r3, [r7, #16]
 8001c10:	683b      	ldr	r3, [r7, #0]
 8001c12:	691a      	ldr	r2, [r3, #16]
 8001c14:	697b      	ldr	r3, [r7, #20]
 8001c16:	f003 0307 	and.w	r3, r3, #7
 8001c1a:	009b      	lsls	r3, r3, #2
 8001c1c:	fa02 f303 	lsl.w	r3, r2, r3
 8001c20:	693a      	ldr	r2, [r7, #16]
 8001c22:	4313      	orrs	r3, r2
 8001c24:	613b      	str	r3, [r7, #16]
 8001c26:	697b      	ldr	r3, [r7, #20]
 8001c28:	08da      	lsrs	r2, r3, #3
 8001c2a:	687b      	ldr	r3, [r7, #4]
 8001c2c:	3208      	adds	r2, #8
 8001c2e:	6939      	ldr	r1, [r7, #16]
 8001c30:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 8001c34:	687b      	ldr	r3, [r7, #4]
 8001c36:	681b      	ldr	r3, [r3, #0]
 8001c38:	613b      	str	r3, [r7, #16]
 8001c3a:	697b      	ldr	r3, [r7, #20]
 8001c3c:	005b      	lsls	r3, r3, #1
 8001c3e:	2203      	movs	r2, #3
 8001c40:	fa02 f303 	lsl.w	r3, r2, r3
 8001c44:	43db      	mvns	r3, r3
 8001c46:	693a      	ldr	r2, [r7, #16]
 8001c48:	4013      	ands	r3, r2
 8001c4a:	613b      	str	r3, [r7, #16]
 8001c4c:	683b      	ldr	r3, [r7, #0]
 8001c4e:	685b      	ldr	r3, [r3, #4]
 8001c50:	f003 0203 	and.w	r2, r3, #3
 8001c54:	697b      	ldr	r3, [r7, #20]
 8001c56:	005b      	lsls	r3, r3, #1
 8001c58:	fa02 f303 	lsl.w	r3, r2, r3
 8001c5c:	693a      	ldr	r2, [r7, #16]
 8001c5e:	4313      	orrs	r3, r2
 8001c60:	613b      	str	r3, [r7, #16]
 8001c62:	687b      	ldr	r3, [r7, #4]
 8001c64:	693a      	ldr	r2, [r7, #16]
 8001c66:	601a      	str	r2, [r3, #0]
 8001c68:	683b      	ldr	r3, [r7, #0]
 8001c6a:	685b      	ldr	r3, [r3, #4]
 8001c6c:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
 8001c70:	2b00      	cmp	r3, #0
 8001c72:	f000 80ac 	beq.w	8001dce <HAL_GPIO_Init+0x30a>
 8001c76:	4b5f      	ldr	r3, [pc, #380]	; (8001df4 <HAL_GPIO_Init+0x330>)
 8001c78:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8001c7a:	4a5e      	ldr	r2, [pc, #376]	; (8001df4 <HAL_GPIO_Init+0x330>)
 8001c7c:	f043 0301 	orr.w	r3, r3, #1
 8001c80:	6613      	str	r3, [r2, #96]	; 0x60
 8001c82:	4b5c      	ldr	r3, [pc, #368]	; (8001df4 <HAL_GPIO_Init+0x330>)
 8001c84:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8001c86:	f003 0301 	and.w	r3, r3, #1
 8001c8a:	60bb      	str	r3, [r7, #8]
 8001c8c:	68bb      	ldr	r3, [r7, #8]
 8001c8e:	4a5a      	ldr	r2, [pc, #360]	; (8001df8 <HAL_GPIO_Init+0x334>)
 8001c90:	697b      	ldr	r3, [r7, #20]
 8001c92:	089b      	lsrs	r3, r3, #2
 8001c94:	3302      	adds	r3, #2
 8001c96:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8001c9a:	613b      	str	r3, [r7, #16]
 8001c9c:	697b      	ldr	r3, [r7, #20]
 8001c9e:	f003 0303 	and.w	r3, r3, #3
 8001ca2:	009b      	lsls	r3, r3, #2
 8001ca4:	220f      	movs	r2, #15
 8001ca6:	fa02 f303 	lsl.w	r3, r2, r3
 8001caa:	43db      	mvns	r3, r3
 8001cac:	693a      	ldr	r2, [r7, #16]
 8001cae:	4013      	ands	r3, r2
 8001cb0:	613b      	str	r3, [r7, #16]
 8001cb2:	687b      	ldr	r3, [r7, #4]
 8001cb4:	f1b3 4f90 	cmp.w	r3, #1207959552	; 0x48000000
 8001cb8:	d025      	beq.n	8001d06 <HAL_GPIO_Init+0x242>
 8001cba:	687b      	ldr	r3, [r7, #4]
 8001cbc:	4a4f      	ldr	r2, [pc, #316]	; (8001dfc <HAL_GPIO_Init+0x338>)
 8001cbe:	4293      	cmp	r3, r2
 8001cc0:	d01f      	beq.n	8001d02 <HAL_GPIO_Init+0x23e>
 8001cc2:	687b      	ldr	r3, [r7, #4]
 8001cc4:	4a4e      	ldr	r2, [pc, #312]	; (8001e00 <HAL_GPIO_Init+0x33c>)
 8001cc6:	4293      	cmp	r3, r2
 8001cc8:	d019      	beq.n	8001cfe <HAL_GPIO_Init+0x23a>
 8001cca:	687b      	ldr	r3, [r7, #4]
 8001ccc:	4a4d      	ldr	r2, [pc, #308]	; (8001e04 <HAL_GPIO_Init+0x340>)
 8001cce:	4293      	cmp	r3, r2
 8001cd0:	d013      	beq.n	8001cfa <HAL_GPIO_Init+0x236>
 8001cd2:	687b      	ldr	r3, [r7, #4]
 8001cd4:	4a4c      	ldr	r2, [pc, #304]	; (8001e08 <HAL_GPIO_Init+0x344>)
 8001cd6:	4293      	cmp	r3, r2
 8001cd8:	d00d      	beq.n	8001cf6 <HAL_GPIO_Init+0x232>
 8001cda:	687b      	ldr	r3, [r7, #4]
 8001cdc:	4a4b      	ldr	r2, [pc, #300]	; (8001e0c <HAL_GPIO_Init+0x348>)
 8001cde:	4293      	cmp	r3, r2
 8001ce0:	d007      	beq.n	8001cf2 <HAL_GPIO_Init+0x22e>
 8001ce2:	687b      	ldr	r3, [r7, #4]
 8001ce4:	4a4a      	ldr	r2, [pc, #296]	; (8001e10 <HAL_GPIO_Init+0x34c>)
 8001ce6:	4293      	cmp	r3, r2
 8001ce8:	d101      	bne.n	8001cee <HAL_GPIO_Init+0x22a>
 8001cea:	2306      	movs	r3, #6
 8001cec:	e00c      	b.n	8001d08 <HAL_GPIO_Init+0x244>
 8001cee:	2307      	movs	r3, #7
 8001cf0:	e00a      	b.n	8001d08 <HAL_GPIO_Init+0x244>
 8001cf2:	2305      	movs	r3, #5
 8001cf4:	e008      	b.n	8001d08 <HAL_GPIO_Init+0x244>
 8001cf6:	2304      	movs	r3, #4
 8001cf8:	e006      	b.n	8001d08 <HAL_GPIO_Init+0x244>
 8001cfa:	2303      	movs	r3, #3
 8001cfc:	e004      	b.n	8001d08 <HAL_GPIO_Init+0x244>
 8001cfe:	2302      	movs	r3, #2
 8001d00:	e002      	b.n	8001d08 <HAL_GPIO_Init+0x244>
 8001d02:	2301      	movs	r3, #1
 8001d04:	e000      	b.n	8001d08 <HAL_GPIO_Init+0x244>
 8001d06:	2300      	movs	r3, #0
 8001d08:	697a      	ldr	r2, [r7, #20]
 8001d0a:	f002 0203 	and.w	r2, r2, #3
 8001d0e:	0092      	lsls	r2, r2, #2
 8001d10:	4093      	lsls	r3, r2
 8001d12:	693a      	ldr	r2, [r7, #16]
 8001d14:	4313      	orrs	r3, r2
 8001d16:	613b      	str	r3, [r7, #16]
 8001d18:	4937      	ldr	r1, [pc, #220]	; (8001df8 <HAL_GPIO_Init+0x334>)
 8001d1a:	697b      	ldr	r3, [r7, #20]
 8001d1c:	089b      	lsrs	r3, r3, #2
 8001d1e:	3302      	adds	r3, #2
 8001d20:	693a      	ldr	r2, [r7, #16]
 8001d22:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8001d26:	4b3b      	ldr	r3, [pc, #236]	; (8001e14 <HAL_GPIO_Init+0x350>)
 8001d28:	689b      	ldr	r3, [r3, #8]
 8001d2a:	613b      	str	r3, [r7, #16]
 8001d2c:	68fb      	ldr	r3, [r7, #12]
 8001d2e:	43db      	mvns	r3, r3
 8001d30:	693a      	ldr	r2, [r7, #16]
 8001d32:	4013      	ands	r3, r2
 8001d34:	613b      	str	r3, [r7, #16]
 8001d36:	683b      	ldr	r3, [r7, #0]
 8001d38:	685b      	ldr	r3, [r3, #4]
 8001d3a:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 8001d3e:	2b00      	cmp	r3, #0
 8001d40:	d003      	beq.n	8001d4a <HAL_GPIO_Init+0x286>
 8001d42:	693a      	ldr	r2, [r7, #16]
 8001d44:	68fb      	ldr	r3, [r7, #12]
 8001d46:	4313      	orrs	r3, r2
 8001d48:	613b      	str	r3, [r7, #16]
 8001d4a:	4a32      	ldr	r2, [pc, #200]	; (8001e14 <HAL_GPIO_Init+0x350>)
 8001d4c:	693b      	ldr	r3, [r7, #16]
 8001d4e:	6093      	str	r3, [r2, #8]
 8001d50:	4b30      	ldr	r3, [pc, #192]	; (8001e14 <HAL_GPIO_Init+0x350>)
 8001d52:	68db      	ldr	r3, [r3, #12]
 8001d54:	613b      	str	r3, [r7, #16]
 8001d56:	68fb      	ldr	r3, [r7, #12]
 8001d58:	43db      	mvns	r3, r3
 8001d5a:	693a      	ldr	r2, [r7, #16]
 8001d5c:	4013      	ands	r3, r2
 8001d5e:	613b      	str	r3, [r7, #16]
 8001d60:	683b      	ldr	r3, [r7, #0]
 8001d62:	685b      	ldr	r3, [r3, #4]
 8001d64:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8001d68:	2b00      	cmp	r3, #0
 8001d6a:	d003      	beq.n	8001d74 <HAL_GPIO_Init+0x2b0>
 8001d6c:	693a      	ldr	r2, [r7, #16]
 8001d6e:	68fb      	ldr	r3, [r7, #12]
 8001d70:	4313      	orrs	r3, r2
 8001d72:	613b      	str	r3, [r7, #16]
 8001d74:	4a27      	ldr	r2, [pc, #156]	; (8001e14 <HAL_GPIO_Init+0x350>)
 8001d76:	693b      	ldr	r3, [r7, #16]
 8001d78:	60d3      	str	r3, [r2, #12]
 8001d7a:	4b26      	ldr	r3, [pc, #152]	; (8001e14 <HAL_GPIO_Init+0x350>)
 8001d7c:	685b      	ldr	r3, [r3, #4]
 8001d7e:	613b      	str	r3, [r7, #16]
 8001d80:	68fb      	ldr	r3, [r7, #12]
 8001d82:	43db      	mvns	r3, r3
 8001d84:	693a      	ldr	r2, [r7, #16]
 8001d86:	4013      	ands	r3, r2
 8001d88:	613b      	str	r3, [r7, #16]
 8001d8a:	683b      	ldr	r3, [r7, #0]
 8001d8c:	685b      	ldr	r3, [r3, #4]
 8001d8e:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8001d92:	2b00      	cmp	r3, #0
 8001d94:	d003      	beq.n	8001d9e <HAL_GPIO_Init+0x2da>
 8001d96:	693a      	ldr	r2, [r7, #16]
 8001d98:	68fb      	ldr	r3, [r7, #12]
 8001d9a:	4313      	orrs	r3, r2
 8001d9c:	613b      	str	r3, [r7, #16]
 8001d9e:	4a1d      	ldr	r2, [pc, #116]	; (8001e14 <HAL_GPIO_Init+0x350>)
 8001da0:	693b      	ldr	r3, [r7, #16]
 8001da2:	6053      	str	r3, [r2, #4]
 8001da4:	4b1b      	ldr	r3, [pc, #108]	; (8001e14 <HAL_GPIO_Init+0x350>)
 8001da6:	681b      	ldr	r3, [r3, #0]
 8001da8:	613b      	str	r3, [r7, #16]
 8001daa:	68fb      	ldr	r3, [r7, #12]
 8001dac:	43db      	mvns	r3, r3
 8001dae:	693a      	ldr	r2, [r7, #16]
 8001db0:	4013      	ands	r3, r2
 8001db2:	613b      	str	r3, [r7, #16]
 8001db4:	683b      	ldr	r3, [r7, #0]
 8001db6:	685b      	ldr	r3, [r3, #4]
 8001db8:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8001dbc:	2b00      	cmp	r3, #0
 8001dbe:	d003      	beq.n	8001dc8 <HAL_GPIO_Init+0x304>
 8001dc0:	693a      	ldr	r2, [r7, #16]
 8001dc2:	68fb      	ldr	r3, [r7, #12]
 8001dc4:	4313      	orrs	r3, r2
 8001dc6:	613b      	str	r3, [r7, #16]
 8001dc8:	4a12      	ldr	r2, [pc, #72]	; (8001e14 <HAL_GPIO_Init+0x350>)
 8001dca:	693b      	ldr	r3, [r7, #16]
 8001dcc:	6013      	str	r3, [r2, #0]
 8001dce:	697b      	ldr	r3, [r7, #20]
 8001dd0:	3301      	adds	r3, #1
 8001dd2:	617b      	str	r3, [r7, #20]
 8001dd4:	683b      	ldr	r3, [r7, #0]
 8001dd6:	681a      	ldr	r2, [r3, #0]
 8001dd8:	697b      	ldr	r3, [r7, #20]
 8001dda:	fa22 f303 	lsr.w	r3, r2, r3
 8001dde:	2b00      	cmp	r3, #0
 8001de0:	f47f ae78 	bne.w	8001ad4 <HAL_GPIO_Init+0x10>
 8001de4:	bf00      	nop
 8001de6:	bf00      	nop
 8001de8:	371c      	adds	r7, #28
 8001dea:	46bd      	mov	sp, r7
 8001dec:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001df0:	4770      	bx	lr
 8001df2:	bf00      	nop
 8001df4:	40021000 	.word	0x40021000
 8001df8:	40010000 	.word	0x40010000
 8001dfc:	48000400 	.word	0x48000400
 8001e00:	48000800 	.word	0x48000800
 8001e04:	48000c00 	.word	0x48000c00
 8001e08:	48001000 	.word	0x48001000
 8001e0c:	48001400 	.word	0x48001400
 8001e10:	48001800 	.word	0x48001800
 8001e14:	40010400 	.word	0x40010400

08001e18 <HAL_GPIO_WritePin>:
 8001e18:	b480      	push	{r7}
 8001e1a:	b083      	sub	sp, #12
 8001e1c:	af00      	add	r7, sp, #0
 8001e1e:	6078      	str	r0, [r7, #4]
 8001e20:	460b      	mov	r3, r1
 8001e22:	807b      	strh	r3, [r7, #2]
 8001e24:	4613      	mov	r3, r2
 8001e26:	707b      	strb	r3, [r7, #1]
 8001e28:	787b      	ldrb	r3, [r7, #1]
 8001e2a:	2b00      	cmp	r3, #0
 8001e2c:	d003      	beq.n	8001e36 <HAL_GPIO_WritePin+0x1e>
 8001e2e:	887a      	ldrh	r2, [r7, #2]
 8001e30:	687b      	ldr	r3, [r7, #4]
 8001e32:	619a      	str	r2, [r3, #24]
 8001e34:	e002      	b.n	8001e3c <HAL_GPIO_WritePin+0x24>
 8001e36:	887a      	ldrh	r2, [r7, #2]
 8001e38:	687b      	ldr	r3, [r7, #4]
 8001e3a:	629a      	str	r2, [r3, #40]	; 0x28
 8001e3c:	bf00      	nop
 8001e3e:	370c      	adds	r7, #12
 8001e40:	46bd      	mov	sp, r7
 8001e42:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001e46:	4770      	bx	lr

08001e48 <HAL_I2C_Init>:
 8001e48:	b580      	push	{r7, lr}
 8001e4a:	b082      	sub	sp, #8
 8001e4c:	af00      	add	r7, sp, #0
 8001e4e:	6078      	str	r0, [r7, #4]
 8001e50:	687b      	ldr	r3, [r7, #4]
 8001e52:	2b00      	cmp	r3, #0
 8001e54:	d101      	bne.n	8001e5a <HAL_I2C_Init+0x12>
 8001e56:	2301      	movs	r3, #1
 8001e58:	e08d      	b.n	8001f76 <HAL_I2C_Init+0x12e>
 8001e5a:	687b      	ldr	r3, [r7, #4]
 8001e5c:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 8001e60:	b2db      	uxtb	r3, r3
 8001e62:	2b00      	cmp	r3, #0
 8001e64:	d106      	bne.n	8001e74 <HAL_I2C_Init+0x2c>
 8001e66:	687b      	ldr	r3, [r7, #4]
 8001e68:	2200      	movs	r2, #0
 8001e6a:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8001e6e:	6878      	ldr	r0, [r7, #4]
 8001e70:	f7ff f908 	bl	8001084 <HAL_I2C_MspInit>
 8001e74:	687b      	ldr	r3, [r7, #4]
 8001e76:	2224      	movs	r2, #36	; 0x24
 8001e78:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8001e7c:	687b      	ldr	r3, [r7, #4]
 8001e7e:	681b      	ldr	r3, [r3, #0]
 8001e80:	681a      	ldr	r2, [r3, #0]
 8001e82:	687b      	ldr	r3, [r7, #4]
 8001e84:	681b      	ldr	r3, [r3, #0]
 8001e86:	f022 0201 	bic.w	r2, r2, #1
 8001e8a:	601a      	str	r2, [r3, #0]
 8001e8c:	687b      	ldr	r3, [r7, #4]
 8001e8e:	685a      	ldr	r2, [r3, #4]
 8001e90:	687b      	ldr	r3, [r7, #4]
 8001e92:	681b      	ldr	r3, [r3, #0]
 8001e94:	f022 6270 	bic.w	r2, r2, #251658240	; 0xf000000
 8001e98:	611a      	str	r2, [r3, #16]
 8001e9a:	687b      	ldr	r3, [r7, #4]
 8001e9c:	681b      	ldr	r3, [r3, #0]
 8001e9e:	689a      	ldr	r2, [r3, #8]
 8001ea0:	687b      	ldr	r3, [r7, #4]
 8001ea2:	681b      	ldr	r3, [r3, #0]
 8001ea4:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 8001ea8:	609a      	str	r2, [r3, #8]
 8001eaa:	687b      	ldr	r3, [r7, #4]
 8001eac:	68db      	ldr	r3, [r3, #12]
 8001eae:	2b01      	cmp	r3, #1
 8001eb0:	d107      	bne.n	8001ec2 <HAL_I2C_Init+0x7a>
 8001eb2:	687b      	ldr	r3, [r7, #4]
 8001eb4:	689a      	ldr	r2, [r3, #8]
 8001eb6:	687b      	ldr	r3, [r7, #4]
 8001eb8:	681b      	ldr	r3, [r3, #0]
 8001eba:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 8001ebe:	609a      	str	r2, [r3, #8]
 8001ec0:	e006      	b.n	8001ed0 <HAL_I2C_Init+0x88>
 8001ec2:	687b      	ldr	r3, [r7, #4]
 8001ec4:	689a      	ldr	r2, [r3, #8]
 8001ec6:	687b      	ldr	r3, [r7, #4]
 8001ec8:	681b      	ldr	r3, [r3, #0]
 8001eca:	f442 4204 	orr.w	r2, r2, #33792	; 0x8400
 8001ece:	609a      	str	r2, [r3, #8]
 8001ed0:	687b      	ldr	r3, [r7, #4]
 8001ed2:	68db      	ldr	r3, [r3, #12]
 8001ed4:	2b02      	cmp	r3, #2
 8001ed6:	d108      	bne.n	8001eea <HAL_I2C_Init+0xa2>
 8001ed8:	687b      	ldr	r3, [r7, #4]
 8001eda:	681b      	ldr	r3, [r3, #0]
 8001edc:	685a      	ldr	r2, [r3, #4]
 8001ede:	687b      	ldr	r3, [r7, #4]
 8001ee0:	681b      	ldr	r3, [r3, #0]
 8001ee2:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8001ee6:	605a      	str	r2, [r3, #4]
 8001ee8:	e007      	b.n	8001efa <HAL_I2C_Init+0xb2>
 8001eea:	687b      	ldr	r3, [r7, #4]
 8001eec:	681b      	ldr	r3, [r3, #0]
 8001eee:	685a      	ldr	r2, [r3, #4]
 8001ef0:	687b      	ldr	r3, [r7, #4]
 8001ef2:	681b      	ldr	r3, [r3, #0]
 8001ef4:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8001ef8:	605a      	str	r2, [r3, #4]
 8001efa:	687b      	ldr	r3, [r7, #4]
 8001efc:	681b      	ldr	r3, [r3, #0]
 8001efe:	685b      	ldr	r3, [r3, #4]
 8001f00:	687a      	ldr	r2, [r7, #4]
 8001f02:	6812      	ldr	r2, [r2, #0]
 8001f04:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
 8001f08:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8001f0c:	6053      	str	r3, [r2, #4]
 8001f0e:	687b      	ldr	r3, [r7, #4]
 8001f10:	681b      	ldr	r3, [r3, #0]
 8001f12:	68da      	ldr	r2, [r3, #12]
 8001f14:	687b      	ldr	r3, [r7, #4]
 8001f16:	681b      	ldr	r3, [r3, #0]
 8001f18:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 8001f1c:	60da      	str	r2, [r3, #12]
 8001f1e:	687b      	ldr	r3, [r7, #4]
 8001f20:	691a      	ldr	r2, [r3, #16]
 8001f22:	687b      	ldr	r3, [r7, #4]
 8001f24:	695b      	ldr	r3, [r3, #20]
 8001f26:	ea42 0103 	orr.w	r1, r2, r3
 8001f2a:	687b      	ldr	r3, [r7, #4]
 8001f2c:	699b      	ldr	r3, [r3, #24]
 8001f2e:	021a      	lsls	r2, r3, #8
 8001f30:	687b      	ldr	r3, [r7, #4]
 8001f32:	681b      	ldr	r3, [r3, #0]
 8001f34:	430a      	orrs	r2, r1
 8001f36:	60da      	str	r2, [r3, #12]
 8001f38:	687b      	ldr	r3, [r7, #4]
 8001f3a:	69d9      	ldr	r1, [r3, #28]
 8001f3c:	687b      	ldr	r3, [r7, #4]
 8001f3e:	6a1a      	ldr	r2, [r3, #32]
 8001f40:	687b      	ldr	r3, [r7, #4]
 8001f42:	681b      	ldr	r3, [r3, #0]
 8001f44:	430a      	orrs	r2, r1
 8001f46:	601a      	str	r2, [r3, #0]
 8001f48:	687b      	ldr	r3, [r7, #4]
 8001f4a:	681b      	ldr	r3, [r3, #0]
 8001f4c:	681a      	ldr	r2, [r3, #0]
 8001f4e:	687b      	ldr	r3, [r7, #4]
 8001f50:	681b      	ldr	r3, [r3, #0]
 8001f52:	f042 0201 	orr.w	r2, r2, #1
 8001f56:	601a      	str	r2, [r3, #0]
 8001f58:	687b      	ldr	r3, [r7, #4]
 8001f5a:	2200      	movs	r2, #0
 8001f5c:	645a      	str	r2, [r3, #68]	; 0x44
 8001f5e:	687b      	ldr	r3, [r7, #4]
 8001f60:	2220      	movs	r2, #32
 8001f62:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8001f66:	687b      	ldr	r3, [r7, #4]
 8001f68:	2200      	movs	r2, #0
 8001f6a:	631a      	str	r2, [r3, #48]	; 0x30
 8001f6c:	687b      	ldr	r3, [r7, #4]
 8001f6e:	2200      	movs	r2, #0
 8001f70:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8001f74:	2300      	movs	r3, #0
 8001f76:	4618      	mov	r0, r3
 8001f78:	3708      	adds	r7, #8
 8001f7a:	46bd      	mov	sp, r7
 8001f7c:	bd80      	pop	{r7, pc}
	...

08001f80 <HAL_I2C_Mem_Write>:
 8001f80:	b580      	push	{r7, lr}
 8001f82:	b088      	sub	sp, #32
 8001f84:	af02      	add	r7, sp, #8
 8001f86:	60f8      	str	r0, [r7, #12]
 8001f88:	4608      	mov	r0, r1
 8001f8a:	4611      	mov	r1, r2
 8001f8c:	461a      	mov	r2, r3
 8001f8e:	4603      	mov	r3, r0
 8001f90:	817b      	strh	r3, [r7, #10]
 8001f92:	460b      	mov	r3, r1
 8001f94:	813b      	strh	r3, [r7, #8]
 8001f96:	4613      	mov	r3, r2
 8001f98:	80fb      	strh	r3, [r7, #6]
 8001f9a:	68fb      	ldr	r3, [r7, #12]
 8001f9c:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 8001fa0:	b2db      	uxtb	r3, r3
 8001fa2:	2b20      	cmp	r3, #32
 8001fa4:	f040 80f9 	bne.w	800219a <HAL_I2C_Mem_Write+0x21a>
 8001fa8:	6a3b      	ldr	r3, [r7, #32]
 8001faa:	2b00      	cmp	r3, #0
 8001fac:	d002      	beq.n	8001fb4 <HAL_I2C_Mem_Write+0x34>
 8001fae:	8cbb      	ldrh	r3, [r7, #36]	; 0x24
 8001fb0:	2b00      	cmp	r3, #0
 8001fb2:	d105      	bne.n	8001fc0 <HAL_I2C_Mem_Write+0x40>
 8001fb4:	68fb      	ldr	r3, [r7, #12]
 8001fb6:	f44f 7200 	mov.w	r2, #512	; 0x200
 8001fba:	645a      	str	r2, [r3, #68]	; 0x44
 8001fbc:	2301      	movs	r3, #1
 8001fbe:	e0ed      	b.n	800219c <HAL_I2C_Mem_Write+0x21c>
 8001fc0:	68fb      	ldr	r3, [r7, #12]
 8001fc2:	f893 3040 	ldrb.w	r3, [r3, #64]	; 0x40
 8001fc6:	2b01      	cmp	r3, #1
 8001fc8:	d101      	bne.n	8001fce <HAL_I2C_Mem_Write+0x4e>
 8001fca:	2302      	movs	r3, #2
 8001fcc:	e0e6      	b.n	800219c <HAL_I2C_Mem_Write+0x21c>
 8001fce:	68fb      	ldr	r3, [r7, #12]
 8001fd0:	2201      	movs	r2, #1
 8001fd2:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8001fd6:	f7ff fba7 	bl	8001728 <HAL_GetTick>
 8001fda:	6178      	str	r0, [r7, #20]
 8001fdc:	697b      	ldr	r3, [r7, #20]
 8001fde:	9300      	str	r3, [sp, #0]
 8001fe0:	2319      	movs	r3, #25
 8001fe2:	2201      	movs	r2, #1
 8001fe4:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 8001fe8:	68f8      	ldr	r0, [r7, #12]
 8001fea:	f000 fac3 	bl	8002574 <I2C_WaitOnFlagUntilTimeout>
 8001fee:	4603      	mov	r3, r0
 8001ff0:	2b00      	cmp	r3, #0
 8001ff2:	d001      	beq.n	8001ff8 <HAL_I2C_Mem_Write+0x78>
 8001ff4:	2301      	movs	r3, #1
 8001ff6:	e0d1      	b.n	800219c <HAL_I2C_Mem_Write+0x21c>
 8001ff8:	68fb      	ldr	r3, [r7, #12]
 8001ffa:	2221      	movs	r2, #33	; 0x21
 8001ffc:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8002000:	68fb      	ldr	r3, [r7, #12]
 8002002:	2240      	movs	r2, #64	; 0x40
 8002004:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8002008:	68fb      	ldr	r3, [r7, #12]
 800200a:	2200      	movs	r2, #0
 800200c:	645a      	str	r2, [r3, #68]	; 0x44
 800200e:	68fb      	ldr	r3, [r7, #12]
 8002010:	6a3a      	ldr	r2, [r7, #32]
 8002012:	625a      	str	r2, [r3, #36]	; 0x24
 8002014:	68fb      	ldr	r3, [r7, #12]
 8002016:	8cba      	ldrh	r2, [r7, #36]	; 0x24
 8002018:	855a      	strh	r2, [r3, #42]	; 0x2a
 800201a:	68fb      	ldr	r3, [r7, #12]
 800201c:	2200      	movs	r2, #0
 800201e:	635a      	str	r2, [r3, #52]	; 0x34
 8002020:	88f8      	ldrh	r0, [r7, #6]
 8002022:	893a      	ldrh	r2, [r7, #8]
 8002024:	8979      	ldrh	r1, [r7, #10]
 8002026:	697b      	ldr	r3, [r7, #20]
 8002028:	9301      	str	r3, [sp, #4]
 800202a:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800202c:	9300      	str	r3, [sp, #0]
 800202e:	4603      	mov	r3, r0
 8002030:	68f8      	ldr	r0, [r7, #12]
 8002032:	f000 f9d3 	bl	80023dc <I2C_RequestMemoryWrite>
 8002036:	4603      	mov	r3, r0
 8002038:	2b00      	cmp	r3, #0
 800203a:	d005      	beq.n	8002048 <HAL_I2C_Mem_Write+0xc8>
 800203c:	68fb      	ldr	r3, [r7, #12]
 800203e:	2200      	movs	r2, #0
 8002040:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8002044:	2301      	movs	r3, #1
 8002046:	e0a9      	b.n	800219c <HAL_I2C_Mem_Write+0x21c>
 8002048:	68fb      	ldr	r3, [r7, #12]
 800204a:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 800204c:	b29b      	uxth	r3, r3
 800204e:	2bff      	cmp	r3, #255	; 0xff
 8002050:	d90e      	bls.n	8002070 <HAL_I2C_Mem_Write+0xf0>
 8002052:	68fb      	ldr	r3, [r7, #12]
 8002054:	22ff      	movs	r2, #255	; 0xff
 8002056:	851a      	strh	r2, [r3, #40]	; 0x28
 8002058:	68fb      	ldr	r3, [r7, #12]
 800205a:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 800205c:	b2da      	uxtb	r2, r3
 800205e:	8979      	ldrh	r1, [r7, #10]
 8002060:	2300      	movs	r3, #0
 8002062:	9300      	str	r3, [sp, #0]
 8002064:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 8002068:	68f8      	ldr	r0, [r7, #12]
 800206a:	f000 fc3d 	bl	80028e8 <I2C_TransferConfig>
 800206e:	e00f      	b.n	8002090 <HAL_I2C_Mem_Write+0x110>
 8002070:	68fb      	ldr	r3, [r7, #12]
 8002072:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8002074:	b29a      	uxth	r2, r3
 8002076:	68fb      	ldr	r3, [r7, #12]
 8002078:	851a      	strh	r2, [r3, #40]	; 0x28
 800207a:	68fb      	ldr	r3, [r7, #12]
 800207c:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 800207e:	b2da      	uxtb	r2, r3
 8002080:	8979      	ldrh	r1, [r7, #10]
 8002082:	2300      	movs	r3, #0
 8002084:	9300      	str	r3, [sp, #0]
 8002086:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
 800208a:	68f8      	ldr	r0, [r7, #12]
 800208c:	f000 fc2c 	bl	80028e8 <I2C_TransferConfig>
 8002090:	697a      	ldr	r2, [r7, #20]
 8002092:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 8002094:	68f8      	ldr	r0, [r7, #12]
 8002096:	f000 fabc 	bl	8002612 <I2C_WaitOnTXISFlagUntilTimeout>
 800209a:	4603      	mov	r3, r0
 800209c:	2b00      	cmp	r3, #0
 800209e:	d001      	beq.n	80020a4 <HAL_I2C_Mem_Write+0x124>
 80020a0:	2301      	movs	r3, #1
 80020a2:	e07b      	b.n	800219c <HAL_I2C_Mem_Write+0x21c>
 80020a4:	68fb      	ldr	r3, [r7, #12]
 80020a6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80020a8:	781a      	ldrb	r2, [r3, #0]
 80020aa:	68fb      	ldr	r3, [r7, #12]
 80020ac:	681b      	ldr	r3, [r3, #0]
 80020ae:	629a      	str	r2, [r3, #40]	; 0x28
 80020b0:	68fb      	ldr	r3, [r7, #12]
 80020b2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80020b4:	1c5a      	adds	r2, r3, #1
 80020b6:	68fb      	ldr	r3, [r7, #12]
 80020b8:	625a      	str	r2, [r3, #36]	; 0x24
 80020ba:	68fb      	ldr	r3, [r7, #12]
 80020bc:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 80020be:	b29b      	uxth	r3, r3
 80020c0:	3b01      	subs	r3, #1
 80020c2:	b29a      	uxth	r2, r3
 80020c4:	68fb      	ldr	r3, [r7, #12]
 80020c6:	855a      	strh	r2, [r3, #42]	; 0x2a
 80020c8:	68fb      	ldr	r3, [r7, #12]
 80020ca:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 80020cc:	3b01      	subs	r3, #1
 80020ce:	b29a      	uxth	r2, r3
 80020d0:	68fb      	ldr	r3, [r7, #12]
 80020d2:	851a      	strh	r2, [r3, #40]	; 0x28
 80020d4:	68fb      	ldr	r3, [r7, #12]
 80020d6:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 80020d8:	b29b      	uxth	r3, r3
 80020da:	2b00      	cmp	r3, #0
 80020dc:	d034      	beq.n	8002148 <HAL_I2C_Mem_Write+0x1c8>
 80020de:	68fb      	ldr	r3, [r7, #12]
 80020e0:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 80020e2:	2b00      	cmp	r3, #0
 80020e4:	d130      	bne.n	8002148 <HAL_I2C_Mem_Write+0x1c8>
 80020e6:	697b      	ldr	r3, [r7, #20]
 80020e8:	9300      	str	r3, [sp, #0]
 80020ea:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80020ec:	2200      	movs	r2, #0
 80020ee:	2180      	movs	r1, #128	; 0x80
 80020f0:	68f8      	ldr	r0, [r7, #12]
 80020f2:	f000 fa3f 	bl	8002574 <I2C_WaitOnFlagUntilTimeout>
 80020f6:	4603      	mov	r3, r0
 80020f8:	2b00      	cmp	r3, #0
 80020fa:	d001      	beq.n	8002100 <HAL_I2C_Mem_Write+0x180>
 80020fc:	2301      	movs	r3, #1
 80020fe:	e04d      	b.n	800219c <HAL_I2C_Mem_Write+0x21c>
 8002100:	68fb      	ldr	r3, [r7, #12]
 8002102:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8002104:	b29b      	uxth	r3, r3
 8002106:	2bff      	cmp	r3, #255	; 0xff
 8002108:	d90e      	bls.n	8002128 <HAL_I2C_Mem_Write+0x1a8>
 800210a:	68fb      	ldr	r3, [r7, #12]
 800210c:	22ff      	movs	r2, #255	; 0xff
 800210e:	851a      	strh	r2, [r3, #40]	; 0x28
 8002110:	68fb      	ldr	r3, [r7, #12]
 8002112:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8002114:	b2da      	uxtb	r2, r3
 8002116:	8979      	ldrh	r1, [r7, #10]
 8002118:	2300      	movs	r3, #0
 800211a:	9300      	str	r3, [sp, #0]
 800211c:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 8002120:	68f8      	ldr	r0, [r7, #12]
 8002122:	f000 fbe1 	bl	80028e8 <I2C_TransferConfig>
 8002126:	e00f      	b.n	8002148 <HAL_I2C_Mem_Write+0x1c8>
 8002128:	68fb      	ldr	r3, [r7, #12]
 800212a:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 800212c:	b29a      	uxth	r2, r3
 800212e:	68fb      	ldr	r3, [r7, #12]
 8002130:	851a      	strh	r2, [r3, #40]	; 0x28
 8002132:	68fb      	ldr	r3, [r7, #12]
 8002134:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8002136:	b2da      	uxtb	r2, r3
 8002138:	8979      	ldrh	r1, [r7, #10]
 800213a:	2300      	movs	r3, #0
 800213c:	9300      	str	r3, [sp, #0]
 800213e:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
 8002142:	68f8      	ldr	r0, [r7, #12]
 8002144:	f000 fbd0 	bl	80028e8 <I2C_TransferConfig>
 8002148:	68fb      	ldr	r3, [r7, #12]
 800214a:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 800214c:	b29b      	uxth	r3, r3
 800214e:	2b00      	cmp	r3, #0
 8002150:	d19e      	bne.n	8002090 <HAL_I2C_Mem_Write+0x110>
 8002152:	697a      	ldr	r2, [r7, #20]
 8002154:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 8002156:	68f8      	ldr	r0, [r7, #12]
 8002158:	f000 faa2 	bl	80026a0 <I2C_WaitOnSTOPFlagUntilTimeout>
 800215c:	4603      	mov	r3, r0
 800215e:	2b00      	cmp	r3, #0
 8002160:	d001      	beq.n	8002166 <HAL_I2C_Mem_Write+0x1e6>
 8002162:	2301      	movs	r3, #1
 8002164:	e01a      	b.n	800219c <HAL_I2C_Mem_Write+0x21c>
 8002166:	68fb      	ldr	r3, [r7, #12]
 8002168:	681b      	ldr	r3, [r3, #0]
 800216a:	2220      	movs	r2, #32
 800216c:	61da      	str	r2, [r3, #28]
 800216e:	68fb      	ldr	r3, [r7, #12]
 8002170:	681b      	ldr	r3, [r3, #0]
 8002172:	6859      	ldr	r1, [r3, #4]
 8002174:	68fb      	ldr	r3, [r7, #12]
 8002176:	681a      	ldr	r2, [r3, #0]
 8002178:	4b0a      	ldr	r3, [pc, #40]	; (80021a4 <HAL_I2C_Mem_Write+0x224>)
 800217a:	400b      	ands	r3, r1
 800217c:	6053      	str	r3, [r2, #4]
 800217e:	68fb      	ldr	r3, [r7, #12]
 8002180:	2220      	movs	r2, #32
 8002182:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8002186:	68fb      	ldr	r3, [r7, #12]
 8002188:	2200      	movs	r2, #0
 800218a:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 800218e:	68fb      	ldr	r3, [r7, #12]
 8002190:	2200      	movs	r2, #0
 8002192:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8002196:	2300      	movs	r3, #0
 8002198:	e000      	b.n	800219c <HAL_I2C_Mem_Write+0x21c>
 800219a:	2302      	movs	r3, #2
 800219c:	4618      	mov	r0, r3
 800219e:	3718      	adds	r7, #24
 80021a0:	46bd      	mov	sp, r7
 80021a2:	bd80      	pop	{r7, pc}
 80021a4:	fe00e800 	.word	0xfe00e800

080021a8 <HAL_I2C_Mem_Read>:
 80021a8:	b580      	push	{r7, lr}
 80021aa:	b088      	sub	sp, #32
 80021ac:	af02      	add	r7, sp, #8
 80021ae:	60f8      	str	r0, [r7, #12]
 80021b0:	4608      	mov	r0, r1
 80021b2:	4611      	mov	r1, r2
 80021b4:	461a      	mov	r2, r3
 80021b6:	4603      	mov	r3, r0
 80021b8:	817b      	strh	r3, [r7, #10]
 80021ba:	460b      	mov	r3, r1
 80021bc:	813b      	strh	r3, [r7, #8]
 80021be:	4613      	mov	r3, r2
 80021c0:	80fb      	strh	r3, [r7, #6]
 80021c2:	68fb      	ldr	r3, [r7, #12]
 80021c4:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 80021c8:	b2db      	uxtb	r3, r3
 80021ca:	2b20      	cmp	r3, #32
 80021cc:	f040 80fd 	bne.w	80023ca <HAL_I2C_Mem_Read+0x222>
 80021d0:	6a3b      	ldr	r3, [r7, #32]
 80021d2:	2b00      	cmp	r3, #0
 80021d4:	d002      	beq.n	80021dc <HAL_I2C_Mem_Read+0x34>
 80021d6:	8cbb      	ldrh	r3, [r7, #36]	; 0x24
 80021d8:	2b00      	cmp	r3, #0
 80021da:	d105      	bne.n	80021e8 <HAL_I2C_Mem_Read+0x40>
 80021dc:	68fb      	ldr	r3, [r7, #12]
 80021de:	f44f 7200 	mov.w	r2, #512	; 0x200
 80021e2:	645a      	str	r2, [r3, #68]	; 0x44
 80021e4:	2301      	movs	r3, #1
 80021e6:	e0f1      	b.n	80023cc <HAL_I2C_Mem_Read+0x224>
 80021e8:	68fb      	ldr	r3, [r7, #12]
 80021ea:	f893 3040 	ldrb.w	r3, [r3, #64]	; 0x40
 80021ee:	2b01      	cmp	r3, #1
 80021f0:	d101      	bne.n	80021f6 <HAL_I2C_Mem_Read+0x4e>
 80021f2:	2302      	movs	r3, #2
 80021f4:	e0ea      	b.n	80023cc <HAL_I2C_Mem_Read+0x224>
 80021f6:	68fb      	ldr	r3, [r7, #12]
 80021f8:	2201      	movs	r2, #1
 80021fa:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 80021fe:	f7ff fa93 	bl	8001728 <HAL_GetTick>
 8002202:	6178      	str	r0, [r7, #20]
 8002204:	697b      	ldr	r3, [r7, #20]
 8002206:	9300      	str	r3, [sp, #0]
 8002208:	2319      	movs	r3, #25
 800220a:	2201      	movs	r2, #1
 800220c:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 8002210:	68f8      	ldr	r0, [r7, #12]
 8002212:	f000 f9af 	bl	8002574 <I2C_WaitOnFlagUntilTimeout>
 8002216:	4603      	mov	r3, r0
 8002218:	2b00      	cmp	r3, #0
 800221a:	d001      	beq.n	8002220 <HAL_I2C_Mem_Read+0x78>
 800221c:	2301      	movs	r3, #1
 800221e:	e0d5      	b.n	80023cc <HAL_I2C_Mem_Read+0x224>
 8002220:	68fb      	ldr	r3, [r7, #12]
 8002222:	2222      	movs	r2, #34	; 0x22
 8002224:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8002228:	68fb      	ldr	r3, [r7, #12]
 800222a:	2240      	movs	r2, #64	; 0x40
 800222c:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8002230:	68fb      	ldr	r3, [r7, #12]
 8002232:	2200      	movs	r2, #0
 8002234:	645a      	str	r2, [r3, #68]	; 0x44
 8002236:	68fb      	ldr	r3, [r7, #12]
 8002238:	6a3a      	ldr	r2, [r7, #32]
 800223a:	625a      	str	r2, [r3, #36]	; 0x24
 800223c:	68fb      	ldr	r3, [r7, #12]
 800223e:	8cba      	ldrh	r2, [r7, #36]	; 0x24
 8002240:	855a      	strh	r2, [r3, #42]	; 0x2a
 8002242:	68fb      	ldr	r3, [r7, #12]
 8002244:	2200      	movs	r2, #0
 8002246:	635a      	str	r2, [r3, #52]	; 0x34
 8002248:	88f8      	ldrh	r0, [r7, #6]
 800224a:	893a      	ldrh	r2, [r7, #8]
 800224c:	8979      	ldrh	r1, [r7, #10]
 800224e:	697b      	ldr	r3, [r7, #20]
 8002250:	9301      	str	r3, [sp, #4]
 8002252:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8002254:	9300      	str	r3, [sp, #0]
 8002256:	4603      	mov	r3, r0
 8002258:	68f8      	ldr	r0, [r7, #12]
 800225a:	f000 f913 	bl	8002484 <I2C_RequestMemoryRead>
 800225e:	4603      	mov	r3, r0
 8002260:	2b00      	cmp	r3, #0
 8002262:	d005      	beq.n	8002270 <HAL_I2C_Mem_Read+0xc8>
 8002264:	68fb      	ldr	r3, [r7, #12]
 8002266:	2200      	movs	r2, #0
 8002268:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 800226c:	2301      	movs	r3, #1
 800226e:	e0ad      	b.n	80023cc <HAL_I2C_Mem_Read+0x224>
 8002270:	68fb      	ldr	r3, [r7, #12]
 8002272:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8002274:	b29b      	uxth	r3, r3
 8002276:	2bff      	cmp	r3, #255	; 0xff
 8002278:	d90e      	bls.n	8002298 <HAL_I2C_Mem_Read+0xf0>
 800227a:	68fb      	ldr	r3, [r7, #12]
 800227c:	22ff      	movs	r2, #255	; 0xff
 800227e:	851a      	strh	r2, [r3, #40]	; 0x28
 8002280:	68fb      	ldr	r3, [r7, #12]
 8002282:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8002284:	b2da      	uxtb	r2, r3
 8002286:	8979      	ldrh	r1, [r7, #10]
 8002288:	4b52      	ldr	r3, [pc, #328]	; (80023d4 <HAL_I2C_Mem_Read+0x22c>)
 800228a:	9300      	str	r3, [sp, #0]
 800228c:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 8002290:	68f8      	ldr	r0, [r7, #12]
 8002292:	f000 fb29 	bl	80028e8 <I2C_TransferConfig>
 8002296:	e00f      	b.n	80022b8 <HAL_I2C_Mem_Read+0x110>
 8002298:	68fb      	ldr	r3, [r7, #12]
 800229a:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 800229c:	b29a      	uxth	r2, r3
 800229e:	68fb      	ldr	r3, [r7, #12]
 80022a0:	851a      	strh	r2, [r3, #40]	; 0x28
 80022a2:	68fb      	ldr	r3, [r7, #12]
 80022a4:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 80022a6:	b2da      	uxtb	r2, r3
 80022a8:	8979      	ldrh	r1, [r7, #10]
 80022aa:	4b4a      	ldr	r3, [pc, #296]	; (80023d4 <HAL_I2C_Mem_Read+0x22c>)
 80022ac:	9300      	str	r3, [sp, #0]
 80022ae:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
 80022b2:	68f8      	ldr	r0, [r7, #12]
 80022b4:	f000 fb18 	bl	80028e8 <I2C_TransferConfig>
 80022b8:	697b      	ldr	r3, [r7, #20]
 80022ba:	9300      	str	r3, [sp, #0]
 80022bc:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80022be:	2200      	movs	r2, #0
 80022c0:	2104      	movs	r1, #4
 80022c2:	68f8      	ldr	r0, [r7, #12]
 80022c4:	f000 f956 	bl	8002574 <I2C_WaitOnFlagUntilTimeout>
 80022c8:	4603      	mov	r3, r0
 80022ca:	2b00      	cmp	r3, #0
 80022cc:	d001      	beq.n	80022d2 <HAL_I2C_Mem_Read+0x12a>
 80022ce:	2301      	movs	r3, #1
 80022d0:	e07c      	b.n	80023cc <HAL_I2C_Mem_Read+0x224>
 80022d2:	68fb      	ldr	r3, [r7, #12]
 80022d4:	681b      	ldr	r3, [r3, #0]
 80022d6:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 80022d8:	68fb      	ldr	r3, [r7, #12]
 80022da:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80022dc:	b2d2      	uxtb	r2, r2
 80022de:	701a      	strb	r2, [r3, #0]
 80022e0:	68fb      	ldr	r3, [r7, #12]
 80022e2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80022e4:	1c5a      	adds	r2, r3, #1
 80022e6:	68fb      	ldr	r3, [r7, #12]
 80022e8:	625a      	str	r2, [r3, #36]	; 0x24
 80022ea:	68fb      	ldr	r3, [r7, #12]
 80022ec:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 80022ee:	3b01      	subs	r3, #1
 80022f0:	b29a      	uxth	r2, r3
 80022f2:	68fb      	ldr	r3, [r7, #12]
 80022f4:	851a      	strh	r2, [r3, #40]	; 0x28
 80022f6:	68fb      	ldr	r3, [r7, #12]
 80022f8:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 80022fa:	b29b      	uxth	r3, r3
 80022fc:	3b01      	subs	r3, #1
 80022fe:	b29a      	uxth	r2, r3
 8002300:	68fb      	ldr	r3, [r7, #12]
 8002302:	855a      	strh	r2, [r3, #42]	; 0x2a
 8002304:	68fb      	ldr	r3, [r7, #12]
 8002306:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8002308:	b29b      	uxth	r3, r3
 800230a:	2b00      	cmp	r3, #0
 800230c:	d034      	beq.n	8002378 <HAL_I2C_Mem_Read+0x1d0>
 800230e:	68fb      	ldr	r3, [r7, #12]
 8002310:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8002312:	2b00      	cmp	r3, #0
 8002314:	d130      	bne.n	8002378 <HAL_I2C_Mem_Read+0x1d0>
 8002316:	697b      	ldr	r3, [r7, #20]
 8002318:	9300      	str	r3, [sp, #0]
 800231a:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800231c:	2200      	movs	r2, #0
 800231e:	2180      	movs	r1, #128	; 0x80
 8002320:	68f8      	ldr	r0, [r7, #12]
 8002322:	f000 f927 	bl	8002574 <I2C_WaitOnFlagUntilTimeout>
 8002326:	4603      	mov	r3, r0
 8002328:	2b00      	cmp	r3, #0
 800232a:	d001      	beq.n	8002330 <HAL_I2C_Mem_Read+0x188>
 800232c:	2301      	movs	r3, #1
 800232e:	e04d      	b.n	80023cc <HAL_I2C_Mem_Read+0x224>
 8002330:	68fb      	ldr	r3, [r7, #12]
 8002332:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8002334:	b29b      	uxth	r3, r3
 8002336:	2bff      	cmp	r3, #255	; 0xff
 8002338:	d90e      	bls.n	8002358 <HAL_I2C_Mem_Read+0x1b0>
 800233a:	68fb      	ldr	r3, [r7, #12]
 800233c:	22ff      	movs	r2, #255	; 0xff
 800233e:	851a      	strh	r2, [r3, #40]	; 0x28
 8002340:	68fb      	ldr	r3, [r7, #12]
 8002342:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8002344:	b2da      	uxtb	r2, r3
 8002346:	8979      	ldrh	r1, [r7, #10]
 8002348:	2300      	movs	r3, #0
 800234a:	9300      	str	r3, [sp, #0]
 800234c:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 8002350:	68f8      	ldr	r0, [r7, #12]
 8002352:	f000 fac9 	bl	80028e8 <I2C_TransferConfig>
 8002356:	e00f      	b.n	8002378 <HAL_I2C_Mem_Read+0x1d0>
 8002358:	68fb      	ldr	r3, [r7, #12]
 800235a:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 800235c:	b29a      	uxth	r2, r3
 800235e:	68fb      	ldr	r3, [r7, #12]
 8002360:	851a      	strh	r2, [r3, #40]	; 0x28
 8002362:	68fb      	ldr	r3, [r7, #12]
 8002364:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8002366:	b2da      	uxtb	r2, r3
 8002368:	8979      	ldrh	r1, [r7, #10]
 800236a:	2300      	movs	r3, #0
 800236c:	9300      	str	r3, [sp, #0]
 800236e:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
 8002372:	68f8      	ldr	r0, [r7, #12]
 8002374:	f000 fab8 	bl	80028e8 <I2C_TransferConfig>
 8002378:	68fb      	ldr	r3, [r7, #12]
 800237a:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 800237c:	b29b      	uxth	r3, r3
 800237e:	2b00      	cmp	r3, #0
 8002380:	d19a      	bne.n	80022b8 <HAL_I2C_Mem_Read+0x110>
 8002382:	697a      	ldr	r2, [r7, #20]
 8002384:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 8002386:	68f8      	ldr	r0, [r7, #12]
 8002388:	f000 f98a 	bl	80026a0 <I2C_WaitOnSTOPFlagUntilTimeout>
 800238c:	4603      	mov	r3, r0
 800238e:	2b00      	cmp	r3, #0
 8002390:	d001      	beq.n	8002396 <HAL_I2C_Mem_Read+0x1ee>
 8002392:	2301      	movs	r3, #1
 8002394:	e01a      	b.n	80023cc <HAL_I2C_Mem_Read+0x224>
 8002396:	68fb      	ldr	r3, [r7, #12]
 8002398:	681b      	ldr	r3, [r3, #0]
 800239a:	2220      	movs	r2, #32
 800239c:	61da      	str	r2, [r3, #28]
 800239e:	68fb      	ldr	r3, [r7, #12]
 80023a0:	681b      	ldr	r3, [r3, #0]
 80023a2:	6859      	ldr	r1, [r3, #4]
 80023a4:	68fb      	ldr	r3, [r7, #12]
 80023a6:	681a      	ldr	r2, [r3, #0]
 80023a8:	4b0b      	ldr	r3, [pc, #44]	; (80023d8 <HAL_I2C_Mem_Read+0x230>)
 80023aa:	400b      	ands	r3, r1
 80023ac:	6053      	str	r3, [r2, #4]
 80023ae:	68fb      	ldr	r3, [r7, #12]
 80023b0:	2220      	movs	r2, #32
 80023b2:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 80023b6:	68fb      	ldr	r3, [r7, #12]
 80023b8:	2200      	movs	r2, #0
 80023ba:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 80023be:	68fb      	ldr	r3, [r7, #12]
 80023c0:	2200      	movs	r2, #0
 80023c2:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 80023c6:	2300      	movs	r3, #0
 80023c8:	e000      	b.n	80023cc <HAL_I2C_Mem_Read+0x224>
 80023ca:	2302      	movs	r3, #2
 80023cc:	4618      	mov	r0, r3
 80023ce:	3718      	adds	r7, #24
 80023d0:	46bd      	mov	sp, r7
 80023d2:	bd80      	pop	{r7, pc}
 80023d4:	80002400 	.word	0x80002400
 80023d8:	fe00e800 	.word	0xfe00e800

080023dc <I2C_RequestMemoryWrite>:
 80023dc:	b580      	push	{r7, lr}
 80023de:	b086      	sub	sp, #24
 80023e0:	af02      	add	r7, sp, #8
 80023e2:	60f8      	str	r0, [r7, #12]
 80023e4:	4608      	mov	r0, r1
 80023e6:	4611      	mov	r1, r2
 80023e8:	461a      	mov	r2, r3
 80023ea:	4603      	mov	r3, r0
 80023ec:	817b      	strh	r3, [r7, #10]
 80023ee:	460b      	mov	r3, r1
 80023f0:	813b      	strh	r3, [r7, #8]
 80023f2:	4613      	mov	r3, r2
 80023f4:	80fb      	strh	r3, [r7, #6]
 80023f6:	88fb      	ldrh	r3, [r7, #6]
 80023f8:	b2da      	uxtb	r2, r3
 80023fa:	8979      	ldrh	r1, [r7, #10]
 80023fc:	4b20      	ldr	r3, [pc, #128]	; (8002480 <I2C_RequestMemoryWrite+0xa4>)
 80023fe:	9300      	str	r3, [sp, #0]
 8002400:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 8002404:	68f8      	ldr	r0, [r7, #12]
 8002406:	f000 fa6f 	bl	80028e8 <I2C_TransferConfig>
 800240a:	69fa      	ldr	r2, [r7, #28]
 800240c:	69b9      	ldr	r1, [r7, #24]
 800240e:	68f8      	ldr	r0, [r7, #12]
 8002410:	f000 f8ff 	bl	8002612 <I2C_WaitOnTXISFlagUntilTimeout>
 8002414:	4603      	mov	r3, r0
 8002416:	2b00      	cmp	r3, #0
 8002418:	d001      	beq.n	800241e <I2C_RequestMemoryWrite+0x42>
 800241a:	2301      	movs	r3, #1
 800241c:	e02c      	b.n	8002478 <I2C_RequestMemoryWrite+0x9c>
 800241e:	88fb      	ldrh	r3, [r7, #6]
 8002420:	2b01      	cmp	r3, #1
 8002422:	d105      	bne.n	8002430 <I2C_RequestMemoryWrite+0x54>
 8002424:	893b      	ldrh	r3, [r7, #8]
 8002426:	b2da      	uxtb	r2, r3
 8002428:	68fb      	ldr	r3, [r7, #12]
 800242a:	681b      	ldr	r3, [r3, #0]
 800242c:	629a      	str	r2, [r3, #40]	; 0x28
 800242e:	e015      	b.n	800245c <I2C_RequestMemoryWrite+0x80>
 8002430:	893b      	ldrh	r3, [r7, #8]
 8002432:	0a1b      	lsrs	r3, r3, #8
 8002434:	b29b      	uxth	r3, r3
 8002436:	b2da      	uxtb	r2, r3
 8002438:	68fb      	ldr	r3, [r7, #12]
 800243a:	681b      	ldr	r3, [r3, #0]
 800243c:	629a      	str	r2, [r3, #40]	; 0x28
 800243e:	69fa      	ldr	r2, [r7, #28]
 8002440:	69b9      	ldr	r1, [r7, #24]
 8002442:	68f8      	ldr	r0, [r7, #12]
 8002444:	f000 f8e5 	bl	8002612 <I2C_WaitOnTXISFlagUntilTimeout>
 8002448:	4603      	mov	r3, r0
 800244a:	2b00      	cmp	r3, #0
 800244c:	d001      	beq.n	8002452 <I2C_RequestMemoryWrite+0x76>
 800244e:	2301      	movs	r3, #1
 8002450:	e012      	b.n	8002478 <I2C_RequestMemoryWrite+0x9c>
 8002452:	893b      	ldrh	r3, [r7, #8]
 8002454:	b2da      	uxtb	r2, r3
 8002456:	68fb      	ldr	r3, [r7, #12]
 8002458:	681b      	ldr	r3, [r3, #0]
 800245a:	629a      	str	r2, [r3, #40]	; 0x28
 800245c:	69fb      	ldr	r3, [r7, #28]
 800245e:	9300      	str	r3, [sp, #0]
 8002460:	69bb      	ldr	r3, [r7, #24]
 8002462:	2200      	movs	r2, #0
 8002464:	2180      	movs	r1, #128	; 0x80
 8002466:	68f8      	ldr	r0, [r7, #12]
 8002468:	f000 f884 	bl	8002574 <I2C_WaitOnFlagUntilTimeout>
 800246c:	4603      	mov	r3, r0
 800246e:	2b00      	cmp	r3, #0
 8002470:	d001      	beq.n	8002476 <I2C_RequestMemoryWrite+0x9a>
 8002472:	2301      	movs	r3, #1
 8002474:	e000      	b.n	8002478 <I2C_RequestMemoryWrite+0x9c>
 8002476:	2300      	movs	r3, #0
 8002478:	4618      	mov	r0, r3
 800247a:	3710      	adds	r7, #16
 800247c:	46bd      	mov	sp, r7
 800247e:	bd80      	pop	{r7, pc}
 8002480:	80002000 	.word	0x80002000

08002484 <I2C_RequestMemoryRead>:
 8002484:	b580      	push	{r7, lr}
 8002486:	b086      	sub	sp, #24
 8002488:	af02      	add	r7, sp, #8
 800248a:	60f8      	str	r0, [r7, #12]
 800248c:	4608      	mov	r0, r1
 800248e:	4611      	mov	r1, r2
 8002490:	461a      	mov	r2, r3
 8002492:	4603      	mov	r3, r0
 8002494:	817b      	strh	r3, [r7, #10]
 8002496:	460b      	mov	r3, r1
 8002498:	813b      	strh	r3, [r7, #8]
 800249a:	4613      	mov	r3, r2
 800249c:	80fb      	strh	r3, [r7, #6]
 800249e:	88fb      	ldrh	r3, [r7, #6]
 80024a0:	b2da      	uxtb	r2, r3
 80024a2:	8979      	ldrh	r1, [r7, #10]
 80024a4:	4b20      	ldr	r3, [pc, #128]	; (8002528 <I2C_RequestMemoryRead+0xa4>)
 80024a6:	9300      	str	r3, [sp, #0]
 80024a8:	2300      	movs	r3, #0
 80024aa:	68f8      	ldr	r0, [r7, #12]
 80024ac:	f000 fa1c 	bl	80028e8 <I2C_TransferConfig>
 80024b0:	69fa      	ldr	r2, [r7, #28]
 80024b2:	69b9      	ldr	r1, [r7, #24]
 80024b4:	68f8      	ldr	r0, [r7, #12]
 80024b6:	f000 f8ac 	bl	8002612 <I2C_WaitOnTXISFlagUntilTimeout>
 80024ba:	4603      	mov	r3, r0
 80024bc:	2b00      	cmp	r3, #0
 80024be:	d001      	beq.n	80024c4 <I2C_RequestMemoryRead+0x40>
 80024c0:	2301      	movs	r3, #1
 80024c2:	e02c      	b.n	800251e <I2C_RequestMemoryRead+0x9a>
 80024c4:	88fb      	ldrh	r3, [r7, #6]
 80024c6:	2b01      	cmp	r3, #1
 80024c8:	d105      	bne.n	80024d6 <I2C_RequestMemoryRead+0x52>
 80024ca:	893b      	ldrh	r3, [r7, #8]
 80024cc:	b2da      	uxtb	r2, r3
 80024ce:	68fb      	ldr	r3, [r7, #12]
 80024d0:	681b      	ldr	r3, [r3, #0]
 80024d2:	629a      	str	r2, [r3, #40]	; 0x28
 80024d4:	e015      	b.n	8002502 <I2C_RequestMemoryRead+0x7e>
 80024d6:	893b      	ldrh	r3, [r7, #8]
 80024d8:	0a1b      	lsrs	r3, r3, #8
 80024da:	b29b      	uxth	r3, r3
 80024dc:	b2da      	uxtb	r2, r3
 80024de:	68fb      	ldr	r3, [r7, #12]
 80024e0:	681b      	ldr	r3, [r3, #0]
 80024e2:	629a      	str	r2, [r3, #40]	; 0x28
 80024e4:	69fa      	ldr	r2, [r7, #28]
 80024e6:	69b9      	ldr	r1, [r7, #24]
 80024e8:	68f8      	ldr	r0, [r7, #12]
 80024ea:	f000 f892 	bl	8002612 <I2C_WaitOnTXISFlagUntilTimeout>
 80024ee:	4603      	mov	r3, r0
 80024f0:	2b00      	cmp	r3, #0
 80024f2:	d001      	beq.n	80024f8 <I2C_RequestMemoryRead+0x74>
 80024f4:	2301      	movs	r3, #1
 80024f6:	e012      	b.n	800251e <I2C_RequestMemoryRead+0x9a>
 80024f8:	893b      	ldrh	r3, [r7, #8]
 80024fa:	b2da      	uxtb	r2, r3
 80024fc:	68fb      	ldr	r3, [r7, #12]
 80024fe:	681b      	ldr	r3, [r3, #0]
 8002500:	629a      	str	r2, [r3, #40]	; 0x28
 8002502:	69fb      	ldr	r3, [r7, #28]
 8002504:	9300      	str	r3, [sp, #0]
 8002506:	69bb      	ldr	r3, [r7, #24]
 8002508:	2200      	movs	r2, #0
 800250a:	2140      	movs	r1, #64	; 0x40
 800250c:	68f8      	ldr	r0, [r7, #12]
 800250e:	f000 f831 	bl	8002574 <I2C_WaitOnFlagUntilTimeout>
 8002512:	4603      	mov	r3, r0
 8002514:	2b00      	cmp	r3, #0
 8002516:	d001      	beq.n	800251c <I2C_RequestMemoryRead+0x98>
 8002518:	2301      	movs	r3, #1
 800251a:	e000      	b.n	800251e <I2C_RequestMemoryRead+0x9a>
 800251c:	2300      	movs	r3, #0
 800251e:	4618      	mov	r0, r3
 8002520:	3710      	adds	r7, #16
 8002522:	46bd      	mov	sp, r7
 8002524:	bd80      	pop	{r7, pc}
 8002526:	bf00      	nop
 8002528:	80002000 	.word	0x80002000

0800252c <I2C_Flush_TXDR>:
 800252c:	b480      	push	{r7}
 800252e:	b083      	sub	sp, #12
 8002530:	af00      	add	r7, sp, #0
 8002532:	6078      	str	r0, [r7, #4]
 8002534:	687b      	ldr	r3, [r7, #4]
 8002536:	681b      	ldr	r3, [r3, #0]
 8002538:	699b      	ldr	r3, [r3, #24]
 800253a:	f003 0302 	and.w	r3, r3, #2
 800253e:	2b02      	cmp	r3, #2
 8002540:	d103      	bne.n	800254a <I2C_Flush_TXDR+0x1e>
 8002542:	687b      	ldr	r3, [r7, #4]
 8002544:	681b      	ldr	r3, [r3, #0]
 8002546:	2200      	movs	r2, #0
 8002548:	629a      	str	r2, [r3, #40]	; 0x28
 800254a:	687b      	ldr	r3, [r7, #4]
 800254c:	681b      	ldr	r3, [r3, #0]
 800254e:	699b      	ldr	r3, [r3, #24]
 8002550:	f003 0301 	and.w	r3, r3, #1
 8002554:	2b01      	cmp	r3, #1
 8002556:	d007      	beq.n	8002568 <I2C_Flush_TXDR+0x3c>
 8002558:	687b      	ldr	r3, [r7, #4]
 800255a:	681b      	ldr	r3, [r3, #0]
 800255c:	699a      	ldr	r2, [r3, #24]
 800255e:	687b      	ldr	r3, [r7, #4]
 8002560:	681b      	ldr	r3, [r3, #0]
 8002562:	f042 0201 	orr.w	r2, r2, #1
 8002566:	619a      	str	r2, [r3, #24]
 8002568:	bf00      	nop
 800256a:	370c      	adds	r7, #12
 800256c:	46bd      	mov	sp, r7
 800256e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002572:	4770      	bx	lr

08002574 <I2C_WaitOnFlagUntilTimeout>:
 8002574:	b580      	push	{r7, lr}
 8002576:	b084      	sub	sp, #16
 8002578:	af00      	add	r7, sp, #0
 800257a:	60f8      	str	r0, [r7, #12]
 800257c:	60b9      	str	r1, [r7, #8]
 800257e:	603b      	str	r3, [r7, #0]
 8002580:	4613      	mov	r3, r2
 8002582:	71fb      	strb	r3, [r7, #7]
 8002584:	e031      	b.n	80025ea <I2C_WaitOnFlagUntilTimeout+0x76>
 8002586:	683b      	ldr	r3, [r7, #0]
 8002588:	f1b3 3fff 	cmp.w	r3, #4294967295
 800258c:	d02d      	beq.n	80025ea <I2C_WaitOnFlagUntilTimeout+0x76>
 800258e:	f7ff f8cb 	bl	8001728 <HAL_GetTick>
 8002592:	4602      	mov	r2, r0
 8002594:	69bb      	ldr	r3, [r7, #24]
 8002596:	1ad3      	subs	r3, r2, r3
 8002598:	683a      	ldr	r2, [r7, #0]
 800259a:	429a      	cmp	r2, r3
 800259c:	d302      	bcc.n	80025a4 <I2C_WaitOnFlagUntilTimeout+0x30>
 800259e:	683b      	ldr	r3, [r7, #0]
 80025a0:	2b00      	cmp	r3, #0
 80025a2:	d122      	bne.n	80025ea <I2C_WaitOnFlagUntilTimeout+0x76>
 80025a4:	68fb      	ldr	r3, [r7, #12]
 80025a6:	681b      	ldr	r3, [r3, #0]
 80025a8:	699a      	ldr	r2, [r3, #24]
 80025aa:	68bb      	ldr	r3, [r7, #8]
 80025ac:	4013      	ands	r3, r2
 80025ae:	68ba      	ldr	r2, [r7, #8]
 80025b0:	429a      	cmp	r2, r3
 80025b2:	bf0c      	ite	eq
 80025b4:	2301      	moveq	r3, #1
 80025b6:	2300      	movne	r3, #0
 80025b8:	b2db      	uxtb	r3, r3
 80025ba:	461a      	mov	r2, r3
 80025bc:	79fb      	ldrb	r3, [r7, #7]
 80025be:	429a      	cmp	r2, r3
 80025c0:	d113      	bne.n	80025ea <I2C_WaitOnFlagUntilTimeout+0x76>
 80025c2:	68fb      	ldr	r3, [r7, #12]
 80025c4:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80025c6:	f043 0220 	orr.w	r2, r3, #32
 80025ca:	68fb      	ldr	r3, [r7, #12]
 80025cc:	645a      	str	r2, [r3, #68]	; 0x44
 80025ce:	68fb      	ldr	r3, [r7, #12]
 80025d0:	2220      	movs	r2, #32
 80025d2:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 80025d6:	68fb      	ldr	r3, [r7, #12]
 80025d8:	2200      	movs	r2, #0
 80025da:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 80025de:	68fb      	ldr	r3, [r7, #12]
 80025e0:	2200      	movs	r2, #0
 80025e2:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 80025e6:	2301      	movs	r3, #1
 80025e8:	e00f      	b.n	800260a <I2C_WaitOnFlagUntilTimeout+0x96>
 80025ea:	68fb      	ldr	r3, [r7, #12]
 80025ec:	681b      	ldr	r3, [r3, #0]
 80025ee:	699a      	ldr	r2, [r3, #24]
 80025f0:	68bb      	ldr	r3, [r7, #8]
 80025f2:	4013      	ands	r3, r2
 80025f4:	68ba      	ldr	r2, [r7, #8]
 80025f6:	429a      	cmp	r2, r3
 80025f8:	bf0c      	ite	eq
 80025fa:	2301      	moveq	r3, #1
 80025fc:	2300      	movne	r3, #0
 80025fe:	b2db      	uxtb	r3, r3
 8002600:	461a      	mov	r2, r3
 8002602:	79fb      	ldrb	r3, [r7, #7]
 8002604:	429a      	cmp	r2, r3
 8002606:	d0be      	beq.n	8002586 <I2C_WaitOnFlagUntilTimeout+0x12>
 8002608:	2300      	movs	r3, #0
 800260a:	4618      	mov	r0, r3
 800260c:	3710      	adds	r7, #16
 800260e:	46bd      	mov	sp, r7
 8002610:	bd80      	pop	{r7, pc}

08002612 <I2C_WaitOnTXISFlagUntilTimeout>:
 8002612:	b580      	push	{r7, lr}
 8002614:	b084      	sub	sp, #16
 8002616:	af00      	add	r7, sp, #0
 8002618:	60f8      	str	r0, [r7, #12]
 800261a:	60b9      	str	r1, [r7, #8]
 800261c:	607a      	str	r2, [r7, #4]
 800261e:	e033      	b.n	8002688 <I2C_WaitOnTXISFlagUntilTimeout+0x76>
 8002620:	687a      	ldr	r2, [r7, #4]
 8002622:	68b9      	ldr	r1, [r7, #8]
 8002624:	68f8      	ldr	r0, [r7, #12]
 8002626:	f000 f87f 	bl	8002728 <I2C_IsErrorOccurred>
 800262a:	4603      	mov	r3, r0
 800262c:	2b00      	cmp	r3, #0
 800262e:	d001      	beq.n	8002634 <I2C_WaitOnTXISFlagUntilTimeout+0x22>
 8002630:	2301      	movs	r3, #1
 8002632:	e031      	b.n	8002698 <I2C_WaitOnTXISFlagUntilTimeout+0x86>
 8002634:	68bb      	ldr	r3, [r7, #8]
 8002636:	f1b3 3fff 	cmp.w	r3, #4294967295
 800263a:	d025      	beq.n	8002688 <I2C_WaitOnTXISFlagUntilTimeout+0x76>
 800263c:	f7ff f874 	bl	8001728 <HAL_GetTick>
 8002640:	4602      	mov	r2, r0
 8002642:	687b      	ldr	r3, [r7, #4]
 8002644:	1ad3      	subs	r3, r2, r3
 8002646:	68ba      	ldr	r2, [r7, #8]
 8002648:	429a      	cmp	r2, r3
 800264a:	d302      	bcc.n	8002652 <I2C_WaitOnTXISFlagUntilTimeout+0x40>
 800264c:	68bb      	ldr	r3, [r7, #8]
 800264e:	2b00      	cmp	r3, #0
 8002650:	d11a      	bne.n	8002688 <I2C_WaitOnTXISFlagUntilTimeout+0x76>
 8002652:	68fb      	ldr	r3, [r7, #12]
 8002654:	681b      	ldr	r3, [r3, #0]
 8002656:	699b      	ldr	r3, [r3, #24]
 8002658:	f003 0302 	and.w	r3, r3, #2
 800265c:	2b02      	cmp	r3, #2
 800265e:	d013      	beq.n	8002688 <I2C_WaitOnTXISFlagUntilTimeout+0x76>
 8002660:	68fb      	ldr	r3, [r7, #12]
 8002662:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8002664:	f043 0220 	orr.w	r2, r3, #32
 8002668:	68fb      	ldr	r3, [r7, #12]
 800266a:	645a      	str	r2, [r3, #68]	; 0x44
 800266c:	68fb      	ldr	r3, [r7, #12]
 800266e:	2220      	movs	r2, #32
 8002670:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8002674:	68fb      	ldr	r3, [r7, #12]
 8002676:	2200      	movs	r2, #0
 8002678:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 800267c:	68fb      	ldr	r3, [r7, #12]
 800267e:	2200      	movs	r2, #0
 8002680:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8002684:	2301      	movs	r3, #1
 8002686:	e007      	b.n	8002698 <I2C_WaitOnTXISFlagUntilTimeout+0x86>
 8002688:	68fb      	ldr	r3, [r7, #12]
 800268a:	681b      	ldr	r3, [r3, #0]
 800268c:	699b      	ldr	r3, [r3, #24]
 800268e:	f003 0302 	and.w	r3, r3, #2
 8002692:	2b02      	cmp	r3, #2
 8002694:	d1c4      	bne.n	8002620 <I2C_WaitOnTXISFlagUntilTimeout+0xe>
 8002696:	2300      	movs	r3, #0
 8002698:	4618      	mov	r0, r3
 800269a:	3710      	adds	r7, #16
 800269c:	46bd      	mov	sp, r7
 800269e:	bd80      	pop	{r7, pc}

080026a0 <I2C_WaitOnSTOPFlagUntilTimeout>:
 80026a0:	b580      	push	{r7, lr}
 80026a2:	b084      	sub	sp, #16
 80026a4:	af00      	add	r7, sp, #0
 80026a6:	60f8      	str	r0, [r7, #12]
 80026a8:	60b9      	str	r1, [r7, #8]
 80026aa:	607a      	str	r2, [r7, #4]
 80026ac:	e02f      	b.n	800270e <I2C_WaitOnSTOPFlagUntilTimeout+0x6e>
 80026ae:	687a      	ldr	r2, [r7, #4]
 80026b0:	68b9      	ldr	r1, [r7, #8]
 80026b2:	68f8      	ldr	r0, [r7, #12]
 80026b4:	f000 f838 	bl	8002728 <I2C_IsErrorOccurred>
 80026b8:	4603      	mov	r3, r0
 80026ba:	2b00      	cmp	r3, #0
 80026bc:	d001      	beq.n	80026c2 <I2C_WaitOnSTOPFlagUntilTimeout+0x22>
 80026be:	2301      	movs	r3, #1
 80026c0:	e02d      	b.n	800271e <I2C_WaitOnSTOPFlagUntilTimeout+0x7e>
 80026c2:	f7ff f831 	bl	8001728 <HAL_GetTick>
 80026c6:	4602      	mov	r2, r0
 80026c8:	687b      	ldr	r3, [r7, #4]
 80026ca:	1ad3      	subs	r3, r2, r3
 80026cc:	68ba      	ldr	r2, [r7, #8]
 80026ce:	429a      	cmp	r2, r3
 80026d0:	d302      	bcc.n	80026d8 <I2C_WaitOnSTOPFlagUntilTimeout+0x38>
 80026d2:	68bb      	ldr	r3, [r7, #8]
 80026d4:	2b00      	cmp	r3, #0
 80026d6:	d11a      	bne.n	800270e <I2C_WaitOnSTOPFlagUntilTimeout+0x6e>
 80026d8:	68fb      	ldr	r3, [r7, #12]
 80026da:	681b      	ldr	r3, [r3, #0]
 80026dc:	699b      	ldr	r3, [r3, #24]
 80026de:	f003 0320 	and.w	r3, r3, #32
 80026e2:	2b20      	cmp	r3, #32
 80026e4:	d013      	beq.n	800270e <I2C_WaitOnSTOPFlagUntilTimeout+0x6e>
 80026e6:	68fb      	ldr	r3, [r7, #12]
 80026e8:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80026ea:	f043 0220 	orr.w	r2, r3, #32
 80026ee:	68fb      	ldr	r3, [r7, #12]
 80026f0:	645a      	str	r2, [r3, #68]	; 0x44
 80026f2:	68fb      	ldr	r3, [r7, #12]
 80026f4:	2220      	movs	r2, #32
 80026f6:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 80026fa:	68fb      	ldr	r3, [r7, #12]
 80026fc:	2200      	movs	r2, #0
 80026fe:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8002702:	68fb      	ldr	r3, [r7, #12]
 8002704:	2200      	movs	r2, #0
 8002706:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 800270a:	2301      	movs	r3, #1
 800270c:	e007      	b.n	800271e <I2C_WaitOnSTOPFlagUntilTimeout+0x7e>
 800270e:	68fb      	ldr	r3, [r7, #12]
 8002710:	681b      	ldr	r3, [r3, #0]
 8002712:	699b      	ldr	r3, [r3, #24]
 8002714:	f003 0320 	and.w	r3, r3, #32
 8002718:	2b20      	cmp	r3, #32
 800271a:	d1c8      	bne.n	80026ae <I2C_WaitOnSTOPFlagUntilTimeout+0xe>
 800271c:	2300      	movs	r3, #0
 800271e:	4618      	mov	r0, r3
 8002720:	3710      	adds	r7, #16
 8002722:	46bd      	mov	sp, r7
 8002724:	bd80      	pop	{r7, pc}
	...

08002728 <I2C_IsErrorOccurred>:
 8002728:	b580      	push	{r7, lr}
 800272a:	b08a      	sub	sp, #40	; 0x28
 800272c:	af00      	add	r7, sp, #0
 800272e:	60f8      	str	r0, [r7, #12]
 8002730:	60b9      	str	r1, [r7, #8]
 8002732:	607a      	str	r2, [r7, #4]
 8002734:	2300      	movs	r3, #0
 8002736:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
 800273a:	68fb      	ldr	r3, [r7, #12]
 800273c:	681b      	ldr	r3, [r3, #0]
 800273e:	699b      	ldr	r3, [r3, #24]
 8002740:	61bb      	str	r3, [r7, #24]
 8002742:	2300      	movs	r3, #0
 8002744:	623b      	str	r3, [r7, #32]
 8002746:	687b      	ldr	r3, [r7, #4]
 8002748:	61fb      	str	r3, [r7, #28]
 800274a:	69bb      	ldr	r3, [r7, #24]
 800274c:	f003 0310 	and.w	r3, r3, #16
 8002750:	2b00      	cmp	r3, #0
 8002752:	d068      	beq.n	8002826 <I2C_IsErrorOccurred+0xfe>
 8002754:	68fb      	ldr	r3, [r7, #12]
 8002756:	681b      	ldr	r3, [r3, #0]
 8002758:	2210      	movs	r2, #16
 800275a:	61da      	str	r2, [r3, #28]
 800275c:	e049      	b.n	80027f2 <I2C_IsErrorOccurred+0xca>
 800275e:	68bb      	ldr	r3, [r7, #8]
 8002760:	f1b3 3fff 	cmp.w	r3, #4294967295
 8002764:	d045      	beq.n	80027f2 <I2C_IsErrorOccurred+0xca>
 8002766:	f7fe ffdf 	bl	8001728 <HAL_GetTick>
 800276a:	4602      	mov	r2, r0
 800276c:	69fb      	ldr	r3, [r7, #28]
 800276e:	1ad3      	subs	r3, r2, r3
 8002770:	68ba      	ldr	r2, [r7, #8]
 8002772:	429a      	cmp	r2, r3
 8002774:	d302      	bcc.n	800277c <I2C_IsErrorOccurred+0x54>
 8002776:	68bb      	ldr	r3, [r7, #8]
 8002778:	2b00      	cmp	r3, #0
 800277a:	d13a      	bne.n	80027f2 <I2C_IsErrorOccurred+0xca>
 800277c:	68fb      	ldr	r3, [r7, #12]
 800277e:	681b      	ldr	r3, [r3, #0]
 8002780:	685b      	ldr	r3, [r3, #4]
 8002782:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8002786:	617b      	str	r3, [r7, #20]
 8002788:	68fb      	ldr	r3, [r7, #12]
 800278a:	f893 3042 	ldrb.w	r3, [r3, #66]	; 0x42
 800278e:	74fb      	strb	r3, [r7, #19]
 8002790:	68fb      	ldr	r3, [r7, #12]
 8002792:	681b      	ldr	r3, [r3, #0]
 8002794:	699b      	ldr	r3, [r3, #24]
 8002796:	f403 4300 	and.w	r3, r3, #32768	; 0x8000
 800279a:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 800279e:	d121      	bne.n	80027e4 <I2C_IsErrorOccurred+0xbc>
 80027a0:	697b      	ldr	r3, [r7, #20]
 80027a2:	f5b3 4f80 	cmp.w	r3, #16384	; 0x4000
 80027a6:	d01d      	beq.n	80027e4 <I2C_IsErrorOccurred+0xbc>
 80027a8:	7cfb      	ldrb	r3, [r7, #19]
 80027aa:	2b20      	cmp	r3, #32
 80027ac:	d01a      	beq.n	80027e4 <I2C_IsErrorOccurred+0xbc>
 80027ae:	68fb      	ldr	r3, [r7, #12]
 80027b0:	681b      	ldr	r3, [r3, #0]
 80027b2:	685a      	ldr	r2, [r3, #4]
 80027b4:	68fb      	ldr	r3, [r7, #12]
 80027b6:	681b      	ldr	r3, [r3, #0]
 80027b8:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 80027bc:	605a      	str	r2, [r3, #4]
 80027be:	f7fe ffb3 	bl	8001728 <HAL_GetTick>
 80027c2:	61f8      	str	r0, [r7, #28]
 80027c4:	e00e      	b.n	80027e4 <I2C_IsErrorOccurred+0xbc>
 80027c6:	f7fe ffaf 	bl	8001728 <HAL_GetTick>
 80027ca:	4602      	mov	r2, r0
 80027cc:	69fb      	ldr	r3, [r7, #28]
 80027ce:	1ad3      	subs	r3, r2, r3
 80027d0:	2b19      	cmp	r3, #25
 80027d2:	d907      	bls.n	80027e4 <I2C_IsErrorOccurred+0xbc>
 80027d4:	6a3b      	ldr	r3, [r7, #32]
 80027d6:	f043 0320 	orr.w	r3, r3, #32
 80027da:	623b      	str	r3, [r7, #32]
 80027dc:	2301      	movs	r3, #1
 80027de:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
 80027e2:	e006      	b.n	80027f2 <I2C_IsErrorOccurred+0xca>
 80027e4:	68fb      	ldr	r3, [r7, #12]
 80027e6:	681b      	ldr	r3, [r3, #0]
 80027e8:	699b      	ldr	r3, [r3, #24]
 80027ea:	f003 0320 	and.w	r3, r3, #32
 80027ee:	2b20      	cmp	r3, #32
 80027f0:	d1e9      	bne.n	80027c6 <I2C_IsErrorOccurred+0x9e>
 80027f2:	68fb      	ldr	r3, [r7, #12]
 80027f4:	681b      	ldr	r3, [r3, #0]
 80027f6:	699b      	ldr	r3, [r3, #24]
 80027f8:	f003 0320 	and.w	r3, r3, #32
 80027fc:	2b20      	cmp	r3, #32
 80027fe:	d003      	beq.n	8002808 <I2C_IsErrorOccurred+0xe0>
 8002800:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 8002804:	2b00      	cmp	r3, #0
 8002806:	d0aa      	beq.n	800275e <I2C_IsErrorOccurred+0x36>
 8002808:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 800280c:	2b00      	cmp	r3, #0
 800280e:	d103      	bne.n	8002818 <I2C_IsErrorOccurred+0xf0>
 8002810:	68fb      	ldr	r3, [r7, #12]
 8002812:	681b      	ldr	r3, [r3, #0]
 8002814:	2220      	movs	r2, #32
 8002816:	61da      	str	r2, [r3, #28]
 8002818:	6a3b      	ldr	r3, [r7, #32]
 800281a:	f043 0304 	orr.w	r3, r3, #4
 800281e:	623b      	str	r3, [r7, #32]
 8002820:	2301      	movs	r3, #1
 8002822:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
 8002826:	68fb      	ldr	r3, [r7, #12]
 8002828:	681b      	ldr	r3, [r3, #0]
 800282a:	699b      	ldr	r3, [r3, #24]
 800282c:	61bb      	str	r3, [r7, #24]
 800282e:	69bb      	ldr	r3, [r7, #24]
 8002830:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8002834:	2b00      	cmp	r3, #0
 8002836:	d00b      	beq.n	8002850 <I2C_IsErrorOccurred+0x128>
 8002838:	6a3b      	ldr	r3, [r7, #32]
 800283a:	f043 0301 	orr.w	r3, r3, #1
 800283e:	623b      	str	r3, [r7, #32]
 8002840:	68fb      	ldr	r3, [r7, #12]
 8002842:	681b      	ldr	r3, [r3, #0]
 8002844:	f44f 7280 	mov.w	r2, #256	; 0x100
 8002848:	61da      	str	r2, [r3, #28]
 800284a:	2301      	movs	r3, #1
 800284c:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
 8002850:	69bb      	ldr	r3, [r7, #24]
 8002852:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8002856:	2b00      	cmp	r3, #0
 8002858:	d00b      	beq.n	8002872 <I2C_IsErrorOccurred+0x14a>
 800285a:	6a3b      	ldr	r3, [r7, #32]
 800285c:	f043 0308 	orr.w	r3, r3, #8
 8002860:	623b      	str	r3, [r7, #32]
 8002862:	68fb      	ldr	r3, [r7, #12]
 8002864:	681b      	ldr	r3, [r3, #0]
 8002866:	f44f 6280 	mov.w	r2, #1024	; 0x400
 800286a:	61da      	str	r2, [r3, #28]
 800286c:	2301      	movs	r3, #1
 800286e:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
 8002872:	69bb      	ldr	r3, [r7, #24]
 8002874:	f403 7300 	and.w	r3, r3, #512	; 0x200
 8002878:	2b00      	cmp	r3, #0
 800287a:	d00b      	beq.n	8002894 <I2C_IsErrorOccurred+0x16c>
 800287c:	6a3b      	ldr	r3, [r7, #32]
 800287e:	f043 0302 	orr.w	r3, r3, #2
 8002882:	623b      	str	r3, [r7, #32]
 8002884:	68fb      	ldr	r3, [r7, #12]
 8002886:	681b      	ldr	r3, [r3, #0]
 8002888:	f44f 7200 	mov.w	r2, #512	; 0x200
 800288c:	61da      	str	r2, [r3, #28]
 800288e:	2301      	movs	r3, #1
 8002890:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
 8002894:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 8002898:	2b00      	cmp	r3, #0
 800289a:	d01c      	beq.n	80028d6 <I2C_IsErrorOccurred+0x1ae>
 800289c:	68f8      	ldr	r0, [r7, #12]
 800289e:	f7ff fe45 	bl	800252c <I2C_Flush_TXDR>
 80028a2:	68fb      	ldr	r3, [r7, #12]
 80028a4:	681b      	ldr	r3, [r3, #0]
 80028a6:	6859      	ldr	r1, [r3, #4]
 80028a8:	68fb      	ldr	r3, [r7, #12]
 80028aa:	681a      	ldr	r2, [r3, #0]
 80028ac:	4b0d      	ldr	r3, [pc, #52]	; (80028e4 <I2C_IsErrorOccurred+0x1bc>)
 80028ae:	400b      	ands	r3, r1
 80028b0:	6053      	str	r3, [r2, #4]
 80028b2:	68fb      	ldr	r3, [r7, #12]
 80028b4:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 80028b6:	6a3b      	ldr	r3, [r7, #32]
 80028b8:	431a      	orrs	r2, r3
 80028ba:	68fb      	ldr	r3, [r7, #12]
 80028bc:	645a      	str	r2, [r3, #68]	; 0x44
 80028be:	68fb      	ldr	r3, [r7, #12]
 80028c0:	2220      	movs	r2, #32
 80028c2:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 80028c6:	68fb      	ldr	r3, [r7, #12]
 80028c8:	2200      	movs	r2, #0
 80028ca:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 80028ce:	68fb      	ldr	r3, [r7, #12]
 80028d0:	2200      	movs	r2, #0
 80028d2:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 80028d6:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 80028da:	4618      	mov	r0, r3
 80028dc:	3728      	adds	r7, #40	; 0x28
 80028de:	46bd      	mov	sp, r7
 80028e0:	bd80      	pop	{r7, pc}
 80028e2:	bf00      	nop
 80028e4:	fe00e800 	.word	0xfe00e800

080028e8 <I2C_TransferConfig>:
 80028e8:	b480      	push	{r7}
 80028ea:	b087      	sub	sp, #28
 80028ec:	af00      	add	r7, sp, #0
 80028ee:	60f8      	str	r0, [r7, #12]
 80028f0:	607b      	str	r3, [r7, #4]
 80028f2:	460b      	mov	r3, r1
 80028f4:	817b      	strh	r3, [r7, #10]
 80028f6:	4613      	mov	r3, r2
 80028f8:	727b      	strb	r3, [r7, #9]
 80028fa:	897b      	ldrh	r3, [r7, #10]
 80028fc:	f3c3 0209 	ubfx	r2, r3, #0, #10
 8002900:	7a7b      	ldrb	r3, [r7, #9]
 8002902:	041b      	lsls	r3, r3, #16
 8002904:	f403 037f 	and.w	r3, r3, #16711680	; 0xff0000
 8002908:	431a      	orrs	r2, r3
 800290a:	687b      	ldr	r3, [r7, #4]
 800290c:	431a      	orrs	r2, r3
 800290e:	6a3b      	ldr	r3, [r7, #32]
 8002910:	4313      	orrs	r3, r2
 8002912:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 8002916:	617b      	str	r3, [r7, #20]
 8002918:	68fb      	ldr	r3, [r7, #12]
 800291a:	681b      	ldr	r3, [r3, #0]
 800291c:	685a      	ldr	r2, [r3, #4]
 800291e:	6a3b      	ldr	r3, [r7, #32]
 8002920:	0d5b      	lsrs	r3, r3, #21
 8002922:	f403 6180 	and.w	r1, r3, #1024	; 0x400
 8002926:	4b08      	ldr	r3, [pc, #32]	; (8002948 <I2C_TransferConfig+0x60>)
 8002928:	430b      	orrs	r3, r1
 800292a:	43db      	mvns	r3, r3
 800292c:	ea02 0103 	and.w	r1, r2, r3
 8002930:	68fb      	ldr	r3, [r7, #12]
 8002932:	681b      	ldr	r3, [r3, #0]
 8002934:	697a      	ldr	r2, [r7, #20]
 8002936:	430a      	orrs	r2, r1
 8002938:	605a      	str	r2, [r3, #4]
 800293a:	bf00      	nop
 800293c:	371c      	adds	r7, #28
 800293e:	46bd      	mov	sp, r7
 8002940:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002944:	4770      	bx	lr
 8002946:	bf00      	nop
 8002948:	03ff63ff 	.word	0x03ff63ff

0800294c <HAL_I2CEx_ConfigAnalogFilter>:
 800294c:	b480      	push	{r7}
 800294e:	b083      	sub	sp, #12
 8002950:	af00      	add	r7, sp, #0
 8002952:	6078      	str	r0, [r7, #4]
 8002954:	6039      	str	r1, [r7, #0]
 8002956:	687b      	ldr	r3, [r7, #4]
 8002958:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 800295c:	b2db      	uxtb	r3, r3
 800295e:	2b20      	cmp	r3, #32
 8002960:	d138      	bne.n	80029d4 <HAL_I2CEx_ConfigAnalogFilter+0x88>
 8002962:	687b      	ldr	r3, [r7, #4]
 8002964:	f893 3040 	ldrb.w	r3, [r3, #64]	; 0x40
 8002968:	2b01      	cmp	r3, #1
 800296a:	d101      	bne.n	8002970 <HAL_I2CEx_ConfigAnalogFilter+0x24>
 800296c:	2302      	movs	r3, #2
 800296e:	e032      	b.n	80029d6 <HAL_I2CEx_ConfigAnalogFilter+0x8a>
 8002970:	687b      	ldr	r3, [r7, #4]
 8002972:	2201      	movs	r2, #1
 8002974:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8002978:	687b      	ldr	r3, [r7, #4]
 800297a:	2224      	movs	r2, #36	; 0x24
 800297c:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8002980:	687b      	ldr	r3, [r7, #4]
 8002982:	681b      	ldr	r3, [r3, #0]
 8002984:	681a      	ldr	r2, [r3, #0]
 8002986:	687b      	ldr	r3, [r7, #4]
 8002988:	681b      	ldr	r3, [r3, #0]
 800298a:	f022 0201 	bic.w	r2, r2, #1
 800298e:	601a      	str	r2, [r3, #0]
 8002990:	687b      	ldr	r3, [r7, #4]
 8002992:	681b      	ldr	r3, [r3, #0]
 8002994:	681a      	ldr	r2, [r3, #0]
 8002996:	687b      	ldr	r3, [r7, #4]
 8002998:	681b      	ldr	r3, [r3, #0]
 800299a:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
 800299e:	601a      	str	r2, [r3, #0]
 80029a0:	687b      	ldr	r3, [r7, #4]
 80029a2:	681b      	ldr	r3, [r3, #0]
 80029a4:	6819      	ldr	r1, [r3, #0]
 80029a6:	687b      	ldr	r3, [r7, #4]
 80029a8:	681b      	ldr	r3, [r3, #0]
 80029aa:	683a      	ldr	r2, [r7, #0]
 80029ac:	430a      	orrs	r2, r1
 80029ae:	601a      	str	r2, [r3, #0]
 80029b0:	687b      	ldr	r3, [r7, #4]
 80029b2:	681b      	ldr	r3, [r3, #0]
 80029b4:	681a      	ldr	r2, [r3, #0]
 80029b6:	687b      	ldr	r3, [r7, #4]
 80029b8:	681b      	ldr	r3, [r3, #0]
 80029ba:	f042 0201 	orr.w	r2, r2, #1
 80029be:	601a      	str	r2, [r3, #0]
 80029c0:	687b      	ldr	r3, [r7, #4]
 80029c2:	2220      	movs	r2, #32
 80029c4:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 80029c8:	687b      	ldr	r3, [r7, #4]
 80029ca:	2200      	movs	r2, #0
 80029cc:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 80029d0:	2300      	movs	r3, #0
 80029d2:	e000      	b.n	80029d6 <HAL_I2CEx_ConfigAnalogFilter+0x8a>
 80029d4:	2302      	movs	r3, #2
 80029d6:	4618      	mov	r0, r3
 80029d8:	370c      	adds	r7, #12
 80029da:	46bd      	mov	sp, r7
 80029dc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80029e0:	4770      	bx	lr

080029e2 <HAL_I2CEx_ConfigDigitalFilter>:
 80029e2:	b480      	push	{r7}
 80029e4:	b085      	sub	sp, #20
 80029e6:	af00      	add	r7, sp, #0
 80029e8:	6078      	str	r0, [r7, #4]
 80029ea:	6039      	str	r1, [r7, #0]
 80029ec:	687b      	ldr	r3, [r7, #4]
 80029ee:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 80029f2:	b2db      	uxtb	r3, r3
 80029f4:	2b20      	cmp	r3, #32
 80029f6:	d139      	bne.n	8002a6c <HAL_I2CEx_ConfigDigitalFilter+0x8a>
 80029f8:	687b      	ldr	r3, [r7, #4]
 80029fa:	f893 3040 	ldrb.w	r3, [r3, #64]	; 0x40
 80029fe:	2b01      	cmp	r3, #1
 8002a00:	d101      	bne.n	8002a06 <HAL_I2CEx_ConfigDigitalFilter+0x24>
 8002a02:	2302      	movs	r3, #2
 8002a04:	e033      	b.n	8002a6e <HAL_I2CEx_ConfigDigitalFilter+0x8c>
 8002a06:	687b      	ldr	r3, [r7, #4]
 8002a08:	2201      	movs	r2, #1
 8002a0a:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8002a0e:	687b      	ldr	r3, [r7, #4]
 8002a10:	2224      	movs	r2, #36	; 0x24
 8002a12:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8002a16:	687b      	ldr	r3, [r7, #4]
 8002a18:	681b      	ldr	r3, [r3, #0]
 8002a1a:	681a      	ldr	r2, [r3, #0]
 8002a1c:	687b      	ldr	r3, [r7, #4]
 8002a1e:	681b      	ldr	r3, [r3, #0]
 8002a20:	f022 0201 	bic.w	r2, r2, #1
 8002a24:	601a      	str	r2, [r3, #0]
 8002a26:	687b      	ldr	r3, [r7, #4]
 8002a28:	681b      	ldr	r3, [r3, #0]
 8002a2a:	681b      	ldr	r3, [r3, #0]
 8002a2c:	60fb      	str	r3, [r7, #12]
 8002a2e:	68fb      	ldr	r3, [r7, #12]
 8002a30:	f423 6370 	bic.w	r3, r3, #3840	; 0xf00
 8002a34:	60fb      	str	r3, [r7, #12]
 8002a36:	683b      	ldr	r3, [r7, #0]
 8002a38:	021b      	lsls	r3, r3, #8
 8002a3a:	68fa      	ldr	r2, [r7, #12]
 8002a3c:	4313      	orrs	r3, r2
 8002a3e:	60fb      	str	r3, [r7, #12]
 8002a40:	687b      	ldr	r3, [r7, #4]
 8002a42:	681b      	ldr	r3, [r3, #0]
 8002a44:	68fa      	ldr	r2, [r7, #12]
 8002a46:	601a      	str	r2, [r3, #0]
 8002a48:	687b      	ldr	r3, [r7, #4]
 8002a4a:	681b      	ldr	r3, [r3, #0]
 8002a4c:	681a      	ldr	r2, [r3, #0]
 8002a4e:	687b      	ldr	r3, [r7, #4]
 8002a50:	681b      	ldr	r3, [r3, #0]
 8002a52:	f042 0201 	orr.w	r2, r2, #1
 8002a56:	601a      	str	r2, [r3, #0]
 8002a58:	687b      	ldr	r3, [r7, #4]
 8002a5a:	2220      	movs	r2, #32
 8002a5c:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8002a60:	687b      	ldr	r3, [r7, #4]
 8002a62:	2200      	movs	r2, #0
 8002a64:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8002a68:	2300      	movs	r3, #0
 8002a6a:	e000      	b.n	8002a6e <HAL_I2CEx_ConfigDigitalFilter+0x8c>
 8002a6c:	2302      	movs	r3, #2
 8002a6e:	4618      	mov	r0, r3
 8002a70:	3714      	adds	r7, #20
 8002a72:	46bd      	mov	sp, r7
 8002a74:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002a78:	4770      	bx	lr
	...

08002a7c <HAL_PWREx_GetVoltageRange>:
 8002a7c:	b480      	push	{r7}
 8002a7e:	af00      	add	r7, sp, #0
 8002a80:	4b04      	ldr	r3, [pc, #16]	; (8002a94 <HAL_PWREx_GetVoltageRange+0x18>)
 8002a82:	681b      	ldr	r3, [r3, #0]
 8002a84:	f403 63c0 	and.w	r3, r3, #1536	; 0x600
 8002a88:	4618      	mov	r0, r3
 8002a8a:	46bd      	mov	sp, r7
 8002a8c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002a90:	4770      	bx	lr
 8002a92:	bf00      	nop
 8002a94:	40007000 	.word	0x40007000

08002a98 <HAL_PWREx_ControlVoltageScaling>:
 8002a98:	b480      	push	{r7}
 8002a9a:	b085      	sub	sp, #20
 8002a9c:	af00      	add	r7, sp, #0
 8002a9e:	6078      	str	r0, [r7, #4]
 8002aa0:	687b      	ldr	r3, [r7, #4]
 8002aa2:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8002aa6:	d130      	bne.n	8002b0a <HAL_PWREx_ControlVoltageScaling+0x72>
 8002aa8:	4b23      	ldr	r3, [pc, #140]	; (8002b38 <HAL_PWREx_ControlVoltageScaling+0xa0>)
 8002aaa:	681b      	ldr	r3, [r3, #0]
 8002aac:	f403 63c0 	and.w	r3, r3, #1536	; 0x600
 8002ab0:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8002ab4:	d038      	beq.n	8002b28 <HAL_PWREx_ControlVoltageScaling+0x90>
 8002ab6:	4b20      	ldr	r3, [pc, #128]	; (8002b38 <HAL_PWREx_ControlVoltageScaling+0xa0>)
 8002ab8:	681b      	ldr	r3, [r3, #0]
 8002aba:	f423 63c0 	bic.w	r3, r3, #1536	; 0x600
 8002abe:	4a1e      	ldr	r2, [pc, #120]	; (8002b38 <HAL_PWREx_ControlVoltageScaling+0xa0>)
 8002ac0:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8002ac4:	6013      	str	r3, [r2, #0]
 8002ac6:	4b1d      	ldr	r3, [pc, #116]	; (8002b3c <HAL_PWREx_ControlVoltageScaling+0xa4>)
 8002ac8:	681b      	ldr	r3, [r3, #0]
 8002aca:	2232      	movs	r2, #50	; 0x32
 8002acc:	fb02 f303 	mul.w	r3, r2, r3
 8002ad0:	4a1b      	ldr	r2, [pc, #108]	; (8002b40 <HAL_PWREx_ControlVoltageScaling+0xa8>)
 8002ad2:	fba2 2303 	umull	r2, r3, r2, r3
 8002ad6:	0c9b      	lsrs	r3, r3, #18
 8002ad8:	3301      	adds	r3, #1
 8002ada:	60fb      	str	r3, [r7, #12]
 8002adc:	e002      	b.n	8002ae4 <HAL_PWREx_ControlVoltageScaling+0x4c>
 8002ade:	68fb      	ldr	r3, [r7, #12]
 8002ae0:	3b01      	subs	r3, #1
 8002ae2:	60fb      	str	r3, [r7, #12]
 8002ae4:	4b14      	ldr	r3, [pc, #80]	; (8002b38 <HAL_PWREx_ControlVoltageScaling+0xa0>)
 8002ae6:	695b      	ldr	r3, [r3, #20]
 8002ae8:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8002aec:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8002af0:	d102      	bne.n	8002af8 <HAL_PWREx_ControlVoltageScaling+0x60>
 8002af2:	68fb      	ldr	r3, [r7, #12]
 8002af4:	2b00      	cmp	r3, #0
 8002af6:	d1f2      	bne.n	8002ade <HAL_PWREx_ControlVoltageScaling+0x46>
 8002af8:	4b0f      	ldr	r3, [pc, #60]	; (8002b38 <HAL_PWREx_ControlVoltageScaling+0xa0>)
 8002afa:	695b      	ldr	r3, [r3, #20]
 8002afc:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8002b00:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8002b04:	d110      	bne.n	8002b28 <HAL_PWREx_ControlVoltageScaling+0x90>
 8002b06:	2303      	movs	r3, #3
 8002b08:	e00f      	b.n	8002b2a <HAL_PWREx_ControlVoltageScaling+0x92>
 8002b0a:	4b0b      	ldr	r3, [pc, #44]	; (8002b38 <HAL_PWREx_ControlVoltageScaling+0xa0>)
 8002b0c:	681b      	ldr	r3, [r3, #0]
 8002b0e:	f403 63c0 	and.w	r3, r3, #1536	; 0x600
 8002b12:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8002b16:	d007      	beq.n	8002b28 <HAL_PWREx_ControlVoltageScaling+0x90>
 8002b18:	4b07      	ldr	r3, [pc, #28]	; (8002b38 <HAL_PWREx_ControlVoltageScaling+0xa0>)
 8002b1a:	681b      	ldr	r3, [r3, #0]
 8002b1c:	f423 63c0 	bic.w	r3, r3, #1536	; 0x600
 8002b20:	4a05      	ldr	r2, [pc, #20]	; (8002b38 <HAL_PWREx_ControlVoltageScaling+0xa0>)
 8002b22:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 8002b26:	6013      	str	r3, [r2, #0]
 8002b28:	2300      	movs	r3, #0
 8002b2a:	4618      	mov	r0, r3
 8002b2c:	3714      	adds	r7, #20
 8002b2e:	46bd      	mov	sp, r7
 8002b30:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002b34:	4770      	bx	lr
 8002b36:	bf00      	nop
 8002b38:	40007000 	.word	0x40007000
 8002b3c:	20000000 	.word	0x20000000
 8002b40:	431bde83 	.word	0x431bde83

08002b44 <HAL_RCC_OscConfig>:
 8002b44:	b580      	push	{r7, lr}
 8002b46:	b088      	sub	sp, #32
 8002b48:	af00      	add	r7, sp, #0
 8002b4a:	6078      	str	r0, [r7, #4]
 8002b4c:	687b      	ldr	r3, [r7, #4]
 8002b4e:	2b00      	cmp	r3, #0
 8002b50:	d101      	bne.n	8002b56 <HAL_RCC_OscConfig+0x12>
 8002b52:	2301      	movs	r3, #1
 8002b54:	e3ca      	b.n	80032ec <HAL_RCC_OscConfig+0x7a8>
 8002b56:	4b97      	ldr	r3, [pc, #604]	; (8002db4 <HAL_RCC_OscConfig+0x270>)
 8002b58:	689b      	ldr	r3, [r3, #8]
 8002b5a:	f003 030c 	and.w	r3, r3, #12
 8002b5e:	61bb      	str	r3, [r7, #24]
 8002b60:	4b94      	ldr	r3, [pc, #592]	; (8002db4 <HAL_RCC_OscConfig+0x270>)
 8002b62:	68db      	ldr	r3, [r3, #12]
 8002b64:	f003 0303 	and.w	r3, r3, #3
 8002b68:	617b      	str	r3, [r7, #20]
 8002b6a:	687b      	ldr	r3, [r7, #4]
 8002b6c:	681b      	ldr	r3, [r3, #0]
 8002b6e:	f003 0310 	and.w	r3, r3, #16
 8002b72:	2b00      	cmp	r3, #0
 8002b74:	f000 80e4 	beq.w	8002d40 <HAL_RCC_OscConfig+0x1fc>
 8002b78:	69bb      	ldr	r3, [r7, #24]
 8002b7a:	2b00      	cmp	r3, #0
 8002b7c:	d007      	beq.n	8002b8e <HAL_RCC_OscConfig+0x4a>
 8002b7e:	69bb      	ldr	r3, [r7, #24]
 8002b80:	2b0c      	cmp	r3, #12
 8002b82:	f040 808b 	bne.w	8002c9c <HAL_RCC_OscConfig+0x158>
 8002b86:	697b      	ldr	r3, [r7, #20]
 8002b88:	2b01      	cmp	r3, #1
 8002b8a:	f040 8087 	bne.w	8002c9c <HAL_RCC_OscConfig+0x158>
 8002b8e:	4b89      	ldr	r3, [pc, #548]	; (8002db4 <HAL_RCC_OscConfig+0x270>)
 8002b90:	681b      	ldr	r3, [r3, #0]
 8002b92:	f003 0302 	and.w	r3, r3, #2
 8002b96:	2b00      	cmp	r3, #0
 8002b98:	d005      	beq.n	8002ba6 <HAL_RCC_OscConfig+0x62>
 8002b9a:	687b      	ldr	r3, [r7, #4]
 8002b9c:	699b      	ldr	r3, [r3, #24]
 8002b9e:	2b00      	cmp	r3, #0
 8002ba0:	d101      	bne.n	8002ba6 <HAL_RCC_OscConfig+0x62>
 8002ba2:	2301      	movs	r3, #1
 8002ba4:	e3a2      	b.n	80032ec <HAL_RCC_OscConfig+0x7a8>
 8002ba6:	687b      	ldr	r3, [r7, #4]
 8002ba8:	6a1a      	ldr	r2, [r3, #32]
 8002baa:	4b82      	ldr	r3, [pc, #520]	; (8002db4 <HAL_RCC_OscConfig+0x270>)
 8002bac:	681b      	ldr	r3, [r3, #0]
 8002bae:	f003 0308 	and.w	r3, r3, #8
 8002bb2:	2b00      	cmp	r3, #0
 8002bb4:	d004      	beq.n	8002bc0 <HAL_RCC_OscConfig+0x7c>
 8002bb6:	4b7f      	ldr	r3, [pc, #508]	; (8002db4 <HAL_RCC_OscConfig+0x270>)
 8002bb8:	681b      	ldr	r3, [r3, #0]
 8002bba:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
 8002bbe:	e005      	b.n	8002bcc <HAL_RCC_OscConfig+0x88>
 8002bc0:	4b7c      	ldr	r3, [pc, #496]	; (8002db4 <HAL_RCC_OscConfig+0x270>)
 8002bc2:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 8002bc6:	091b      	lsrs	r3, r3, #4
 8002bc8:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
 8002bcc:	4293      	cmp	r3, r2
 8002bce:	d223      	bcs.n	8002c18 <HAL_RCC_OscConfig+0xd4>
 8002bd0:	687b      	ldr	r3, [r7, #4]
 8002bd2:	6a1b      	ldr	r3, [r3, #32]
 8002bd4:	4618      	mov	r0, r3
 8002bd6:	f000 fd55 	bl	8003684 <RCC_SetFlashLatencyFromMSIRange>
 8002bda:	4603      	mov	r3, r0
 8002bdc:	2b00      	cmp	r3, #0
 8002bde:	d001      	beq.n	8002be4 <HAL_RCC_OscConfig+0xa0>
 8002be0:	2301      	movs	r3, #1
 8002be2:	e383      	b.n	80032ec <HAL_RCC_OscConfig+0x7a8>
 8002be4:	4b73      	ldr	r3, [pc, #460]	; (8002db4 <HAL_RCC_OscConfig+0x270>)
 8002be6:	681b      	ldr	r3, [r3, #0]
 8002be8:	4a72      	ldr	r2, [pc, #456]	; (8002db4 <HAL_RCC_OscConfig+0x270>)
 8002bea:	f043 0308 	orr.w	r3, r3, #8
 8002bee:	6013      	str	r3, [r2, #0]
 8002bf0:	4b70      	ldr	r3, [pc, #448]	; (8002db4 <HAL_RCC_OscConfig+0x270>)
 8002bf2:	681b      	ldr	r3, [r3, #0]
 8002bf4:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 8002bf8:	687b      	ldr	r3, [r7, #4]
 8002bfa:	6a1b      	ldr	r3, [r3, #32]
 8002bfc:	496d      	ldr	r1, [pc, #436]	; (8002db4 <HAL_RCC_OscConfig+0x270>)
 8002bfe:	4313      	orrs	r3, r2
 8002c00:	600b      	str	r3, [r1, #0]
 8002c02:	4b6c      	ldr	r3, [pc, #432]	; (8002db4 <HAL_RCC_OscConfig+0x270>)
 8002c04:	685b      	ldr	r3, [r3, #4]
 8002c06:	f423 427f 	bic.w	r2, r3, #65280	; 0xff00
 8002c0a:	687b      	ldr	r3, [r7, #4]
 8002c0c:	69db      	ldr	r3, [r3, #28]
 8002c0e:	021b      	lsls	r3, r3, #8
 8002c10:	4968      	ldr	r1, [pc, #416]	; (8002db4 <HAL_RCC_OscConfig+0x270>)
 8002c12:	4313      	orrs	r3, r2
 8002c14:	604b      	str	r3, [r1, #4]
 8002c16:	e025      	b.n	8002c64 <HAL_RCC_OscConfig+0x120>
 8002c18:	4b66      	ldr	r3, [pc, #408]	; (8002db4 <HAL_RCC_OscConfig+0x270>)
 8002c1a:	681b      	ldr	r3, [r3, #0]
 8002c1c:	4a65      	ldr	r2, [pc, #404]	; (8002db4 <HAL_RCC_OscConfig+0x270>)
 8002c1e:	f043 0308 	orr.w	r3, r3, #8
 8002c22:	6013      	str	r3, [r2, #0]
 8002c24:	4b63      	ldr	r3, [pc, #396]	; (8002db4 <HAL_RCC_OscConfig+0x270>)
 8002c26:	681b      	ldr	r3, [r3, #0]
 8002c28:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 8002c2c:	687b      	ldr	r3, [r7, #4]
 8002c2e:	6a1b      	ldr	r3, [r3, #32]
 8002c30:	4960      	ldr	r1, [pc, #384]	; (8002db4 <HAL_RCC_OscConfig+0x270>)
 8002c32:	4313      	orrs	r3, r2
 8002c34:	600b      	str	r3, [r1, #0]
 8002c36:	4b5f      	ldr	r3, [pc, #380]	; (8002db4 <HAL_RCC_OscConfig+0x270>)
 8002c38:	685b      	ldr	r3, [r3, #4]
 8002c3a:	f423 427f 	bic.w	r2, r3, #65280	; 0xff00
 8002c3e:	687b      	ldr	r3, [r7, #4]
 8002c40:	69db      	ldr	r3, [r3, #28]
 8002c42:	021b      	lsls	r3, r3, #8
 8002c44:	495b      	ldr	r1, [pc, #364]	; (8002db4 <HAL_RCC_OscConfig+0x270>)
 8002c46:	4313      	orrs	r3, r2
 8002c48:	604b      	str	r3, [r1, #4]
 8002c4a:	69bb      	ldr	r3, [r7, #24]
 8002c4c:	2b00      	cmp	r3, #0
 8002c4e:	d109      	bne.n	8002c64 <HAL_RCC_OscConfig+0x120>
 8002c50:	687b      	ldr	r3, [r7, #4]
 8002c52:	6a1b      	ldr	r3, [r3, #32]
 8002c54:	4618      	mov	r0, r3
 8002c56:	f000 fd15 	bl	8003684 <RCC_SetFlashLatencyFromMSIRange>
 8002c5a:	4603      	mov	r3, r0
 8002c5c:	2b00      	cmp	r3, #0
 8002c5e:	d001      	beq.n	8002c64 <HAL_RCC_OscConfig+0x120>
 8002c60:	2301      	movs	r3, #1
 8002c62:	e343      	b.n	80032ec <HAL_RCC_OscConfig+0x7a8>
 8002c64:	f000 fc4a 	bl	80034fc <HAL_RCC_GetSysClockFreq>
 8002c68:	4602      	mov	r2, r0
 8002c6a:	4b52      	ldr	r3, [pc, #328]	; (8002db4 <HAL_RCC_OscConfig+0x270>)
 8002c6c:	689b      	ldr	r3, [r3, #8]
 8002c6e:	091b      	lsrs	r3, r3, #4
 8002c70:	f003 030f 	and.w	r3, r3, #15
 8002c74:	4950      	ldr	r1, [pc, #320]	; (8002db8 <HAL_RCC_OscConfig+0x274>)
 8002c76:	5ccb      	ldrb	r3, [r1, r3]
 8002c78:	f003 031f 	and.w	r3, r3, #31
 8002c7c:	fa22 f303 	lsr.w	r3, r2, r3
 8002c80:	4a4e      	ldr	r2, [pc, #312]	; (8002dbc <HAL_RCC_OscConfig+0x278>)
 8002c82:	6013      	str	r3, [r2, #0]
 8002c84:	4b4e      	ldr	r3, [pc, #312]	; (8002dc0 <HAL_RCC_OscConfig+0x27c>)
 8002c86:	681b      	ldr	r3, [r3, #0]
 8002c88:	4618      	mov	r0, r3
 8002c8a:	f7fe fcfd 	bl	8001688 <HAL_InitTick>
 8002c8e:	4603      	mov	r3, r0
 8002c90:	73fb      	strb	r3, [r7, #15]
 8002c92:	7bfb      	ldrb	r3, [r7, #15]
 8002c94:	2b00      	cmp	r3, #0
 8002c96:	d052      	beq.n	8002d3e <HAL_RCC_OscConfig+0x1fa>
 8002c98:	7bfb      	ldrb	r3, [r7, #15]
 8002c9a:	e327      	b.n	80032ec <HAL_RCC_OscConfig+0x7a8>
 8002c9c:	687b      	ldr	r3, [r7, #4]
 8002c9e:	699b      	ldr	r3, [r3, #24]
 8002ca0:	2b00      	cmp	r3, #0
 8002ca2:	d032      	beq.n	8002d0a <HAL_RCC_OscConfig+0x1c6>
 8002ca4:	4b43      	ldr	r3, [pc, #268]	; (8002db4 <HAL_RCC_OscConfig+0x270>)
 8002ca6:	681b      	ldr	r3, [r3, #0]
 8002ca8:	4a42      	ldr	r2, [pc, #264]	; (8002db4 <HAL_RCC_OscConfig+0x270>)
 8002caa:	f043 0301 	orr.w	r3, r3, #1
 8002cae:	6013      	str	r3, [r2, #0]
 8002cb0:	f7fe fd3a 	bl	8001728 <HAL_GetTick>
 8002cb4:	6138      	str	r0, [r7, #16]
 8002cb6:	e008      	b.n	8002cca <HAL_RCC_OscConfig+0x186>
 8002cb8:	f7fe fd36 	bl	8001728 <HAL_GetTick>
 8002cbc:	4602      	mov	r2, r0
 8002cbe:	693b      	ldr	r3, [r7, #16]
 8002cc0:	1ad3      	subs	r3, r2, r3
 8002cc2:	2b02      	cmp	r3, #2
 8002cc4:	d901      	bls.n	8002cca <HAL_RCC_OscConfig+0x186>
 8002cc6:	2303      	movs	r3, #3
 8002cc8:	e310      	b.n	80032ec <HAL_RCC_OscConfig+0x7a8>
 8002cca:	4b3a      	ldr	r3, [pc, #232]	; (8002db4 <HAL_RCC_OscConfig+0x270>)
 8002ccc:	681b      	ldr	r3, [r3, #0]
 8002cce:	f003 0302 	and.w	r3, r3, #2
 8002cd2:	2b00      	cmp	r3, #0
 8002cd4:	d0f0      	beq.n	8002cb8 <HAL_RCC_OscConfig+0x174>
 8002cd6:	4b37      	ldr	r3, [pc, #220]	; (8002db4 <HAL_RCC_OscConfig+0x270>)
 8002cd8:	681b      	ldr	r3, [r3, #0]
 8002cda:	4a36      	ldr	r2, [pc, #216]	; (8002db4 <HAL_RCC_OscConfig+0x270>)
 8002cdc:	f043 0308 	orr.w	r3, r3, #8
 8002ce0:	6013      	str	r3, [r2, #0]
 8002ce2:	4b34      	ldr	r3, [pc, #208]	; (8002db4 <HAL_RCC_OscConfig+0x270>)
 8002ce4:	681b      	ldr	r3, [r3, #0]
 8002ce6:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 8002cea:	687b      	ldr	r3, [r7, #4]
 8002cec:	6a1b      	ldr	r3, [r3, #32]
 8002cee:	4931      	ldr	r1, [pc, #196]	; (8002db4 <HAL_RCC_OscConfig+0x270>)
 8002cf0:	4313      	orrs	r3, r2
 8002cf2:	600b      	str	r3, [r1, #0]
 8002cf4:	4b2f      	ldr	r3, [pc, #188]	; (8002db4 <HAL_RCC_OscConfig+0x270>)
 8002cf6:	685b      	ldr	r3, [r3, #4]
 8002cf8:	f423 427f 	bic.w	r2, r3, #65280	; 0xff00
 8002cfc:	687b      	ldr	r3, [r7, #4]
 8002cfe:	69db      	ldr	r3, [r3, #28]
 8002d00:	021b      	lsls	r3, r3, #8
 8002d02:	492c      	ldr	r1, [pc, #176]	; (8002db4 <HAL_RCC_OscConfig+0x270>)
 8002d04:	4313      	orrs	r3, r2
 8002d06:	604b      	str	r3, [r1, #4]
 8002d08:	e01a      	b.n	8002d40 <HAL_RCC_OscConfig+0x1fc>
 8002d0a:	4b2a      	ldr	r3, [pc, #168]	; (8002db4 <HAL_RCC_OscConfig+0x270>)
 8002d0c:	681b      	ldr	r3, [r3, #0]
 8002d0e:	4a29      	ldr	r2, [pc, #164]	; (8002db4 <HAL_RCC_OscConfig+0x270>)
 8002d10:	f023 0301 	bic.w	r3, r3, #1
 8002d14:	6013      	str	r3, [r2, #0]
 8002d16:	f7fe fd07 	bl	8001728 <HAL_GetTick>
 8002d1a:	6138      	str	r0, [r7, #16]
 8002d1c:	e008      	b.n	8002d30 <HAL_RCC_OscConfig+0x1ec>
 8002d1e:	f7fe fd03 	bl	8001728 <HAL_GetTick>
 8002d22:	4602      	mov	r2, r0
 8002d24:	693b      	ldr	r3, [r7, #16]
 8002d26:	1ad3      	subs	r3, r2, r3
 8002d28:	2b02      	cmp	r3, #2
 8002d2a:	d901      	bls.n	8002d30 <HAL_RCC_OscConfig+0x1ec>
 8002d2c:	2303      	movs	r3, #3
 8002d2e:	e2dd      	b.n	80032ec <HAL_RCC_OscConfig+0x7a8>
 8002d30:	4b20      	ldr	r3, [pc, #128]	; (8002db4 <HAL_RCC_OscConfig+0x270>)
 8002d32:	681b      	ldr	r3, [r3, #0]
 8002d34:	f003 0302 	and.w	r3, r3, #2
 8002d38:	2b00      	cmp	r3, #0
 8002d3a:	d1f0      	bne.n	8002d1e <HAL_RCC_OscConfig+0x1da>
 8002d3c:	e000      	b.n	8002d40 <HAL_RCC_OscConfig+0x1fc>
 8002d3e:	bf00      	nop
 8002d40:	687b      	ldr	r3, [r7, #4]
 8002d42:	681b      	ldr	r3, [r3, #0]
 8002d44:	f003 0301 	and.w	r3, r3, #1
 8002d48:	2b00      	cmp	r3, #0
 8002d4a:	d074      	beq.n	8002e36 <HAL_RCC_OscConfig+0x2f2>
 8002d4c:	69bb      	ldr	r3, [r7, #24]
 8002d4e:	2b08      	cmp	r3, #8
 8002d50:	d005      	beq.n	8002d5e <HAL_RCC_OscConfig+0x21a>
 8002d52:	69bb      	ldr	r3, [r7, #24]
 8002d54:	2b0c      	cmp	r3, #12
 8002d56:	d10e      	bne.n	8002d76 <HAL_RCC_OscConfig+0x232>
 8002d58:	697b      	ldr	r3, [r7, #20]
 8002d5a:	2b03      	cmp	r3, #3
 8002d5c:	d10b      	bne.n	8002d76 <HAL_RCC_OscConfig+0x232>
 8002d5e:	4b15      	ldr	r3, [pc, #84]	; (8002db4 <HAL_RCC_OscConfig+0x270>)
 8002d60:	681b      	ldr	r3, [r3, #0]
 8002d62:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8002d66:	2b00      	cmp	r3, #0
 8002d68:	d064      	beq.n	8002e34 <HAL_RCC_OscConfig+0x2f0>
 8002d6a:	687b      	ldr	r3, [r7, #4]
 8002d6c:	685b      	ldr	r3, [r3, #4]
 8002d6e:	2b00      	cmp	r3, #0
 8002d70:	d160      	bne.n	8002e34 <HAL_RCC_OscConfig+0x2f0>
 8002d72:	2301      	movs	r3, #1
 8002d74:	e2ba      	b.n	80032ec <HAL_RCC_OscConfig+0x7a8>
 8002d76:	687b      	ldr	r3, [r7, #4]
 8002d78:	685b      	ldr	r3, [r3, #4]
 8002d7a:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8002d7e:	d106      	bne.n	8002d8e <HAL_RCC_OscConfig+0x24a>
 8002d80:	4b0c      	ldr	r3, [pc, #48]	; (8002db4 <HAL_RCC_OscConfig+0x270>)
 8002d82:	681b      	ldr	r3, [r3, #0]
 8002d84:	4a0b      	ldr	r2, [pc, #44]	; (8002db4 <HAL_RCC_OscConfig+0x270>)
 8002d86:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8002d8a:	6013      	str	r3, [r2, #0]
 8002d8c:	e026      	b.n	8002ddc <HAL_RCC_OscConfig+0x298>
 8002d8e:	687b      	ldr	r3, [r7, #4]
 8002d90:	685b      	ldr	r3, [r3, #4]
 8002d92:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 8002d96:	d115      	bne.n	8002dc4 <HAL_RCC_OscConfig+0x280>
 8002d98:	4b06      	ldr	r3, [pc, #24]	; (8002db4 <HAL_RCC_OscConfig+0x270>)
 8002d9a:	681b      	ldr	r3, [r3, #0]
 8002d9c:	4a05      	ldr	r2, [pc, #20]	; (8002db4 <HAL_RCC_OscConfig+0x270>)
 8002d9e:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 8002da2:	6013      	str	r3, [r2, #0]
 8002da4:	4b03      	ldr	r3, [pc, #12]	; (8002db4 <HAL_RCC_OscConfig+0x270>)
 8002da6:	681b      	ldr	r3, [r3, #0]
 8002da8:	4a02      	ldr	r2, [pc, #8]	; (8002db4 <HAL_RCC_OscConfig+0x270>)
 8002daa:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8002dae:	6013      	str	r3, [r2, #0]
 8002db0:	e014      	b.n	8002ddc <HAL_RCC_OscConfig+0x298>
 8002db2:	bf00      	nop
 8002db4:	40021000 	.word	0x40021000
 8002db8:	08005ed0 	.word	0x08005ed0
 8002dbc:	20000000 	.word	0x20000000
 8002dc0:	20000004 	.word	0x20000004
 8002dc4:	4ba0      	ldr	r3, [pc, #640]	; (8003048 <HAL_RCC_OscConfig+0x504>)
 8002dc6:	681b      	ldr	r3, [r3, #0]
 8002dc8:	4a9f      	ldr	r2, [pc, #636]	; (8003048 <HAL_RCC_OscConfig+0x504>)
 8002dca:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8002dce:	6013      	str	r3, [r2, #0]
 8002dd0:	4b9d      	ldr	r3, [pc, #628]	; (8003048 <HAL_RCC_OscConfig+0x504>)
 8002dd2:	681b      	ldr	r3, [r3, #0]
 8002dd4:	4a9c      	ldr	r2, [pc, #624]	; (8003048 <HAL_RCC_OscConfig+0x504>)
 8002dd6:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8002dda:	6013      	str	r3, [r2, #0]
 8002ddc:	687b      	ldr	r3, [r7, #4]
 8002dde:	685b      	ldr	r3, [r3, #4]
 8002de0:	2b00      	cmp	r3, #0
 8002de2:	d013      	beq.n	8002e0c <HAL_RCC_OscConfig+0x2c8>
 8002de4:	f7fe fca0 	bl	8001728 <HAL_GetTick>
 8002de8:	6138      	str	r0, [r7, #16]
 8002dea:	e008      	b.n	8002dfe <HAL_RCC_OscConfig+0x2ba>
 8002dec:	f7fe fc9c 	bl	8001728 <HAL_GetTick>
 8002df0:	4602      	mov	r2, r0
 8002df2:	693b      	ldr	r3, [r7, #16]
 8002df4:	1ad3      	subs	r3, r2, r3
 8002df6:	2b64      	cmp	r3, #100	; 0x64
 8002df8:	d901      	bls.n	8002dfe <HAL_RCC_OscConfig+0x2ba>
 8002dfa:	2303      	movs	r3, #3
 8002dfc:	e276      	b.n	80032ec <HAL_RCC_OscConfig+0x7a8>
 8002dfe:	4b92      	ldr	r3, [pc, #584]	; (8003048 <HAL_RCC_OscConfig+0x504>)
 8002e00:	681b      	ldr	r3, [r3, #0]
 8002e02:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8002e06:	2b00      	cmp	r3, #0
 8002e08:	d0f0      	beq.n	8002dec <HAL_RCC_OscConfig+0x2a8>
 8002e0a:	e014      	b.n	8002e36 <HAL_RCC_OscConfig+0x2f2>
 8002e0c:	f7fe fc8c 	bl	8001728 <HAL_GetTick>
 8002e10:	6138      	str	r0, [r7, #16]
 8002e12:	e008      	b.n	8002e26 <HAL_RCC_OscConfig+0x2e2>
 8002e14:	f7fe fc88 	bl	8001728 <HAL_GetTick>
 8002e18:	4602      	mov	r2, r0
 8002e1a:	693b      	ldr	r3, [r7, #16]
 8002e1c:	1ad3      	subs	r3, r2, r3
 8002e1e:	2b64      	cmp	r3, #100	; 0x64
 8002e20:	d901      	bls.n	8002e26 <HAL_RCC_OscConfig+0x2e2>
 8002e22:	2303      	movs	r3, #3
 8002e24:	e262      	b.n	80032ec <HAL_RCC_OscConfig+0x7a8>
 8002e26:	4b88      	ldr	r3, [pc, #544]	; (8003048 <HAL_RCC_OscConfig+0x504>)
 8002e28:	681b      	ldr	r3, [r3, #0]
 8002e2a:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8002e2e:	2b00      	cmp	r3, #0
 8002e30:	d1f0      	bne.n	8002e14 <HAL_RCC_OscConfig+0x2d0>
 8002e32:	e000      	b.n	8002e36 <HAL_RCC_OscConfig+0x2f2>
 8002e34:	bf00      	nop
 8002e36:	687b      	ldr	r3, [r7, #4]
 8002e38:	681b      	ldr	r3, [r3, #0]
 8002e3a:	f003 0302 	and.w	r3, r3, #2
 8002e3e:	2b00      	cmp	r3, #0
 8002e40:	d060      	beq.n	8002f04 <HAL_RCC_OscConfig+0x3c0>
 8002e42:	69bb      	ldr	r3, [r7, #24]
 8002e44:	2b04      	cmp	r3, #4
 8002e46:	d005      	beq.n	8002e54 <HAL_RCC_OscConfig+0x310>
 8002e48:	69bb      	ldr	r3, [r7, #24]
 8002e4a:	2b0c      	cmp	r3, #12
 8002e4c:	d119      	bne.n	8002e82 <HAL_RCC_OscConfig+0x33e>
 8002e4e:	697b      	ldr	r3, [r7, #20]
 8002e50:	2b02      	cmp	r3, #2
 8002e52:	d116      	bne.n	8002e82 <HAL_RCC_OscConfig+0x33e>
 8002e54:	4b7c      	ldr	r3, [pc, #496]	; (8003048 <HAL_RCC_OscConfig+0x504>)
 8002e56:	681b      	ldr	r3, [r3, #0]
 8002e58:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8002e5c:	2b00      	cmp	r3, #0
 8002e5e:	d005      	beq.n	8002e6c <HAL_RCC_OscConfig+0x328>
 8002e60:	687b      	ldr	r3, [r7, #4]
 8002e62:	68db      	ldr	r3, [r3, #12]
 8002e64:	2b00      	cmp	r3, #0
 8002e66:	d101      	bne.n	8002e6c <HAL_RCC_OscConfig+0x328>
 8002e68:	2301      	movs	r3, #1
 8002e6a:	e23f      	b.n	80032ec <HAL_RCC_OscConfig+0x7a8>
 8002e6c:	4b76      	ldr	r3, [pc, #472]	; (8003048 <HAL_RCC_OscConfig+0x504>)
 8002e6e:	685b      	ldr	r3, [r3, #4]
 8002e70:	f023 52f8 	bic.w	r2, r3, #520093696	; 0x1f000000
 8002e74:	687b      	ldr	r3, [r7, #4]
 8002e76:	691b      	ldr	r3, [r3, #16]
 8002e78:	061b      	lsls	r3, r3, #24
 8002e7a:	4973      	ldr	r1, [pc, #460]	; (8003048 <HAL_RCC_OscConfig+0x504>)
 8002e7c:	4313      	orrs	r3, r2
 8002e7e:	604b      	str	r3, [r1, #4]
 8002e80:	e040      	b.n	8002f04 <HAL_RCC_OscConfig+0x3c0>
 8002e82:	687b      	ldr	r3, [r7, #4]
 8002e84:	68db      	ldr	r3, [r3, #12]
 8002e86:	2b00      	cmp	r3, #0
 8002e88:	d023      	beq.n	8002ed2 <HAL_RCC_OscConfig+0x38e>
 8002e8a:	4b6f      	ldr	r3, [pc, #444]	; (8003048 <HAL_RCC_OscConfig+0x504>)
 8002e8c:	681b      	ldr	r3, [r3, #0]
 8002e8e:	4a6e      	ldr	r2, [pc, #440]	; (8003048 <HAL_RCC_OscConfig+0x504>)
 8002e90:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8002e94:	6013      	str	r3, [r2, #0]
 8002e96:	f7fe fc47 	bl	8001728 <HAL_GetTick>
 8002e9a:	6138      	str	r0, [r7, #16]
 8002e9c:	e008      	b.n	8002eb0 <HAL_RCC_OscConfig+0x36c>
 8002e9e:	f7fe fc43 	bl	8001728 <HAL_GetTick>
 8002ea2:	4602      	mov	r2, r0
 8002ea4:	693b      	ldr	r3, [r7, #16]
 8002ea6:	1ad3      	subs	r3, r2, r3
 8002ea8:	2b02      	cmp	r3, #2
 8002eaa:	d901      	bls.n	8002eb0 <HAL_RCC_OscConfig+0x36c>
 8002eac:	2303      	movs	r3, #3
 8002eae:	e21d      	b.n	80032ec <HAL_RCC_OscConfig+0x7a8>
 8002eb0:	4b65      	ldr	r3, [pc, #404]	; (8003048 <HAL_RCC_OscConfig+0x504>)
 8002eb2:	681b      	ldr	r3, [r3, #0]
 8002eb4:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8002eb8:	2b00      	cmp	r3, #0
 8002eba:	d0f0      	beq.n	8002e9e <HAL_RCC_OscConfig+0x35a>
 8002ebc:	4b62      	ldr	r3, [pc, #392]	; (8003048 <HAL_RCC_OscConfig+0x504>)
 8002ebe:	685b      	ldr	r3, [r3, #4]
 8002ec0:	f023 52f8 	bic.w	r2, r3, #520093696	; 0x1f000000
 8002ec4:	687b      	ldr	r3, [r7, #4]
 8002ec6:	691b      	ldr	r3, [r3, #16]
 8002ec8:	061b      	lsls	r3, r3, #24
 8002eca:	495f      	ldr	r1, [pc, #380]	; (8003048 <HAL_RCC_OscConfig+0x504>)
 8002ecc:	4313      	orrs	r3, r2
 8002ece:	604b      	str	r3, [r1, #4]
 8002ed0:	e018      	b.n	8002f04 <HAL_RCC_OscConfig+0x3c0>
 8002ed2:	4b5d      	ldr	r3, [pc, #372]	; (8003048 <HAL_RCC_OscConfig+0x504>)
 8002ed4:	681b      	ldr	r3, [r3, #0]
 8002ed6:	4a5c      	ldr	r2, [pc, #368]	; (8003048 <HAL_RCC_OscConfig+0x504>)
 8002ed8:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8002edc:	6013      	str	r3, [r2, #0]
 8002ede:	f7fe fc23 	bl	8001728 <HAL_GetTick>
 8002ee2:	6138      	str	r0, [r7, #16]
 8002ee4:	e008      	b.n	8002ef8 <HAL_RCC_OscConfig+0x3b4>
 8002ee6:	f7fe fc1f 	bl	8001728 <HAL_GetTick>
 8002eea:	4602      	mov	r2, r0
 8002eec:	693b      	ldr	r3, [r7, #16]
 8002eee:	1ad3      	subs	r3, r2, r3
 8002ef0:	2b02      	cmp	r3, #2
 8002ef2:	d901      	bls.n	8002ef8 <HAL_RCC_OscConfig+0x3b4>
 8002ef4:	2303      	movs	r3, #3
 8002ef6:	e1f9      	b.n	80032ec <HAL_RCC_OscConfig+0x7a8>
 8002ef8:	4b53      	ldr	r3, [pc, #332]	; (8003048 <HAL_RCC_OscConfig+0x504>)
 8002efa:	681b      	ldr	r3, [r3, #0]
 8002efc:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8002f00:	2b00      	cmp	r3, #0
 8002f02:	d1f0      	bne.n	8002ee6 <HAL_RCC_OscConfig+0x3a2>
 8002f04:	687b      	ldr	r3, [r7, #4]
 8002f06:	681b      	ldr	r3, [r3, #0]
 8002f08:	f003 0308 	and.w	r3, r3, #8
 8002f0c:	2b00      	cmp	r3, #0
 8002f0e:	d03c      	beq.n	8002f8a <HAL_RCC_OscConfig+0x446>
 8002f10:	687b      	ldr	r3, [r7, #4]
 8002f12:	695b      	ldr	r3, [r3, #20]
 8002f14:	2b00      	cmp	r3, #0
 8002f16:	d01c      	beq.n	8002f52 <HAL_RCC_OscConfig+0x40e>
 8002f18:	4b4b      	ldr	r3, [pc, #300]	; (8003048 <HAL_RCC_OscConfig+0x504>)
 8002f1a:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 8002f1e:	4a4a      	ldr	r2, [pc, #296]	; (8003048 <HAL_RCC_OscConfig+0x504>)
 8002f20:	f043 0301 	orr.w	r3, r3, #1
 8002f24:	f8c2 3094 	str.w	r3, [r2, #148]	; 0x94
 8002f28:	f7fe fbfe 	bl	8001728 <HAL_GetTick>
 8002f2c:	6138      	str	r0, [r7, #16]
 8002f2e:	e008      	b.n	8002f42 <HAL_RCC_OscConfig+0x3fe>
 8002f30:	f7fe fbfa 	bl	8001728 <HAL_GetTick>
 8002f34:	4602      	mov	r2, r0
 8002f36:	693b      	ldr	r3, [r7, #16]
 8002f38:	1ad3      	subs	r3, r2, r3
 8002f3a:	2b02      	cmp	r3, #2
 8002f3c:	d901      	bls.n	8002f42 <HAL_RCC_OscConfig+0x3fe>
 8002f3e:	2303      	movs	r3, #3
 8002f40:	e1d4      	b.n	80032ec <HAL_RCC_OscConfig+0x7a8>
 8002f42:	4b41      	ldr	r3, [pc, #260]	; (8003048 <HAL_RCC_OscConfig+0x504>)
 8002f44:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 8002f48:	f003 0302 	and.w	r3, r3, #2
 8002f4c:	2b00      	cmp	r3, #0
 8002f4e:	d0ef      	beq.n	8002f30 <HAL_RCC_OscConfig+0x3ec>
 8002f50:	e01b      	b.n	8002f8a <HAL_RCC_OscConfig+0x446>
 8002f52:	4b3d      	ldr	r3, [pc, #244]	; (8003048 <HAL_RCC_OscConfig+0x504>)
 8002f54:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 8002f58:	4a3b      	ldr	r2, [pc, #236]	; (8003048 <HAL_RCC_OscConfig+0x504>)
 8002f5a:	f023 0301 	bic.w	r3, r3, #1
 8002f5e:	f8c2 3094 	str.w	r3, [r2, #148]	; 0x94
 8002f62:	f7fe fbe1 	bl	8001728 <HAL_GetTick>
 8002f66:	6138      	str	r0, [r7, #16]
 8002f68:	e008      	b.n	8002f7c <HAL_RCC_OscConfig+0x438>
 8002f6a:	f7fe fbdd 	bl	8001728 <HAL_GetTick>
 8002f6e:	4602      	mov	r2, r0
 8002f70:	693b      	ldr	r3, [r7, #16]
 8002f72:	1ad3      	subs	r3, r2, r3
 8002f74:	2b02      	cmp	r3, #2
 8002f76:	d901      	bls.n	8002f7c <HAL_RCC_OscConfig+0x438>
 8002f78:	2303      	movs	r3, #3
 8002f7a:	e1b7      	b.n	80032ec <HAL_RCC_OscConfig+0x7a8>
 8002f7c:	4b32      	ldr	r3, [pc, #200]	; (8003048 <HAL_RCC_OscConfig+0x504>)
 8002f7e:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 8002f82:	f003 0302 	and.w	r3, r3, #2
 8002f86:	2b00      	cmp	r3, #0
 8002f88:	d1ef      	bne.n	8002f6a <HAL_RCC_OscConfig+0x426>
 8002f8a:	687b      	ldr	r3, [r7, #4]
 8002f8c:	681b      	ldr	r3, [r3, #0]
 8002f8e:	f003 0304 	and.w	r3, r3, #4
 8002f92:	2b00      	cmp	r3, #0
 8002f94:	f000 80a6 	beq.w	80030e4 <HAL_RCC_OscConfig+0x5a0>
 8002f98:	2300      	movs	r3, #0
 8002f9a:	77fb      	strb	r3, [r7, #31]
 8002f9c:	4b2a      	ldr	r3, [pc, #168]	; (8003048 <HAL_RCC_OscConfig+0x504>)
 8002f9e:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8002fa0:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8002fa4:	2b00      	cmp	r3, #0
 8002fa6:	d10d      	bne.n	8002fc4 <HAL_RCC_OscConfig+0x480>
 8002fa8:	4b27      	ldr	r3, [pc, #156]	; (8003048 <HAL_RCC_OscConfig+0x504>)
 8002faa:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8002fac:	4a26      	ldr	r2, [pc, #152]	; (8003048 <HAL_RCC_OscConfig+0x504>)
 8002fae:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8002fb2:	6593      	str	r3, [r2, #88]	; 0x58
 8002fb4:	4b24      	ldr	r3, [pc, #144]	; (8003048 <HAL_RCC_OscConfig+0x504>)
 8002fb6:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8002fb8:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8002fbc:	60bb      	str	r3, [r7, #8]
 8002fbe:	68bb      	ldr	r3, [r7, #8]
 8002fc0:	2301      	movs	r3, #1
 8002fc2:	77fb      	strb	r3, [r7, #31]
 8002fc4:	4b21      	ldr	r3, [pc, #132]	; (800304c <HAL_RCC_OscConfig+0x508>)
 8002fc6:	681b      	ldr	r3, [r3, #0]
 8002fc8:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8002fcc:	2b00      	cmp	r3, #0
 8002fce:	d118      	bne.n	8003002 <HAL_RCC_OscConfig+0x4be>
 8002fd0:	4b1e      	ldr	r3, [pc, #120]	; (800304c <HAL_RCC_OscConfig+0x508>)
 8002fd2:	681b      	ldr	r3, [r3, #0]
 8002fd4:	4a1d      	ldr	r2, [pc, #116]	; (800304c <HAL_RCC_OscConfig+0x508>)
 8002fd6:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8002fda:	6013      	str	r3, [r2, #0]
 8002fdc:	f7fe fba4 	bl	8001728 <HAL_GetTick>
 8002fe0:	6138      	str	r0, [r7, #16]
 8002fe2:	e008      	b.n	8002ff6 <HAL_RCC_OscConfig+0x4b2>
 8002fe4:	f7fe fba0 	bl	8001728 <HAL_GetTick>
 8002fe8:	4602      	mov	r2, r0
 8002fea:	693b      	ldr	r3, [r7, #16]
 8002fec:	1ad3      	subs	r3, r2, r3
 8002fee:	2b02      	cmp	r3, #2
 8002ff0:	d901      	bls.n	8002ff6 <HAL_RCC_OscConfig+0x4b2>
 8002ff2:	2303      	movs	r3, #3
 8002ff4:	e17a      	b.n	80032ec <HAL_RCC_OscConfig+0x7a8>
 8002ff6:	4b15      	ldr	r3, [pc, #84]	; (800304c <HAL_RCC_OscConfig+0x508>)
 8002ff8:	681b      	ldr	r3, [r3, #0]
 8002ffa:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8002ffe:	2b00      	cmp	r3, #0
 8003000:	d0f0      	beq.n	8002fe4 <HAL_RCC_OscConfig+0x4a0>
 8003002:	687b      	ldr	r3, [r7, #4]
 8003004:	689b      	ldr	r3, [r3, #8]
 8003006:	2b01      	cmp	r3, #1
 8003008:	d108      	bne.n	800301c <HAL_RCC_OscConfig+0x4d8>
 800300a:	4b0f      	ldr	r3, [pc, #60]	; (8003048 <HAL_RCC_OscConfig+0x504>)
 800300c:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8003010:	4a0d      	ldr	r2, [pc, #52]	; (8003048 <HAL_RCC_OscConfig+0x504>)
 8003012:	f043 0301 	orr.w	r3, r3, #1
 8003016:	f8c2 3090 	str.w	r3, [r2, #144]	; 0x90
 800301a:	e029      	b.n	8003070 <HAL_RCC_OscConfig+0x52c>
 800301c:	687b      	ldr	r3, [r7, #4]
 800301e:	689b      	ldr	r3, [r3, #8]
 8003020:	2b05      	cmp	r3, #5
 8003022:	d115      	bne.n	8003050 <HAL_RCC_OscConfig+0x50c>
 8003024:	4b08      	ldr	r3, [pc, #32]	; (8003048 <HAL_RCC_OscConfig+0x504>)
 8003026:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 800302a:	4a07      	ldr	r2, [pc, #28]	; (8003048 <HAL_RCC_OscConfig+0x504>)
 800302c:	f043 0304 	orr.w	r3, r3, #4
 8003030:	f8c2 3090 	str.w	r3, [r2, #144]	; 0x90
 8003034:	4b04      	ldr	r3, [pc, #16]	; (8003048 <HAL_RCC_OscConfig+0x504>)
 8003036:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 800303a:	4a03      	ldr	r2, [pc, #12]	; (8003048 <HAL_RCC_OscConfig+0x504>)
 800303c:	f043 0301 	orr.w	r3, r3, #1
 8003040:	f8c2 3090 	str.w	r3, [r2, #144]	; 0x90
 8003044:	e014      	b.n	8003070 <HAL_RCC_OscConfig+0x52c>
 8003046:	bf00      	nop
 8003048:	40021000 	.word	0x40021000
 800304c:	40007000 	.word	0x40007000
 8003050:	4b9c      	ldr	r3, [pc, #624]	; (80032c4 <HAL_RCC_OscConfig+0x780>)
 8003052:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8003056:	4a9b      	ldr	r2, [pc, #620]	; (80032c4 <HAL_RCC_OscConfig+0x780>)
 8003058:	f023 0301 	bic.w	r3, r3, #1
 800305c:	f8c2 3090 	str.w	r3, [r2, #144]	; 0x90
 8003060:	4b98      	ldr	r3, [pc, #608]	; (80032c4 <HAL_RCC_OscConfig+0x780>)
 8003062:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8003066:	4a97      	ldr	r2, [pc, #604]	; (80032c4 <HAL_RCC_OscConfig+0x780>)
 8003068:	f023 0304 	bic.w	r3, r3, #4
 800306c:	f8c2 3090 	str.w	r3, [r2, #144]	; 0x90
 8003070:	687b      	ldr	r3, [r7, #4]
 8003072:	689b      	ldr	r3, [r3, #8]
 8003074:	2b00      	cmp	r3, #0
 8003076:	d016      	beq.n	80030a6 <HAL_RCC_OscConfig+0x562>
 8003078:	f7fe fb56 	bl	8001728 <HAL_GetTick>
 800307c:	6138      	str	r0, [r7, #16]
 800307e:	e00a      	b.n	8003096 <HAL_RCC_OscConfig+0x552>
 8003080:	f7fe fb52 	bl	8001728 <HAL_GetTick>
 8003084:	4602      	mov	r2, r0
 8003086:	693b      	ldr	r3, [r7, #16]
 8003088:	1ad3      	subs	r3, r2, r3
 800308a:	f241 3288 	movw	r2, #5000	; 0x1388
 800308e:	4293      	cmp	r3, r2
 8003090:	d901      	bls.n	8003096 <HAL_RCC_OscConfig+0x552>
 8003092:	2303      	movs	r3, #3
 8003094:	e12a      	b.n	80032ec <HAL_RCC_OscConfig+0x7a8>
 8003096:	4b8b      	ldr	r3, [pc, #556]	; (80032c4 <HAL_RCC_OscConfig+0x780>)
 8003098:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 800309c:	f003 0302 	and.w	r3, r3, #2
 80030a0:	2b00      	cmp	r3, #0
 80030a2:	d0ed      	beq.n	8003080 <HAL_RCC_OscConfig+0x53c>
 80030a4:	e015      	b.n	80030d2 <HAL_RCC_OscConfig+0x58e>
 80030a6:	f7fe fb3f 	bl	8001728 <HAL_GetTick>
 80030aa:	6138      	str	r0, [r7, #16]
 80030ac:	e00a      	b.n	80030c4 <HAL_RCC_OscConfig+0x580>
 80030ae:	f7fe fb3b 	bl	8001728 <HAL_GetTick>
 80030b2:	4602      	mov	r2, r0
 80030b4:	693b      	ldr	r3, [r7, #16]
 80030b6:	1ad3      	subs	r3, r2, r3
 80030b8:	f241 3288 	movw	r2, #5000	; 0x1388
 80030bc:	4293      	cmp	r3, r2
 80030be:	d901      	bls.n	80030c4 <HAL_RCC_OscConfig+0x580>
 80030c0:	2303      	movs	r3, #3
 80030c2:	e113      	b.n	80032ec <HAL_RCC_OscConfig+0x7a8>
 80030c4:	4b7f      	ldr	r3, [pc, #508]	; (80032c4 <HAL_RCC_OscConfig+0x780>)
 80030c6:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 80030ca:	f003 0302 	and.w	r3, r3, #2
 80030ce:	2b00      	cmp	r3, #0
 80030d0:	d1ed      	bne.n	80030ae <HAL_RCC_OscConfig+0x56a>
 80030d2:	7ffb      	ldrb	r3, [r7, #31]
 80030d4:	2b01      	cmp	r3, #1
 80030d6:	d105      	bne.n	80030e4 <HAL_RCC_OscConfig+0x5a0>
 80030d8:	4b7a      	ldr	r3, [pc, #488]	; (80032c4 <HAL_RCC_OscConfig+0x780>)
 80030da:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 80030dc:	4a79      	ldr	r2, [pc, #484]	; (80032c4 <HAL_RCC_OscConfig+0x780>)
 80030de:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 80030e2:	6593      	str	r3, [r2, #88]	; 0x58
 80030e4:	687b      	ldr	r3, [r7, #4]
 80030e6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80030e8:	2b00      	cmp	r3, #0
 80030ea:	f000 80fe 	beq.w	80032ea <HAL_RCC_OscConfig+0x7a6>
 80030ee:	687b      	ldr	r3, [r7, #4]
 80030f0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80030f2:	2b02      	cmp	r3, #2
 80030f4:	f040 80d0 	bne.w	8003298 <HAL_RCC_OscConfig+0x754>
 80030f8:	4b72      	ldr	r3, [pc, #456]	; (80032c4 <HAL_RCC_OscConfig+0x780>)
 80030fa:	68db      	ldr	r3, [r3, #12]
 80030fc:	617b      	str	r3, [r7, #20]
 80030fe:	697b      	ldr	r3, [r7, #20]
 8003100:	f003 0203 	and.w	r2, r3, #3
 8003104:	687b      	ldr	r3, [r7, #4]
 8003106:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8003108:	429a      	cmp	r2, r3
 800310a:	d130      	bne.n	800316e <HAL_RCC_OscConfig+0x62a>
 800310c:	697b      	ldr	r3, [r7, #20]
 800310e:	f003 0270 	and.w	r2, r3, #112	; 0x70
 8003112:	687b      	ldr	r3, [r7, #4]
 8003114:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003116:	3b01      	subs	r3, #1
 8003118:	011b      	lsls	r3, r3, #4
 800311a:	429a      	cmp	r2, r3
 800311c:	d127      	bne.n	800316e <HAL_RCC_OscConfig+0x62a>
 800311e:	697b      	ldr	r3, [r7, #20]
 8003120:	f403 42fe 	and.w	r2, r3, #32512	; 0x7f00
 8003124:	687b      	ldr	r3, [r7, #4]
 8003126:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8003128:	021b      	lsls	r3, r3, #8
 800312a:	429a      	cmp	r2, r3
 800312c:	d11f      	bne.n	800316e <HAL_RCC_OscConfig+0x62a>
 800312e:	697b      	ldr	r3, [r7, #20]
 8003130:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8003134:	687a      	ldr	r2, [r7, #4]
 8003136:	6b92      	ldr	r2, [r2, #56]	; 0x38
 8003138:	2a07      	cmp	r2, #7
 800313a:	bf14      	ite	ne
 800313c:	2201      	movne	r2, #1
 800313e:	2200      	moveq	r2, #0
 8003140:	b2d2      	uxtb	r2, r2
 8003142:	4293      	cmp	r3, r2
 8003144:	d113      	bne.n	800316e <HAL_RCC_OscConfig+0x62a>
 8003146:	697b      	ldr	r3, [r7, #20]
 8003148:	f403 02c0 	and.w	r2, r3, #6291456	; 0x600000
 800314c:	687b      	ldr	r3, [r7, #4]
 800314e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8003150:	085b      	lsrs	r3, r3, #1
 8003152:	3b01      	subs	r3, #1
 8003154:	055b      	lsls	r3, r3, #21
 8003156:	429a      	cmp	r2, r3
 8003158:	d109      	bne.n	800316e <HAL_RCC_OscConfig+0x62a>
 800315a:	697b      	ldr	r3, [r7, #20]
 800315c:	f003 62c0 	and.w	r2, r3, #100663296	; 0x6000000
 8003160:	687b      	ldr	r3, [r7, #4]
 8003162:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003164:	085b      	lsrs	r3, r3, #1
 8003166:	3b01      	subs	r3, #1
 8003168:	065b      	lsls	r3, r3, #25
 800316a:	429a      	cmp	r2, r3
 800316c:	d06e      	beq.n	800324c <HAL_RCC_OscConfig+0x708>
 800316e:	69bb      	ldr	r3, [r7, #24]
 8003170:	2b0c      	cmp	r3, #12
 8003172:	d069      	beq.n	8003248 <HAL_RCC_OscConfig+0x704>
 8003174:	4b53      	ldr	r3, [pc, #332]	; (80032c4 <HAL_RCC_OscConfig+0x780>)
 8003176:	681b      	ldr	r3, [r3, #0]
 8003178:	f003 6380 	and.w	r3, r3, #67108864	; 0x4000000
 800317c:	2b00      	cmp	r3, #0
 800317e:	d105      	bne.n	800318c <HAL_RCC_OscConfig+0x648>
 8003180:	4b50      	ldr	r3, [pc, #320]	; (80032c4 <HAL_RCC_OscConfig+0x780>)
 8003182:	681b      	ldr	r3, [r3, #0]
 8003184:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8003188:	2b00      	cmp	r3, #0
 800318a:	d001      	beq.n	8003190 <HAL_RCC_OscConfig+0x64c>
 800318c:	2301      	movs	r3, #1
 800318e:	e0ad      	b.n	80032ec <HAL_RCC_OscConfig+0x7a8>
 8003190:	4b4c      	ldr	r3, [pc, #304]	; (80032c4 <HAL_RCC_OscConfig+0x780>)
 8003192:	681b      	ldr	r3, [r3, #0]
 8003194:	4a4b      	ldr	r2, [pc, #300]	; (80032c4 <HAL_RCC_OscConfig+0x780>)
 8003196:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
 800319a:	6013      	str	r3, [r2, #0]
 800319c:	f7fe fac4 	bl	8001728 <HAL_GetTick>
 80031a0:	6138      	str	r0, [r7, #16]
 80031a2:	e008      	b.n	80031b6 <HAL_RCC_OscConfig+0x672>
 80031a4:	f7fe fac0 	bl	8001728 <HAL_GetTick>
 80031a8:	4602      	mov	r2, r0
 80031aa:	693b      	ldr	r3, [r7, #16]
 80031ac:	1ad3      	subs	r3, r2, r3
 80031ae:	2b02      	cmp	r3, #2
 80031b0:	d901      	bls.n	80031b6 <HAL_RCC_OscConfig+0x672>
 80031b2:	2303      	movs	r3, #3
 80031b4:	e09a      	b.n	80032ec <HAL_RCC_OscConfig+0x7a8>
 80031b6:	4b43      	ldr	r3, [pc, #268]	; (80032c4 <HAL_RCC_OscConfig+0x780>)
 80031b8:	681b      	ldr	r3, [r3, #0]
 80031ba:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 80031be:	2b00      	cmp	r3, #0
 80031c0:	d1f0      	bne.n	80031a4 <HAL_RCC_OscConfig+0x660>
 80031c2:	4b40      	ldr	r3, [pc, #256]	; (80032c4 <HAL_RCC_OscConfig+0x780>)
 80031c4:	68da      	ldr	r2, [r3, #12]
 80031c6:	4b40      	ldr	r3, [pc, #256]	; (80032c8 <HAL_RCC_OscConfig+0x784>)
 80031c8:	4013      	ands	r3, r2
 80031ca:	687a      	ldr	r2, [r7, #4]
 80031cc:	6ad1      	ldr	r1, [r2, #44]	; 0x2c
 80031ce:	687a      	ldr	r2, [r7, #4]
 80031d0:	6b12      	ldr	r2, [r2, #48]	; 0x30
 80031d2:	3a01      	subs	r2, #1
 80031d4:	0112      	lsls	r2, r2, #4
 80031d6:	4311      	orrs	r1, r2
 80031d8:	687a      	ldr	r2, [r7, #4]
 80031da:	6b52      	ldr	r2, [r2, #52]	; 0x34
 80031dc:	0212      	lsls	r2, r2, #8
 80031de:	4311      	orrs	r1, r2
 80031e0:	687a      	ldr	r2, [r7, #4]
 80031e2:	6bd2      	ldr	r2, [r2, #60]	; 0x3c
 80031e4:	0852      	lsrs	r2, r2, #1
 80031e6:	3a01      	subs	r2, #1
 80031e8:	0552      	lsls	r2, r2, #21
 80031ea:	4311      	orrs	r1, r2
 80031ec:	687a      	ldr	r2, [r7, #4]
 80031ee:	6c12      	ldr	r2, [r2, #64]	; 0x40
 80031f0:	0852      	lsrs	r2, r2, #1
 80031f2:	3a01      	subs	r2, #1
 80031f4:	0652      	lsls	r2, r2, #25
 80031f6:	4311      	orrs	r1, r2
 80031f8:	687a      	ldr	r2, [r7, #4]
 80031fa:	6b92      	ldr	r2, [r2, #56]	; 0x38
 80031fc:	0912      	lsrs	r2, r2, #4
 80031fe:	0452      	lsls	r2, r2, #17
 8003200:	430a      	orrs	r2, r1
 8003202:	4930      	ldr	r1, [pc, #192]	; (80032c4 <HAL_RCC_OscConfig+0x780>)
 8003204:	4313      	orrs	r3, r2
 8003206:	60cb      	str	r3, [r1, #12]
 8003208:	4b2e      	ldr	r3, [pc, #184]	; (80032c4 <HAL_RCC_OscConfig+0x780>)
 800320a:	681b      	ldr	r3, [r3, #0]
 800320c:	4a2d      	ldr	r2, [pc, #180]	; (80032c4 <HAL_RCC_OscConfig+0x780>)
 800320e:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 8003212:	6013      	str	r3, [r2, #0]
 8003214:	4b2b      	ldr	r3, [pc, #172]	; (80032c4 <HAL_RCC_OscConfig+0x780>)
 8003216:	68db      	ldr	r3, [r3, #12]
 8003218:	4a2a      	ldr	r2, [pc, #168]	; (80032c4 <HAL_RCC_OscConfig+0x780>)
 800321a:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 800321e:	60d3      	str	r3, [r2, #12]
 8003220:	f7fe fa82 	bl	8001728 <HAL_GetTick>
 8003224:	6138      	str	r0, [r7, #16]
 8003226:	e008      	b.n	800323a <HAL_RCC_OscConfig+0x6f6>
 8003228:	f7fe fa7e 	bl	8001728 <HAL_GetTick>
 800322c:	4602      	mov	r2, r0
 800322e:	693b      	ldr	r3, [r7, #16]
 8003230:	1ad3      	subs	r3, r2, r3
 8003232:	2b02      	cmp	r3, #2
 8003234:	d901      	bls.n	800323a <HAL_RCC_OscConfig+0x6f6>
 8003236:	2303      	movs	r3, #3
 8003238:	e058      	b.n	80032ec <HAL_RCC_OscConfig+0x7a8>
 800323a:	4b22      	ldr	r3, [pc, #136]	; (80032c4 <HAL_RCC_OscConfig+0x780>)
 800323c:	681b      	ldr	r3, [r3, #0]
 800323e:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8003242:	2b00      	cmp	r3, #0
 8003244:	d0f0      	beq.n	8003228 <HAL_RCC_OscConfig+0x6e4>
 8003246:	e050      	b.n	80032ea <HAL_RCC_OscConfig+0x7a6>
 8003248:	2301      	movs	r3, #1
 800324a:	e04f      	b.n	80032ec <HAL_RCC_OscConfig+0x7a8>
 800324c:	4b1d      	ldr	r3, [pc, #116]	; (80032c4 <HAL_RCC_OscConfig+0x780>)
 800324e:	681b      	ldr	r3, [r3, #0]
 8003250:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8003254:	2b00      	cmp	r3, #0
 8003256:	d148      	bne.n	80032ea <HAL_RCC_OscConfig+0x7a6>
 8003258:	4b1a      	ldr	r3, [pc, #104]	; (80032c4 <HAL_RCC_OscConfig+0x780>)
 800325a:	681b      	ldr	r3, [r3, #0]
 800325c:	4a19      	ldr	r2, [pc, #100]	; (80032c4 <HAL_RCC_OscConfig+0x780>)
 800325e:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 8003262:	6013      	str	r3, [r2, #0]
 8003264:	4b17      	ldr	r3, [pc, #92]	; (80032c4 <HAL_RCC_OscConfig+0x780>)
 8003266:	68db      	ldr	r3, [r3, #12]
 8003268:	4a16      	ldr	r2, [pc, #88]	; (80032c4 <HAL_RCC_OscConfig+0x780>)
 800326a:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 800326e:	60d3      	str	r3, [r2, #12]
 8003270:	f7fe fa5a 	bl	8001728 <HAL_GetTick>
 8003274:	6138      	str	r0, [r7, #16]
 8003276:	e008      	b.n	800328a <HAL_RCC_OscConfig+0x746>
 8003278:	f7fe fa56 	bl	8001728 <HAL_GetTick>
 800327c:	4602      	mov	r2, r0
 800327e:	693b      	ldr	r3, [r7, #16]
 8003280:	1ad3      	subs	r3, r2, r3
 8003282:	2b02      	cmp	r3, #2
 8003284:	d901      	bls.n	800328a <HAL_RCC_OscConfig+0x746>
 8003286:	2303      	movs	r3, #3
 8003288:	e030      	b.n	80032ec <HAL_RCC_OscConfig+0x7a8>
 800328a:	4b0e      	ldr	r3, [pc, #56]	; (80032c4 <HAL_RCC_OscConfig+0x780>)
 800328c:	681b      	ldr	r3, [r3, #0]
 800328e:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8003292:	2b00      	cmp	r3, #0
 8003294:	d0f0      	beq.n	8003278 <HAL_RCC_OscConfig+0x734>
 8003296:	e028      	b.n	80032ea <HAL_RCC_OscConfig+0x7a6>
 8003298:	69bb      	ldr	r3, [r7, #24]
 800329a:	2b0c      	cmp	r3, #12
 800329c:	d023      	beq.n	80032e6 <HAL_RCC_OscConfig+0x7a2>
 800329e:	4b09      	ldr	r3, [pc, #36]	; (80032c4 <HAL_RCC_OscConfig+0x780>)
 80032a0:	681b      	ldr	r3, [r3, #0]
 80032a2:	4a08      	ldr	r2, [pc, #32]	; (80032c4 <HAL_RCC_OscConfig+0x780>)
 80032a4:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
 80032a8:	6013      	str	r3, [r2, #0]
 80032aa:	f7fe fa3d 	bl	8001728 <HAL_GetTick>
 80032ae:	6138      	str	r0, [r7, #16]
 80032b0:	e00c      	b.n	80032cc <HAL_RCC_OscConfig+0x788>
 80032b2:	f7fe fa39 	bl	8001728 <HAL_GetTick>
 80032b6:	4602      	mov	r2, r0
 80032b8:	693b      	ldr	r3, [r7, #16]
 80032ba:	1ad3      	subs	r3, r2, r3
 80032bc:	2b02      	cmp	r3, #2
 80032be:	d905      	bls.n	80032cc <HAL_RCC_OscConfig+0x788>
 80032c0:	2303      	movs	r3, #3
 80032c2:	e013      	b.n	80032ec <HAL_RCC_OscConfig+0x7a8>
 80032c4:	40021000 	.word	0x40021000
 80032c8:	f99d808c 	.word	0xf99d808c
 80032cc:	4b09      	ldr	r3, [pc, #36]	; (80032f4 <HAL_RCC_OscConfig+0x7b0>)
 80032ce:	681b      	ldr	r3, [r3, #0]
 80032d0:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 80032d4:	2b00      	cmp	r3, #0
 80032d6:	d1ec      	bne.n	80032b2 <HAL_RCC_OscConfig+0x76e>
 80032d8:	4b06      	ldr	r3, [pc, #24]	; (80032f4 <HAL_RCC_OscConfig+0x7b0>)
 80032da:	68da      	ldr	r2, [r3, #12]
 80032dc:	4905      	ldr	r1, [pc, #20]	; (80032f4 <HAL_RCC_OscConfig+0x7b0>)
 80032de:	4b06      	ldr	r3, [pc, #24]	; (80032f8 <HAL_RCC_OscConfig+0x7b4>)
 80032e0:	4013      	ands	r3, r2
 80032e2:	60cb      	str	r3, [r1, #12]
 80032e4:	e001      	b.n	80032ea <HAL_RCC_OscConfig+0x7a6>
 80032e6:	2301      	movs	r3, #1
 80032e8:	e000      	b.n	80032ec <HAL_RCC_OscConfig+0x7a8>
 80032ea:	2300      	movs	r3, #0
 80032ec:	4618      	mov	r0, r3
 80032ee:	3720      	adds	r7, #32
 80032f0:	46bd      	mov	sp, r7
 80032f2:	bd80      	pop	{r7, pc}
 80032f4:	40021000 	.word	0x40021000
 80032f8:	feeefffc 	.word	0xfeeefffc

080032fc <HAL_RCC_ClockConfig>:
 80032fc:	b580      	push	{r7, lr}
 80032fe:	b084      	sub	sp, #16
 8003300:	af00      	add	r7, sp, #0
 8003302:	6078      	str	r0, [r7, #4]
 8003304:	6039      	str	r1, [r7, #0]
 8003306:	687b      	ldr	r3, [r7, #4]
 8003308:	2b00      	cmp	r3, #0
 800330a:	d101      	bne.n	8003310 <HAL_RCC_ClockConfig+0x14>
 800330c:	2301      	movs	r3, #1
 800330e:	e0e7      	b.n	80034e0 <HAL_RCC_ClockConfig+0x1e4>
 8003310:	4b75      	ldr	r3, [pc, #468]	; (80034e8 <HAL_RCC_ClockConfig+0x1ec>)
 8003312:	681b      	ldr	r3, [r3, #0]
 8003314:	f003 0307 	and.w	r3, r3, #7
 8003318:	683a      	ldr	r2, [r7, #0]
 800331a:	429a      	cmp	r2, r3
 800331c:	d910      	bls.n	8003340 <HAL_RCC_ClockConfig+0x44>
 800331e:	4b72      	ldr	r3, [pc, #456]	; (80034e8 <HAL_RCC_ClockConfig+0x1ec>)
 8003320:	681b      	ldr	r3, [r3, #0]
 8003322:	f023 0207 	bic.w	r2, r3, #7
 8003326:	4970      	ldr	r1, [pc, #448]	; (80034e8 <HAL_RCC_ClockConfig+0x1ec>)
 8003328:	683b      	ldr	r3, [r7, #0]
 800332a:	4313      	orrs	r3, r2
 800332c:	600b      	str	r3, [r1, #0]
 800332e:	4b6e      	ldr	r3, [pc, #440]	; (80034e8 <HAL_RCC_ClockConfig+0x1ec>)
 8003330:	681b      	ldr	r3, [r3, #0]
 8003332:	f003 0307 	and.w	r3, r3, #7
 8003336:	683a      	ldr	r2, [r7, #0]
 8003338:	429a      	cmp	r2, r3
 800333a:	d001      	beq.n	8003340 <HAL_RCC_ClockConfig+0x44>
 800333c:	2301      	movs	r3, #1
 800333e:	e0cf      	b.n	80034e0 <HAL_RCC_ClockConfig+0x1e4>
 8003340:	687b      	ldr	r3, [r7, #4]
 8003342:	681b      	ldr	r3, [r3, #0]
 8003344:	f003 0302 	and.w	r3, r3, #2
 8003348:	2b00      	cmp	r3, #0
 800334a:	d010      	beq.n	800336e <HAL_RCC_ClockConfig+0x72>
 800334c:	687b      	ldr	r3, [r7, #4]
 800334e:	689a      	ldr	r2, [r3, #8]
 8003350:	4b66      	ldr	r3, [pc, #408]	; (80034ec <HAL_RCC_ClockConfig+0x1f0>)
 8003352:	689b      	ldr	r3, [r3, #8]
 8003354:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
 8003358:	429a      	cmp	r2, r3
 800335a:	d908      	bls.n	800336e <HAL_RCC_ClockConfig+0x72>
 800335c:	4b63      	ldr	r3, [pc, #396]	; (80034ec <HAL_RCC_ClockConfig+0x1f0>)
 800335e:	689b      	ldr	r3, [r3, #8]
 8003360:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 8003364:	687b      	ldr	r3, [r7, #4]
 8003366:	689b      	ldr	r3, [r3, #8]
 8003368:	4960      	ldr	r1, [pc, #384]	; (80034ec <HAL_RCC_ClockConfig+0x1f0>)
 800336a:	4313      	orrs	r3, r2
 800336c:	608b      	str	r3, [r1, #8]
 800336e:	687b      	ldr	r3, [r7, #4]
 8003370:	681b      	ldr	r3, [r3, #0]
 8003372:	f003 0301 	and.w	r3, r3, #1
 8003376:	2b00      	cmp	r3, #0
 8003378:	d04c      	beq.n	8003414 <HAL_RCC_ClockConfig+0x118>
 800337a:	687b      	ldr	r3, [r7, #4]
 800337c:	685b      	ldr	r3, [r3, #4]
 800337e:	2b03      	cmp	r3, #3
 8003380:	d107      	bne.n	8003392 <HAL_RCC_ClockConfig+0x96>
 8003382:	4b5a      	ldr	r3, [pc, #360]	; (80034ec <HAL_RCC_ClockConfig+0x1f0>)
 8003384:	681b      	ldr	r3, [r3, #0]
 8003386:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 800338a:	2b00      	cmp	r3, #0
 800338c:	d121      	bne.n	80033d2 <HAL_RCC_ClockConfig+0xd6>
 800338e:	2301      	movs	r3, #1
 8003390:	e0a6      	b.n	80034e0 <HAL_RCC_ClockConfig+0x1e4>
 8003392:	687b      	ldr	r3, [r7, #4]
 8003394:	685b      	ldr	r3, [r3, #4]
 8003396:	2b02      	cmp	r3, #2
 8003398:	d107      	bne.n	80033aa <HAL_RCC_ClockConfig+0xae>
 800339a:	4b54      	ldr	r3, [pc, #336]	; (80034ec <HAL_RCC_ClockConfig+0x1f0>)
 800339c:	681b      	ldr	r3, [r3, #0]
 800339e:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80033a2:	2b00      	cmp	r3, #0
 80033a4:	d115      	bne.n	80033d2 <HAL_RCC_ClockConfig+0xd6>
 80033a6:	2301      	movs	r3, #1
 80033a8:	e09a      	b.n	80034e0 <HAL_RCC_ClockConfig+0x1e4>
 80033aa:	687b      	ldr	r3, [r7, #4]
 80033ac:	685b      	ldr	r3, [r3, #4]
 80033ae:	2b00      	cmp	r3, #0
 80033b0:	d107      	bne.n	80033c2 <HAL_RCC_ClockConfig+0xc6>
 80033b2:	4b4e      	ldr	r3, [pc, #312]	; (80034ec <HAL_RCC_ClockConfig+0x1f0>)
 80033b4:	681b      	ldr	r3, [r3, #0]
 80033b6:	f003 0302 	and.w	r3, r3, #2
 80033ba:	2b00      	cmp	r3, #0
 80033bc:	d109      	bne.n	80033d2 <HAL_RCC_ClockConfig+0xd6>
 80033be:	2301      	movs	r3, #1
 80033c0:	e08e      	b.n	80034e0 <HAL_RCC_ClockConfig+0x1e4>
 80033c2:	4b4a      	ldr	r3, [pc, #296]	; (80034ec <HAL_RCC_ClockConfig+0x1f0>)
 80033c4:	681b      	ldr	r3, [r3, #0]
 80033c6:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 80033ca:	2b00      	cmp	r3, #0
 80033cc:	d101      	bne.n	80033d2 <HAL_RCC_ClockConfig+0xd6>
 80033ce:	2301      	movs	r3, #1
 80033d0:	e086      	b.n	80034e0 <HAL_RCC_ClockConfig+0x1e4>
 80033d2:	4b46      	ldr	r3, [pc, #280]	; (80034ec <HAL_RCC_ClockConfig+0x1f0>)
 80033d4:	689b      	ldr	r3, [r3, #8]
 80033d6:	f023 0203 	bic.w	r2, r3, #3
 80033da:	687b      	ldr	r3, [r7, #4]
 80033dc:	685b      	ldr	r3, [r3, #4]
 80033de:	4943      	ldr	r1, [pc, #268]	; (80034ec <HAL_RCC_ClockConfig+0x1f0>)
 80033e0:	4313      	orrs	r3, r2
 80033e2:	608b      	str	r3, [r1, #8]
 80033e4:	f7fe f9a0 	bl	8001728 <HAL_GetTick>
 80033e8:	60f8      	str	r0, [r7, #12]
 80033ea:	e00a      	b.n	8003402 <HAL_RCC_ClockConfig+0x106>
 80033ec:	f7fe f99c 	bl	8001728 <HAL_GetTick>
 80033f0:	4602      	mov	r2, r0
 80033f2:	68fb      	ldr	r3, [r7, #12]
 80033f4:	1ad3      	subs	r3, r2, r3
 80033f6:	f241 3288 	movw	r2, #5000	; 0x1388
 80033fa:	4293      	cmp	r3, r2
 80033fc:	d901      	bls.n	8003402 <HAL_RCC_ClockConfig+0x106>
 80033fe:	2303      	movs	r3, #3
 8003400:	e06e      	b.n	80034e0 <HAL_RCC_ClockConfig+0x1e4>
 8003402:	4b3a      	ldr	r3, [pc, #232]	; (80034ec <HAL_RCC_ClockConfig+0x1f0>)
 8003404:	689b      	ldr	r3, [r3, #8]
 8003406:	f003 020c 	and.w	r2, r3, #12
 800340a:	687b      	ldr	r3, [r7, #4]
 800340c:	685b      	ldr	r3, [r3, #4]
 800340e:	009b      	lsls	r3, r3, #2
 8003410:	429a      	cmp	r2, r3
 8003412:	d1eb      	bne.n	80033ec <HAL_RCC_ClockConfig+0xf0>
 8003414:	687b      	ldr	r3, [r7, #4]
 8003416:	681b      	ldr	r3, [r3, #0]
 8003418:	f003 0302 	and.w	r3, r3, #2
 800341c:	2b00      	cmp	r3, #0
 800341e:	d010      	beq.n	8003442 <HAL_RCC_ClockConfig+0x146>
 8003420:	687b      	ldr	r3, [r7, #4]
 8003422:	689a      	ldr	r2, [r3, #8]
 8003424:	4b31      	ldr	r3, [pc, #196]	; (80034ec <HAL_RCC_ClockConfig+0x1f0>)
 8003426:	689b      	ldr	r3, [r3, #8]
 8003428:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
 800342c:	429a      	cmp	r2, r3
 800342e:	d208      	bcs.n	8003442 <HAL_RCC_ClockConfig+0x146>
 8003430:	4b2e      	ldr	r3, [pc, #184]	; (80034ec <HAL_RCC_ClockConfig+0x1f0>)
 8003432:	689b      	ldr	r3, [r3, #8]
 8003434:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 8003438:	687b      	ldr	r3, [r7, #4]
 800343a:	689b      	ldr	r3, [r3, #8]
 800343c:	492b      	ldr	r1, [pc, #172]	; (80034ec <HAL_RCC_ClockConfig+0x1f0>)
 800343e:	4313      	orrs	r3, r2
 8003440:	608b      	str	r3, [r1, #8]
 8003442:	4b29      	ldr	r3, [pc, #164]	; (80034e8 <HAL_RCC_ClockConfig+0x1ec>)
 8003444:	681b      	ldr	r3, [r3, #0]
 8003446:	f003 0307 	and.w	r3, r3, #7
 800344a:	683a      	ldr	r2, [r7, #0]
 800344c:	429a      	cmp	r2, r3
 800344e:	d210      	bcs.n	8003472 <HAL_RCC_ClockConfig+0x176>
 8003450:	4b25      	ldr	r3, [pc, #148]	; (80034e8 <HAL_RCC_ClockConfig+0x1ec>)
 8003452:	681b      	ldr	r3, [r3, #0]
 8003454:	f023 0207 	bic.w	r2, r3, #7
 8003458:	4923      	ldr	r1, [pc, #140]	; (80034e8 <HAL_RCC_ClockConfig+0x1ec>)
 800345a:	683b      	ldr	r3, [r7, #0]
 800345c:	4313      	orrs	r3, r2
 800345e:	600b      	str	r3, [r1, #0]
 8003460:	4b21      	ldr	r3, [pc, #132]	; (80034e8 <HAL_RCC_ClockConfig+0x1ec>)
 8003462:	681b      	ldr	r3, [r3, #0]
 8003464:	f003 0307 	and.w	r3, r3, #7
 8003468:	683a      	ldr	r2, [r7, #0]
 800346a:	429a      	cmp	r2, r3
 800346c:	d001      	beq.n	8003472 <HAL_RCC_ClockConfig+0x176>
 800346e:	2301      	movs	r3, #1
 8003470:	e036      	b.n	80034e0 <HAL_RCC_ClockConfig+0x1e4>
 8003472:	687b      	ldr	r3, [r7, #4]
 8003474:	681b      	ldr	r3, [r3, #0]
 8003476:	f003 0304 	and.w	r3, r3, #4
 800347a:	2b00      	cmp	r3, #0
 800347c:	d008      	beq.n	8003490 <HAL_RCC_ClockConfig+0x194>
 800347e:	4b1b      	ldr	r3, [pc, #108]	; (80034ec <HAL_RCC_ClockConfig+0x1f0>)
 8003480:	689b      	ldr	r3, [r3, #8]
 8003482:	f423 62e0 	bic.w	r2, r3, #1792	; 0x700
 8003486:	687b      	ldr	r3, [r7, #4]
 8003488:	68db      	ldr	r3, [r3, #12]
 800348a:	4918      	ldr	r1, [pc, #96]	; (80034ec <HAL_RCC_ClockConfig+0x1f0>)
 800348c:	4313      	orrs	r3, r2
 800348e:	608b      	str	r3, [r1, #8]
 8003490:	687b      	ldr	r3, [r7, #4]
 8003492:	681b      	ldr	r3, [r3, #0]
 8003494:	f003 0308 	and.w	r3, r3, #8
 8003498:	2b00      	cmp	r3, #0
 800349a:	d009      	beq.n	80034b0 <HAL_RCC_ClockConfig+0x1b4>
 800349c:	4b13      	ldr	r3, [pc, #76]	; (80034ec <HAL_RCC_ClockConfig+0x1f0>)
 800349e:	689b      	ldr	r3, [r3, #8]
 80034a0:	f423 5260 	bic.w	r2, r3, #14336	; 0x3800
 80034a4:	687b      	ldr	r3, [r7, #4]
 80034a6:	691b      	ldr	r3, [r3, #16]
 80034a8:	00db      	lsls	r3, r3, #3
 80034aa:	4910      	ldr	r1, [pc, #64]	; (80034ec <HAL_RCC_ClockConfig+0x1f0>)
 80034ac:	4313      	orrs	r3, r2
 80034ae:	608b      	str	r3, [r1, #8]
 80034b0:	f000 f824 	bl	80034fc <HAL_RCC_GetSysClockFreq>
 80034b4:	4602      	mov	r2, r0
 80034b6:	4b0d      	ldr	r3, [pc, #52]	; (80034ec <HAL_RCC_ClockConfig+0x1f0>)
 80034b8:	689b      	ldr	r3, [r3, #8]
 80034ba:	091b      	lsrs	r3, r3, #4
 80034bc:	f003 030f 	and.w	r3, r3, #15
 80034c0:	490b      	ldr	r1, [pc, #44]	; (80034f0 <HAL_RCC_ClockConfig+0x1f4>)
 80034c2:	5ccb      	ldrb	r3, [r1, r3]
 80034c4:	f003 031f 	and.w	r3, r3, #31
 80034c8:	fa22 f303 	lsr.w	r3, r2, r3
 80034cc:	4a09      	ldr	r2, [pc, #36]	; (80034f4 <HAL_RCC_ClockConfig+0x1f8>)
 80034ce:	6013      	str	r3, [r2, #0]
 80034d0:	4b09      	ldr	r3, [pc, #36]	; (80034f8 <HAL_RCC_ClockConfig+0x1fc>)
 80034d2:	681b      	ldr	r3, [r3, #0]
 80034d4:	4618      	mov	r0, r3
 80034d6:	f7fe f8d7 	bl	8001688 <HAL_InitTick>
 80034da:	4603      	mov	r3, r0
 80034dc:	72fb      	strb	r3, [r7, #11]
 80034de:	7afb      	ldrb	r3, [r7, #11]
 80034e0:	4618      	mov	r0, r3
 80034e2:	3710      	adds	r7, #16
 80034e4:	46bd      	mov	sp, r7
 80034e6:	bd80      	pop	{r7, pc}
 80034e8:	40022000 	.word	0x40022000
 80034ec:	40021000 	.word	0x40021000
 80034f0:	08005ed0 	.word	0x08005ed0
 80034f4:	20000000 	.word	0x20000000
 80034f8:	20000004 	.word	0x20000004

080034fc <HAL_RCC_GetSysClockFreq>:
 80034fc:	b480      	push	{r7}
 80034fe:	b089      	sub	sp, #36	; 0x24
 8003500:	af00      	add	r7, sp, #0
 8003502:	2300      	movs	r3, #0
 8003504:	61fb      	str	r3, [r7, #28]
 8003506:	2300      	movs	r3, #0
 8003508:	61bb      	str	r3, [r7, #24]
 800350a:	4b3e      	ldr	r3, [pc, #248]	; (8003604 <HAL_RCC_GetSysClockFreq+0x108>)
 800350c:	689b      	ldr	r3, [r3, #8]
 800350e:	f003 030c 	and.w	r3, r3, #12
 8003512:	613b      	str	r3, [r7, #16]
 8003514:	4b3b      	ldr	r3, [pc, #236]	; (8003604 <HAL_RCC_GetSysClockFreq+0x108>)
 8003516:	68db      	ldr	r3, [r3, #12]
 8003518:	f003 0303 	and.w	r3, r3, #3
 800351c:	60fb      	str	r3, [r7, #12]
 800351e:	693b      	ldr	r3, [r7, #16]
 8003520:	2b00      	cmp	r3, #0
 8003522:	d005      	beq.n	8003530 <HAL_RCC_GetSysClockFreq+0x34>
 8003524:	693b      	ldr	r3, [r7, #16]
 8003526:	2b0c      	cmp	r3, #12
 8003528:	d121      	bne.n	800356e <HAL_RCC_GetSysClockFreq+0x72>
 800352a:	68fb      	ldr	r3, [r7, #12]
 800352c:	2b01      	cmp	r3, #1
 800352e:	d11e      	bne.n	800356e <HAL_RCC_GetSysClockFreq+0x72>
 8003530:	4b34      	ldr	r3, [pc, #208]	; (8003604 <HAL_RCC_GetSysClockFreq+0x108>)
 8003532:	681b      	ldr	r3, [r3, #0]
 8003534:	f003 0308 	and.w	r3, r3, #8
 8003538:	2b00      	cmp	r3, #0
 800353a:	d107      	bne.n	800354c <HAL_RCC_GetSysClockFreq+0x50>
 800353c:	4b31      	ldr	r3, [pc, #196]	; (8003604 <HAL_RCC_GetSysClockFreq+0x108>)
 800353e:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 8003542:	0a1b      	lsrs	r3, r3, #8
 8003544:	f003 030f 	and.w	r3, r3, #15
 8003548:	61fb      	str	r3, [r7, #28]
 800354a:	e005      	b.n	8003558 <HAL_RCC_GetSysClockFreq+0x5c>
 800354c:	4b2d      	ldr	r3, [pc, #180]	; (8003604 <HAL_RCC_GetSysClockFreq+0x108>)
 800354e:	681b      	ldr	r3, [r3, #0]
 8003550:	091b      	lsrs	r3, r3, #4
 8003552:	f003 030f 	and.w	r3, r3, #15
 8003556:	61fb      	str	r3, [r7, #28]
 8003558:	4a2b      	ldr	r2, [pc, #172]	; (8003608 <HAL_RCC_GetSysClockFreq+0x10c>)
 800355a:	69fb      	ldr	r3, [r7, #28]
 800355c:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8003560:	61fb      	str	r3, [r7, #28]
 8003562:	693b      	ldr	r3, [r7, #16]
 8003564:	2b00      	cmp	r3, #0
 8003566:	d10d      	bne.n	8003584 <HAL_RCC_GetSysClockFreq+0x88>
 8003568:	69fb      	ldr	r3, [r7, #28]
 800356a:	61bb      	str	r3, [r7, #24]
 800356c:	e00a      	b.n	8003584 <HAL_RCC_GetSysClockFreq+0x88>
 800356e:	693b      	ldr	r3, [r7, #16]
 8003570:	2b04      	cmp	r3, #4
 8003572:	d102      	bne.n	800357a <HAL_RCC_GetSysClockFreq+0x7e>
 8003574:	4b25      	ldr	r3, [pc, #148]	; (800360c <HAL_RCC_GetSysClockFreq+0x110>)
 8003576:	61bb      	str	r3, [r7, #24]
 8003578:	e004      	b.n	8003584 <HAL_RCC_GetSysClockFreq+0x88>
 800357a:	693b      	ldr	r3, [r7, #16]
 800357c:	2b08      	cmp	r3, #8
 800357e:	d101      	bne.n	8003584 <HAL_RCC_GetSysClockFreq+0x88>
 8003580:	4b23      	ldr	r3, [pc, #140]	; (8003610 <HAL_RCC_GetSysClockFreq+0x114>)
 8003582:	61bb      	str	r3, [r7, #24]
 8003584:	693b      	ldr	r3, [r7, #16]
 8003586:	2b0c      	cmp	r3, #12
 8003588:	d134      	bne.n	80035f4 <HAL_RCC_GetSysClockFreq+0xf8>
 800358a:	4b1e      	ldr	r3, [pc, #120]	; (8003604 <HAL_RCC_GetSysClockFreq+0x108>)
 800358c:	68db      	ldr	r3, [r3, #12]
 800358e:	f003 0303 	and.w	r3, r3, #3
 8003592:	60bb      	str	r3, [r7, #8]
 8003594:	68bb      	ldr	r3, [r7, #8]
 8003596:	2b02      	cmp	r3, #2
 8003598:	d003      	beq.n	80035a2 <HAL_RCC_GetSysClockFreq+0xa6>
 800359a:	68bb      	ldr	r3, [r7, #8]
 800359c:	2b03      	cmp	r3, #3
 800359e:	d003      	beq.n	80035a8 <HAL_RCC_GetSysClockFreq+0xac>
 80035a0:	e005      	b.n	80035ae <HAL_RCC_GetSysClockFreq+0xb2>
 80035a2:	4b1a      	ldr	r3, [pc, #104]	; (800360c <HAL_RCC_GetSysClockFreq+0x110>)
 80035a4:	617b      	str	r3, [r7, #20]
 80035a6:	e005      	b.n	80035b4 <HAL_RCC_GetSysClockFreq+0xb8>
 80035a8:	4b19      	ldr	r3, [pc, #100]	; (8003610 <HAL_RCC_GetSysClockFreq+0x114>)
 80035aa:	617b      	str	r3, [r7, #20]
 80035ac:	e002      	b.n	80035b4 <HAL_RCC_GetSysClockFreq+0xb8>
 80035ae:	69fb      	ldr	r3, [r7, #28]
 80035b0:	617b      	str	r3, [r7, #20]
 80035b2:	bf00      	nop
 80035b4:	4b13      	ldr	r3, [pc, #76]	; (8003604 <HAL_RCC_GetSysClockFreq+0x108>)
 80035b6:	68db      	ldr	r3, [r3, #12]
 80035b8:	091b      	lsrs	r3, r3, #4
 80035ba:	f003 0307 	and.w	r3, r3, #7
 80035be:	3301      	adds	r3, #1
 80035c0:	607b      	str	r3, [r7, #4]
 80035c2:	4b10      	ldr	r3, [pc, #64]	; (8003604 <HAL_RCC_GetSysClockFreq+0x108>)
 80035c4:	68db      	ldr	r3, [r3, #12]
 80035c6:	0a1b      	lsrs	r3, r3, #8
 80035c8:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 80035cc:	697a      	ldr	r2, [r7, #20]
 80035ce:	fb03 f202 	mul.w	r2, r3, r2
 80035d2:	687b      	ldr	r3, [r7, #4]
 80035d4:	fbb2 f3f3 	udiv	r3, r2, r3
 80035d8:	617b      	str	r3, [r7, #20]
 80035da:	4b0a      	ldr	r3, [pc, #40]	; (8003604 <HAL_RCC_GetSysClockFreq+0x108>)
 80035dc:	68db      	ldr	r3, [r3, #12]
 80035de:	0e5b      	lsrs	r3, r3, #25
 80035e0:	f003 0303 	and.w	r3, r3, #3
 80035e4:	3301      	adds	r3, #1
 80035e6:	005b      	lsls	r3, r3, #1
 80035e8:	603b      	str	r3, [r7, #0]
 80035ea:	697a      	ldr	r2, [r7, #20]
 80035ec:	683b      	ldr	r3, [r7, #0]
 80035ee:	fbb2 f3f3 	udiv	r3, r2, r3
 80035f2:	61bb      	str	r3, [r7, #24]
 80035f4:	69bb      	ldr	r3, [r7, #24]
 80035f6:	4618      	mov	r0, r3
 80035f8:	3724      	adds	r7, #36	; 0x24
 80035fa:	46bd      	mov	sp, r7
 80035fc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003600:	4770      	bx	lr
 8003602:	bf00      	nop
 8003604:	40021000 	.word	0x40021000
 8003608:	08005ee8 	.word	0x08005ee8
 800360c:	00f42400 	.word	0x00f42400
 8003610:	007a1200 	.word	0x007a1200

08003614 <HAL_RCC_GetHCLKFreq>:
 8003614:	b480      	push	{r7}
 8003616:	af00      	add	r7, sp, #0
 8003618:	4b03      	ldr	r3, [pc, #12]	; (8003628 <HAL_RCC_GetHCLKFreq+0x14>)
 800361a:	681b      	ldr	r3, [r3, #0]
 800361c:	4618      	mov	r0, r3
 800361e:	46bd      	mov	sp, r7
 8003620:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003624:	4770      	bx	lr
 8003626:	bf00      	nop
 8003628:	20000000 	.word	0x20000000

0800362c <HAL_RCC_GetPCLK1Freq>:
 800362c:	b580      	push	{r7, lr}
 800362e:	af00      	add	r7, sp, #0
 8003630:	f7ff fff0 	bl	8003614 <HAL_RCC_GetHCLKFreq>
 8003634:	4602      	mov	r2, r0
 8003636:	4b06      	ldr	r3, [pc, #24]	; (8003650 <HAL_RCC_GetPCLK1Freq+0x24>)
 8003638:	689b      	ldr	r3, [r3, #8]
 800363a:	0a1b      	lsrs	r3, r3, #8
 800363c:	f003 0307 	and.w	r3, r3, #7
 8003640:	4904      	ldr	r1, [pc, #16]	; (8003654 <HAL_RCC_GetPCLK1Freq+0x28>)
 8003642:	5ccb      	ldrb	r3, [r1, r3]
 8003644:	f003 031f 	and.w	r3, r3, #31
 8003648:	fa22 f303 	lsr.w	r3, r2, r3
 800364c:	4618      	mov	r0, r3
 800364e:	bd80      	pop	{r7, pc}
 8003650:	40021000 	.word	0x40021000
 8003654:	08005ee0 	.word	0x08005ee0

08003658 <HAL_RCC_GetPCLK2Freq>:
 8003658:	b580      	push	{r7, lr}
 800365a:	af00      	add	r7, sp, #0
 800365c:	f7ff ffda 	bl	8003614 <HAL_RCC_GetHCLKFreq>
 8003660:	4602      	mov	r2, r0
 8003662:	4b06      	ldr	r3, [pc, #24]	; (800367c <HAL_RCC_GetPCLK2Freq+0x24>)
 8003664:	689b      	ldr	r3, [r3, #8]
 8003666:	0adb      	lsrs	r3, r3, #11
 8003668:	f003 0307 	and.w	r3, r3, #7
 800366c:	4904      	ldr	r1, [pc, #16]	; (8003680 <HAL_RCC_GetPCLK2Freq+0x28>)
 800366e:	5ccb      	ldrb	r3, [r1, r3]
 8003670:	f003 031f 	and.w	r3, r3, #31
 8003674:	fa22 f303 	lsr.w	r3, r2, r3
 8003678:	4618      	mov	r0, r3
 800367a:	bd80      	pop	{r7, pc}
 800367c:	40021000 	.word	0x40021000
 8003680:	08005ee0 	.word	0x08005ee0

08003684 <RCC_SetFlashLatencyFromMSIRange>:
 8003684:	b580      	push	{r7, lr}
 8003686:	b086      	sub	sp, #24
 8003688:	af00      	add	r7, sp, #0
 800368a:	6078      	str	r0, [r7, #4]
 800368c:	2300      	movs	r3, #0
 800368e:	613b      	str	r3, [r7, #16]
 8003690:	4b2a      	ldr	r3, [pc, #168]	; (800373c <RCC_SetFlashLatencyFromMSIRange+0xb8>)
 8003692:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8003694:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8003698:	2b00      	cmp	r3, #0
 800369a:	d003      	beq.n	80036a4 <RCC_SetFlashLatencyFromMSIRange+0x20>
 800369c:	f7ff f9ee 	bl	8002a7c <HAL_PWREx_GetVoltageRange>
 80036a0:	6178      	str	r0, [r7, #20]
 80036a2:	e014      	b.n	80036ce <RCC_SetFlashLatencyFromMSIRange+0x4a>
 80036a4:	4b25      	ldr	r3, [pc, #148]	; (800373c <RCC_SetFlashLatencyFromMSIRange+0xb8>)
 80036a6:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 80036a8:	4a24      	ldr	r2, [pc, #144]	; (800373c <RCC_SetFlashLatencyFromMSIRange+0xb8>)
 80036aa:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 80036ae:	6593      	str	r3, [r2, #88]	; 0x58
 80036b0:	4b22      	ldr	r3, [pc, #136]	; (800373c <RCC_SetFlashLatencyFromMSIRange+0xb8>)
 80036b2:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 80036b4:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80036b8:	60fb      	str	r3, [r7, #12]
 80036ba:	68fb      	ldr	r3, [r7, #12]
 80036bc:	f7ff f9de 	bl	8002a7c <HAL_PWREx_GetVoltageRange>
 80036c0:	6178      	str	r0, [r7, #20]
 80036c2:	4b1e      	ldr	r3, [pc, #120]	; (800373c <RCC_SetFlashLatencyFromMSIRange+0xb8>)
 80036c4:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 80036c6:	4a1d      	ldr	r2, [pc, #116]	; (800373c <RCC_SetFlashLatencyFromMSIRange+0xb8>)
 80036c8:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 80036cc:	6593      	str	r3, [r2, #88]	; 0x58
 80036ce:	697b      	ldr	r3, [r7, #20]
 80036d0:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 80036d4:	d10b      	bne.n	80036ee <RCC_SetFlashLatencyFromMSIRange+0x6a>
 80036d6:	687b      	ldr	r3, [r7, #4]
 80036d8:	2b80      	cmp	r3, #128	; 0x80
 80036da:	d919      	bls.n	8003710 <RCC_SetFlashLatencyFromMSIRange+0x8c>
 80036dc:	687b      	ldr	r3, [r7, #4]
 80036de:	2ba0      	cmp	r3, #160	; 0xa0
 80036e0:	d902      	bls.n	80036e8 <RCC_SetFlashLatencyFromMSIRange+0x64>
 80036e2:	2302      	movs	r3, #2
 80036e4:	613b      	str	r3, [r7, #16]
 80036e6:	e013      	b.n	8003710 <RCC_SetFlashLatencyFromMSIRange+0x8c>
 80036e8:	2301      	movs	r3, #1
 80036ea:	613b      	str	r3, [r7, #16]
 80036ec:	e010      	b.n	8003710 <RCC_SetFlashLatencyFromMSIRange+0x8c>
 80036ee:	687b      	ldr	r3, [r7, #4]
 80036f0:	2b80      	cmp	r3, #128	; 0x80
 80036f2:	d902      	bls.n	80036fa <RCC_SetFlashLatencyFromMSIRange+0x76>
 80036f4:	2303      	movs	r3, #3
 80036f6:	613b      	str	r3, [r7, #16]
 80036f8:	e00a      	b.n	8003710 <RCC_SetFlashLatencyFromMSIRange+0x8c>
 80036fa:	687b      	ldr	r3, [r7, #4]
 80036fc:	2b80      	cmp	r3, #128	; 0x80
 80036fe:	d102      	bne.n	8003706 <RCC_SetFlashLatencyFromMSIRange+0x82>
 8003700:	2302      	movs	r3, #2
 8003702:	613b      	str	r3, [r7, #16]
 8003704:	e004      	b.n	8003710 <RCC_SetFlashLatencyFromMSIRange+0x8c>
 8003706:	687b      	ldr	r3, [r7, #4]
 8003708:	2b70      	cmp	r3, #112	; 0x70
 800370a:	d101      	bne.n	8003710 <RCC_SetFlashLatencyFromMSIRange+0x8c>
 800370c:	2301      	movs	r3, #1
 800370e:	613b      	str	r3, [r7, #16]
 8003710:	4b0b      	ldr	r3, [pc, #44]	; (8003740 <RCC_SetFlashLatencyFromMSIRange+0xbc>)
 8003712:	681b      	ldr	r3, [r3, #0]
 8003714:	f023 0207 	bic.w	r2, r3, #7
 8003718:	4909      	ldr	r1, [pc, #36]	; (8003740 <RCC_SetFlashLatencyFromMSIRange+0xbc>)
 800371a:	693b      	ldr	r3, [r7, #16]
 800371c:	4313      	orrs	r3, r2
 800371e:	600b      	str	r3, [r1, #0]
 8003720:	4b07      	ldr	r3, [pc, #28]	; (8003740 <RCC_SetFlashLatencyFromMSIRange+0xbc>)
 8003722:	681b      	ldr	r3, [r3, #0]
 8003724:	f003 0307 	and.w	r3, r3, #7
 8003728:	693a      	ldr	r2, [r7, #16]
 800372a:	429a      	cmp	r2, r3
 800372c:	d001      	beq.n	8003732 <RCC_SetFlashLatencyFromMSIRange+0xae>
 800372e:	2301      	movs	r3, #1
 8003730:	e000      	b.n	8003734 <RCC_SetFlashLatencyFromMSIRange+0xb0>
 8003732:	2300      	movs	r3, #0
 8003734:	4618      	mov	r0, r3
 8003736:	3718      	adds	r7, #24
 8003738:	46bd      	mov	sp, r7
 800373a:	bd80      	pop	{r7, pc}
 800373c:	40021000 	.word	0x40021000
 8003740:	40022000 	.word	0x40022000

08003744 <HAL_RCCEx_PeriphCLKConfig>:
 8003744:	b580      	push	{r7, lr}
 8003746:	b086      	sub	sp, #24
 8003748:	af00      	add	r7, sp, #0
 800374a:	6078      	str	r0, [r7, #4]
 800374c:	2300      	movs	r3, #0
 800374e:	74fb      	strb	r3, [r7, #19]
 8003750:	2300      	movs	r3, #0
 8003752:	74bb      	strb	r3, [r7, #18]
 8003754:	687b      	ldr	r3, [r7, #4]
 8003756:	681b      	ldr	r3, [r3, #0]
 8003758:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 800375c:	2b00      	cmp	r3, #0
 800375e:	d041      	beq.n	80037e4 <HAL_RCCEx_PeriphCLKConfig+0xa0>
 8003760:	687b      	ldr	r3, [r7, #4]
 8003762:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8003764:	f5b3 0f40 	cmp.w	r3, #12582912	; 0xc00000
 8003768:	d02a      	beq.n	80037c0 <HAL_RCCEx_PeriphCLKConfig+0x7c>
 800376a:	f5b3 0f40 	cmp.w	r3, #12582912	; 0xc00000
 800376e:	d824      	bhi.n	80037ba <HAL_RCCEx_PeriphCLKConfig+0x76>
 8003770:	f5b3 0f00 	cmp.w	r3, #8388608	; 0x800000
 8003774:	d008      	beq.n	8003788 <HAL_RCCEx_PeriphCLKConfig+0x44>
 8003776:	f5b3 0f00 	cmp.w	r3, #8388608	; 0x800000
 800377a:	d81e      	bhi.n	80037ba <HAL_RCCEx_PeriphCLKConfig+0x76>
 800377c:	2b00      	cmp	r3, #0
 800377e:	d00a      	beq.n	8003796 <HAL_RCCEx_PeriphCLKConfig+0x52>
 8003780:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 8003784:	d010      	beq.n	80037a8 <HAL_RCCEx_PeriphCLKConfig+0x64>
 8003786:	e018      	b.n	80037ba <HAL_RCCEx_PeriphCLKConfig+0x76>
 8003788:	4b86      	ldr	r3, [pc, #536]	; (80039a4 <HAL_RCCEx_PeriphCLKConfig+0x260>)
 800378a:	68db      	ldr	r3, [r3, #12]
 800378c:	4a85      	ldr	r2, [pc, #532]	; (80039a4 <HAL_RCCEx_PeriphCLKConfig+0x260>)
 800378e:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8003792:	60d3      	str	r3, [r2, #12]
 8003794:	e015      	b.n	80037c2 <HAL_RCCEx_PeriphCLKConfig+0x7e>
 8003796:	687b      	ldr	r3, [r7, #4]
 8003798:	3304      	adds	r3, #4
 800379a:	2100      	movs	r1, #0
 800379c:	4618      	mov	r0, r3
 800379e:	f000 fabb 	bl	8003d18 <RCCEx_PLLSAI1_Config>
 80037a2:	4603      	mov	r3, r0
 80037a4:	74fb      	strb	r3, [r7, #19]
 80037a6:	e00c      	b.n	80037c2 <HAL_RCCEx_PeriphCLKConfig+0x7e>
 80037a8:	687b      	ldr	r3, [r7, #4]
 80037aa:	3320      	adds	r3, #32
 80037ac:	2100      	movs	r1, #0
 80037ae:	4618      	mov	r0, r3
 80037b0:	f000 fba6 	bl	8003f00 <RCCEx_PLLSAI2_Config>
 80037b4:	4603      	mov	r3, r0
 80037b6:	74fb      	strb	r3, [r7, #19]
 80037b8:	e003      	b.n	80037c2 <HAL_RCCEx_PeriphCLKConfig+0x7e>
 80037ba:	2301      	movs	r3, #1
 80037bc:	74fb      	strb	r3, [r7, #19]
 80037be:	e000      	b.n	80037c2 <HAL_RCCEx_PeriphCLKConfig+0x7e>
 80037c0:	bf00      	nop
 80037c2:	7cfb      	ldrb	r3, [r7, #19]
 80037c4:	2b00      	cmp	r3, #0
 80037c6:	d10b      	bne.n	80037e0 <HAL_RCCEx_PeriphCLKConfig+0x9c>
 80037c8:	4b76      	ldr	r3, [pc, #472]	; (80039a4 <HAL_RCCEx_PeriphCLKConfig+0x260>)
 80037ca:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 80037ce:	f423 0240 	bic.w	r2, r3, #12582912	; 0xc00000
 80037d2:	687b      	ldr	r3, [r7, #4]
 80037d4:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 80037d6:	4973      	ldr	r1, [pc, #460]	; (80039a4 <HAL_RCCEx_PeriphCLKConfig+0x260>)
 80037d8:	4313      	orrs	r3, r2
 80037da:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
 80037de:	e001      	b.n	80037e4 <HAL_RCCEx_PeriphCLKConfig+0xa0>
 80037e0:	7cfb      	ldrb	r3, [r7, #19]
 80037e2:	74bb      	strb	r3, [r7, #18]
 80037e4:	687b      	ldr	r3, [r7, #4]
 80037e6:	681b      	ldr	r3, [r3, #0]
 80037e8:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 80037ec:	2b00      	cmp	r3, #0
 80037ee:	d041      	beq.n	8003874 <HAL_RCCEx_PeriphCLKConfig+0x130>
 80037f0:	687b      	ldr	r3, [r7, #4]
 80037f2:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 80037f4:	f1b3 7f40 	cmp.w	r3, #50331648	; 0x3000000
 80037f8:	d02a      	beq.n	8003850 <HAL_RCCEx_PeriphCLKConfig+0x10c>
 80037fa:	f1b3 7f40 	cmp.w	r3, #50331648	; 0x3000000
 80037fe:	d824      	bhi.n	800384a <HAL_RCCEx_PeriphCLKConfig+0x106>
 8003800:	f1b3 7f00 	cmp.w	r3, #33554432	; 0x2000000
 8003804:	d008      	beq.n	8003818 <HAL_RCCEx_PeriphCLKConfig+0xd4>
 8003806:	f1b3 7f00 	cmp.w	r3, #33554432	; 0x2000000
 800380a:	d81e      	bhi.n	800384a <HAL_RCCEx_PeriphCLKConfig+0x106>
 800380c:	2b00      	cmp	r3, #0
 800380e:	d00a      	beq.n	8003826 <HAL_RCCEx_PeriphCLKConfig+0xe2>
 8003810:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 8003814:	d010      	beq.n	8003838 <HAL_RCCEx_PeriphCLKConfig+0xf4>
 8003816:	e018      	b.n	800384a <HAL_RCCEx_PeriphCLKConfig+0x106>
 8003818:	4b62      	ldr	r3, [pc, #392]	; (80039a4 <HAL_RCCEx_PeriphCLKConfig+0x260>)
 800381a:	68db      	ldr	r3, [r3, #12]
 800381c:	4a61      	ldr	r2, [pc, #388]	; (80039a4 <HAL_RCCEx_PeriphCLKConfig+0x260>)
 800381e:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8003822:	60d3      	str	r3, [r2, #12]
 8003824:	e015      	b.n	8003852 <HAL_RCCEx_PeriphCLKConfig+0x10e>
 8003826:	687b      	ldr	r3, [r7, #4]
 8003828:	3304      	adds	r3, #4
 800382a:	2100      	movs	r1, #0
 800382c:	4618      	mov	r0, r3
 800382e:	f000 fa73 	bl	8003d18 <RCCEx_PLLSAI1_Config>
 8003832:	4603      	mov	r3, r0
 8003834:	74fb      	strb	r3, [r7, #19]
 8003836:	e00c      	b.n	8003852 <HAL_RCCEx_PeriphCLKConfig+0x10e>
 8003838:	687b      	ldr	r3, [r7, #4]
 800383a:	3320      	adds	r3, #32
 800383c:	2100      	movs	r1, #0
 800383e:	4618      	mov	r0, r3
 8003840:	f000 fb5e 	bl	8003f00 <RCCEx_PLLSAI2_Config>
 8003844:	4603      	mov	r3, r0
 8003846:	74fb      	strb	r3, [r7, #19]
 8003848:	e003      	b.n	8003852 <HAL_RCCEx_PeriphCLKConfig+0x10e>
 800384a:	2301      	movs	r3, #1
 800384c:	74fb      	strb	r3, [r7, #19]
 800384e:	e000      	b.n	8003852 <HAL_RCCEx_PeriphCLKConfig+0x10e>
 8003850:	bf00      	nop
 8003852:	7cfb      	ldrb	r3, [r7, #19]
 8003854:	2b00      	cmp	r3, #0
 8003856:	d10b      	bne.n	8003870 <HAL_RCCEx_PeriphCLKConfig+0x12c>
 8003858:	4b52      	ldr	r3, [pc, #328]	; (80039a4 <HAL_RCCEx_PeriphCLKConfig+0x260>)
 800385a:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 800385e:	f023 7240 	bic.w	r2, r3, #50331648	; 0x3000000
 8003862:	687b      	ldr	r3, [r7, #4]
 8003864:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 8003866:	494f      	ldr	r1, [pc, #316]	; (80039a4 <HAL_RCCEx_PeriphCLKConfig+0x260>)
 8003868:	4313      	orrs	r3, r2
 800386a:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
 800386e:	e001      	b.n	8003874 <HAL_RCCEx_PeriphCLKConfig+0x130>
 8003870:	7cfb      	ldrb	r3, [r7, #19]
 8003872:	74bb      	strb	r3, [r7, #18]
 8003874:	687b      	ldr	r3, [r7, #4]
 8003876:	681b      	ldr	r3, [r3, #0]
 8003878:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800387c:	2b00      	cmp	r3, #0
 800387e:	f000 80a0 	beq.w	80039c2 <HAL_RCCEx_PeriphCLKConfig+0x27e>
 8003882:	2300      	movs	r3, #0
 8003884:	747b      	strb	r3, [r7, #17]
 8003886:	4b47      	ldr	r3, [pc, #284]	; (80039a4 <HAL_RCCEx_PeriphCLKConfig+0x260>)
 8003888:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 800388a:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800388e:	2b00      	cmp	r3, #0
 8003890:	d101      	bne.n	8003896 <HAL_RCCEx_PeriphCLKConfig+0x152>
 8003892:	2301      	movs	r3, #1
 8003894:	e000      	b.n	8003898 <HAL_RCCEx_PeriphCLKConfig+0x154>
 8003896:	2300      	movs	r3, #0
 8003898:	2b00      	cmp	r3, #0
 800389a:	d00d      	beq.n	80038b8 <HAL_RCCEx_PeriphCLKConfig+0x174>
 800389c:	4b41      	ldr	r3, [pc, #260]	; (80039a4 <HAL_RCCEx_PeriphCLKConfig+0x260>)
 800389e:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 80038a0:	4a40      	ldr	r2, [pc, #256]	; (80039a4 <HAL_RCCEx_PeriphCLKConfig+0x260>)
 80038a2:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 80038a6:	6593      	str	r3, [r2, #88]	; 0x58
 80038a8:	4b3e      	ldr	r3, [pc, #248]	; (80039a4 <HAL_RCCEx_PeriphCLKConfig+0x260>)
 80038aa:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 80038ac:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80038b0:	60bb      	str	r3, [r7, #8]
 80038b2:	68bb      	ldr	r3, [r7, #8]
 80038b4:	2301      	movs	r3, #1
 80038b6:	747b      	strb	r3, [r7, #17]
 80038b8:	4b3b      	ldr	r3, [pc, #236]	; (80039a8 <HAL_RCCEx_PeriphCLKConfig+0x264>)
 80038ba:	681b      	ldr	r3, [r3, #0]
 80038bc:	4a3a      	ldr	r2, [pc, #232]	; (80039a8 <HAL_RCCEx_PeriphCLKConfig+0x264>)
 80038be:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80038c2:	6013      	str	r3, [r2, #0]
 80038c4:	f7fd ff30 	bl	8001728 <HAL_GetTick>
 80038c8:	60f8      	str	r0, [r7, #12]
 80038ca:	e009      	b.n	80038e0 <HAL_RCCEx_PeriphCLKConfig+0x19c>
 80038cc:	f7fd ff2c 	bl	8001728 <HAL_GetTick>
 80038d0:	4602      	mov	r2, r0
 80038d2:	68fb      	ldr	r3, [r7, #12]
 80038d4:	1ad3      	subs	r3, r2, r3
 80038d6:	2b02      	cmp	r3, #2
 80038d8:	d902      	bls.n	80038e0 <HAL_RCCEx_PeriphCLKConfig+0x19c>
 80038da:	2303      	movs	r3, #3
 80038dc:	74fb      	strb	r3, [r7, #19]
 80038de:	e005      	b.n	80038ec <HAL_RCCEx_PeriphCLKConfig+0x1a8>
 80038e0:	4b31      	ldr	r3, [pc, #196]	; (80039a8 <HAL_RCCEx_PeriphCLKConfig+0x264>)
 80038e2:	681b      	ldr	r3, [r3, #0]
 80038e4:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80038e8:	2b00      	cmp	r3, #0
 80038ea:	d0ef      	beq.n	80038cc <HAL_RCCEx_PeriphCLKConfig+0x188>
 80038ec:	7cfb      	ldrb	r3, [r7, #19]
 80038ee:	2b00      	cmp	r3, #0
 80038f0:	d15c      	bne.n	80039ac <HAL_RCCEx_PeriphCLKConfig+0x268>
 80038f2:	4b2c      	ldr	r3, [pc, #176]	; (80039a4 <HAL_RCCEx_PeriphCLKConfig+0x260>)
 80038f4:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 80038f8:	f403 7340 	and.w	r3, r3, #768	; 0x300
 80038fc:	617b      	str	r3, [r7, #20]
 80038fe:	697b      	ldr	r3, [r7, #20]
 8003900:	2b00      	cmp	r3, #0
 8003902:	d01f      	beq.n	8003944 <HAL_RCCEx_PeriphCLKConfig+0x200>
 8003904:	687b      	ldr	r3, [r7, #4]
 8003906:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800390a:	697a      	ldr	r2, [r7, #20]
 800390c:	429a      	cmp	r2, r3
 800390e:	d019      	beq.n	8003944 <HAL_RCCEx_PeriphCLKConfig+0x200>
 8003910:	4b24      	ldr	r3, [pc, #144]	; (80039a4 <HAL_RCCEx_PeriphCLKConfig+0x260>)
 8003912:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8003916:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 800391a:	617b      	str	r3, [r7, #20]
 800391c:	4b21      	ldr	r3, [pc, #132]	; (80039a4 <HAL_RCCEx_PeriphCLKConfig+0x260>)
 800391e:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8003922:	4a20      	ldr	r2, [pc, #128]	; (80039a4 <HAL_RCCEx_PeriphCLKConfig+0x260>)
 8003924:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8003928:	f8c2 3090 	str.w	r3, [r2, #144]	; 0x90
 800392c:	4b1d      	ldr	r3, [pc, #116]	; (80039a4 <HAL_RCCEx_PeriphCLKConfig+0x260>)
 800392e:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8003932:	4a1c      	ldr	r2, [pc, #112]	; (80039a4 <HAL_RCCEx_PeriphCLKConfig+0x260>)
 8003934:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8003938:	f8c2 3090 	str.w	r3, [r2, #144]	; 0x90
 800393c:	4a19      	ldr	r2, [pc, #100]	; (80039a4 <HAL_RCCEx_PeriphCLKConfig+0x260>)
 800393e:	697b      	ldr	r3, [r7, #20]
 8003940:	f8c2 3090 	str.w	r3, [r2, #144]	; 0x90
 8003944:	697b      	ldr	r3, [r7, #20]
 8003946:	f003 0301 	and.w	r3, r3, #1
 800394a:	2b00      	cmp	r3, #0
 800394c:	d016      	beq.n	800397c <HAL_RCCEx_PeriphCLKConfig+0x238>
 800394e:	f7fd feeb 	bl	8001728 <HAL_GetTick>
 8003952:	60f8      	str	r0, [r7, #12]
 8003954:	e00b      	b.n	800396e <HAL_RCCEx_PeriphCLKConfig+0x22a>
 8003956:	f7fd fee7 	bl	8001728 <HAL_GetTick>
 800395a:	4602      	mov	r2, r0
 800395c:	68fb      	ldr	r3, [r7, #12]
 800395e:	1ad3      	subs	r3, r2, r3
 8003960:	f241 3288 	movw	r2, #5000	; 0x1388
 8003964:	4293      	cmp	r3, r2
 8003966:	d902      	bls.n	800396e <HAL_RCCEx_PeriphCLKConfig+0x22a>
 8003968:	2303      	movs	r3, #3
 800396a:	74fb      	strb	r3, [r7, #19]
 800396c:	e006      	b.n	800397c <HAL_RCCEx_PeriphCLKConfig+0x238>
 800396e:	4b0d      	ldr	r3, [pc, #52]	; (80039a4 <HAL_RCCEx_PeriphCLKConfig+0x260>)
 8003970:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8003974:	f003 0302 	and.w	r3, r3, #2
 8003978:	2b00      	cmp	r3, #0
 800397a:	d0ec      	beq.n	8003956 <HAL_RCCEx_PeriphCLKConfig+0x212>
 800397c:	7cfb      	ldrb	r3, [r7, #19]
 800397e:	2b00      	cmp	r3, #0
 8003980:	d10c      	bne.n	800399c <HAL_RCCEx_PeriphCLKConfig+0x258>
 8003982:	4b08      	ldr	r3, [pc, #32]	; (80039a4 <HAL_RCCEx_PeriphCLKConfig+0x260>)
 8003984:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8003988:	f423 7240 	bic.w	r2, r3, #768	; 0x300
 800398c:	687b      	ldr	r3, [r7, #4]
 800398e:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8003992:	4904      	ldr	r1, [pc, #16]	; (80039a4 <HAL_RCCEx_PeriphCLKConfig+0x260>)
 8003994:	4313      	orrs	r3, r2
 8003996:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
 800399a:	e009      	b.n	80039b0 <HAL_RCCEx_PeriphCLKConfig+0x26c>
 800399c:	7cfb      	ldrb	r3, [r7, #19]
 800399e:	74bb      	strb	r3, [r7, #18]
 80039a0:	e006      	b.n	80039b0 <HAL_RCCEx_PeriphCLKConfig+0x26c>
 80039a2:	bf00      	nop
 80039a4:	40021000 	.word	0x40021000
 80039a8:	40007000 	.word	0x40007000
 80039ac:	7cfb      	ldrb	r3, [r7, #19]
 80039ae:	74bb      	strb	r3, [r7, #18]
 80039b0:	7c7b      	ldrb	r3, [r7, #17]
 80039b2:	2b01      	cmp	r3, #1
 80039b4:	d105      	bne.n	80039c2 <HAL_RCCEx_PeriphCLKConfig+0x27e>
 80039b6:	4b9e      	ldr	r3, [pc, #632]	; (8003c30 <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 80039b8:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 80039ba:	4a9d      	ldr	r2, [pc, #628]	; (8003c30 <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 80039bc:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 80039c0:	6593      	str	r3, [r2, #88]	; 0x58
 80039c2:	687b      	ldr	r3, [r7, #4]
 80039c4:	681b      	ldr	r3, [r3, #0]
 80039c6:	f003 0301 	and.w	r3, r3, #1
 80039ca:	2b00      	cmp	r3, #0
 80039cc:	d00a      	beq.n	80039e4 <HAL_RCCEx_PeriphCLKConfig+0x2a0>
 80039ce:	4b98      	ldr	r3, [pc, #608]	; (8003c30 <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 80039d0:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 80039d4:	f023 0203 	bic.w	r2, r3, #3
 80039d8:	687b      	ldr	r3, [r7, #4]
 80039da:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80039dc:	4994      	ldr	r1, [pc, #592]	; (8003c30 <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 80039de:	4313      	orrs	r3, r2
 80039e0:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
 80039e4:	687b      	ldr	r3, [r7, #4]
 80039e6:	681b      	ldr	r3, [r3, #0]
 80039e8:	f003 0302 	and.w	r3, r3, #2
 80039ec:	2b00      	cmp	r3, #0
 80039ee:	d00a      	beq.n	8003a06 <HAL_RCCEx_PeriphCLKConfig+0x2c2>
 80039f0:	4b8f      	ldr	r3, [pc, #572]	; (8003c30 <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 80039f2:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 80039f6:	f023 020c 	bic.w	r2, r3, #12
 80039fa:	687b      	ldr	r3, [r7, #4]
 80039fc:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80039fe:	498c      	ldr	r1, [pc, #560]	; (8003c30 <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 8003a00:	4313      	orrs	r3, r2
 8003a02:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
 8003a06:	687b      	ldr	r3, [r7, #4]
 8003a08:	681b      	ldr	r3, [r3, #0]
 8003a0a:	f003 0304 	and.w	r3, r3, #4
 8003a0e:	2b00      	cmp	r3, #0
 8003a10:	d00a      	beq.n	8003a28 <HAL_RCCEx_PeriphCLKConfig+0x2e4>
 8003a12:	4b87      	ldr	r3, [pc, #540]	; (8003c30 <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 8003a14:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8003a18:	f023 0230 	bic.w	r2, r3, #48	; 0x30
 8003a1c:	687b      	ldr	r3, [r7, #4]
 8003a1e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003a20:	4983      	ldr	r1, [pc, #524]	; (8003c30 <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 8003a22:	4313      	orrs	r3, r2
 8003a24:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
 8003a28:	687b      	ldr	r3, [r7, #4]
 8003a2a:	681b      	ldr	r3, [r3, #0]
 8003a2c:	f003 0308 	and.w	r3, r3, #8
 8003a30:	2b00      	cmp	r3, #0
 8003a32:	d00a      	beq.n	8003a4a <HAL_RCCEx_PeriphCLKConfig+0x306>
 8003a34:	4b7e      	ldr	r3, [pc, #504]	; (8003c30 <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 8003a36:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8003a3a:	f023 02c0 	bic.w	r2, r3, #192	; 0xc0
 8003a3e:	687b      	ldr	r3, [r7, #4]
 8003a40:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8003a42:	497b      	ldr	r1, [pc, #492]	; (8003c30 <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 8003a44:	4313      	orrs	r3, r2
 8003a46:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
 8003a4a:	687b      	ldr	r3, [r7, #4]
 8003a4c:	681b      	ldr	r3, [r3, #0]
 8003a4e:	f003 0310 	and.w	r3, r3, #16
 8003a52:	2b00      	cmp	r3, #0
 8003a54:	d00a      	beq.n	8003a6c <HAL_RCCEx_PeriphCLKConfig+0x328>
 8003a56:	4b76      	ldr	r3, [pc, #472]	; (8003c30 <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 8003a58:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8003a5c:	f423 7240 	bic.w	r2, r3, #768	; 0x300
 8003a60:	687b      	ldr	r3, [r7, #4]
 8003a62:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8003a64:	4972      	ldr	r1, [pc, #456]	; (8003c30 <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 8003a66:	4313      	orrs	r3, r2
 8003a68:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
 8003a6c:	687b      	ldr	r3, [r7, #4]
 8003a6e:	681b      	ldr	r3, [r3, #0]
 8003a70:	f003 0320 	and.w	r3, r3, #32
 8003a74:	2b00      	cmp	r3, #0
 8003a76:	d00a      	beq.n	8003a8e <HAL_RCCEx_PeriphCLKConfig+0x34a>
 8003a78:	4b6d      	ldr	r3, [pc, #436]	; (8003c30 <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 8003a7a:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8003a7e:	f423 6240 	bic.w	r2, r3, #3072	; 0xc00
 8003a82:	687b      	ldr	r3, [r7, #4]
 8003a84:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8003a86:	496a      	ldr	r1, [pc, #424]	; (8003c30 <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 8003a88:	4313      	orrs	r3, r2
 8003a8a:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
 8003a8e:	687b      	ldr	r3, [r7, #4]
 8003a90:	681b      	ldr	r3, [r3, #0]
 8003a92:	f403 7300 	and.w	r3, r3, #512	; 0x200
 8003a96:	2b00      	cmp	r3, #0
 8003a98:	d00a      	beq.n	8003ab0 <HAL_RCCEx_PeriphCLKConfig+0x36c>
 8003a9a:	4b65      	ldr	r3, [pc, #404]	; (8003c30 <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 8003a9c:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8003aa0:	f423 2240 	bic.w	r2, r3, #786432	; 0xc0000
 8003aa4:	687b      	ldr	r3, [r7, #4]
 8003aa6:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8003aa8:	4961      	ldr	r1, [pc, #388]	; (8003c30 <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 8003aaa:	4313      	orrs	r3, r2
 8003aac:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
 8003ab0:	687b      	ldr	r3, [r7, #4]
 8003ab2:	681b      	ldr	r3, [r3, #0]
 8003ab4:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8003ab8:	2b00      	cmp	r3, #0
 8003aba:	d00a      	beq.n	8003ad2 <HAL_RCCEx_PeriphCLKConfig+0x38e>
 8003abc:	4b5c      	ldr	r3, [pc, #368]	; (8003c30 <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 8003abe:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8003ac2:	f423 1240 	bic.w	r2, r3, #3145728	; 0x300000
 8003ac6:	687b      	ldr	r3, [r7, #4]
 8003ac8:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8003aca:	4959      	ldr	r1, [pc, #356]	; (8003c30 <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 8003acc:	4313      	orrs	r3, r2
 8003ace:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
 8003ad2:	687b      	ldr	r3, [r7, #4]
 8003ad4:	681b      	ldr	r3, [r3, #0]
 8003ad6:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8003ada:	2b00      	cmp	r3, #0
 8003adc:	d00a      	beq.n	8003af4 <HAL_RCCEx_PeriphCLKConfig+0x3b0>
 8003ade:	4b54      	ldr	r3, [pc, #336]	; (8003c30 <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 8003ae0:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8003ae4:	f423 5240 	bic.w	r2, r3, #12288	; 0x3000
 8003ae8:	687b      	ldr	r3, [r7, #4]
 8003aea:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8003aec:	4950      	ldr	r1, [pc, #320]	; (8003c30 <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 8003aee:	4313      	orrs	r3, r2
 8003af0:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
 8003af4:	687b      	ldr	r3, [r7, #4]
 8003af6:	681b      	ldr	r3, [r3, #0]
 8003af8:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8003afc:	2b00      	cmp	r3, #0
 8003afe:	d00a      	beq.n	8003b16 <HAL_RCCEx_PeriphCLKConfig+0x3d2>
 8003b00:	4b4b      	ldr	r3, [pc, #300]	; (8003c30 <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 8003b02:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8003b06:	f423 4240 	bic.w	r2, r3, #49152	; 0xc000
 8003b0a:	687b      	ldr	r3, [r7, #4]
 8003b0c:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8003b0e:	4948      	ldr	r1, [pc, #288]	; (8003c30 <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 8003b10:	4313      	orrs	r3, r2
 8003b12:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
 8003b16:	687b      	ldr	r3, [r7, #4]
 8003b18:	681b      	ldr	r3, [r3, #0]
 8003b1a:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8003b1e:	2b00      	cmp	r3, #0
 8003b20:	d00a      	beq.n	8003b38 <HAL_RCCEx_PeriphCLKConfig+0x3f4>
 8003b22:	4b43      	ldr	r3, [pc, #268]	; (8003c30 <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 8003b24:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8003b28:	f423 3240 	bic.w	r2, r3, #196608	; 0x30000
 8003b2c:	687b      	ldr	r3, [r7, #4]
 8003b2e:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8003b30:	493f      	ldr	r1, [pc, #252]	; (8003c30 <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 8003b32:	4313      	orrs	r3, r2
 8003b34:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
 8003b38:	687b      	ldr	r3, [r7, #4]
 8003b3a:	681b      	ldr	r3, [r3, #0]
 8003b3c:	f403 5300 	and.w	r3, r3, #8192	; 0x2000
 8003b40:	2b00      	cmp	r3, #0
 8003b42:	d028      	beq.n	8003b96 <HAL_RCCEx_PeriphCLKConfig+0x452>
 8003b44:	4b3a      	ldr	r3, [pc, #232]	; (8003c30 <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 8003b46:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8003b4a:	f023 6240 	bic.w	r2, r3, #201326592	; 0xc000000
 8003b4e:	687b      	ldr	r3, [r7, #4]
 8003b50:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8003b52:	4937      	ldr	r1, [pc, #220]	; (8003c30 <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 8003b54:	4313      	orrs	r3, r2
 8003b56:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
 8003b5a:	687b      	ldr	r3, [r7, #4]
 8003b5c:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8003b5e:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
 8003b62:	d106      	bne.n	8003b72 <HAL_RCCEx_PeriphCLKConfig+0x42e>
 8003b64:	4b32      	ldr	r3, [pc, #200]	; (8003c30 <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 8003b66:	68db      	ldr	r3, [r3, #12]
 8003b68:	4a31      	ldr	r2, [pc, #196]	; (8003c30 <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 8003b6a:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8003b6e:	60d3      	str	r3, [r2, #12]
 8003b70:	e011      	b.n	8003b96 <HAL_RCCEx_PeriphCLKConfig+0x452>
 8003b72:	687b      	ldr	r3, [r7, #4]
 8003b74:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8003b76:	f1b3 6f80 	cmp.w	r3, #67108864	; 0x4000000
 8003b7a:	d10c      	bne.n	8003b96 <HAL_RCCEx_PeriphCLKConfig+0x452>
 8003b7c:	687b      	ldr	r3, [r7, #4]
 8003b7e:	3304      	adds	r3, #4
 8003b80:	2101      	movs	r1, #1
 8003b82:	4618      	mov	r0, r3
 8003b84:	f000 f8c8 	bl	8003d18 <RCCEx_PLLSAI1_Config>
 8003b88:	4603      	mov	r3, r0
 8003b8a:	74fb      	strb	r3, [r7, #19]
 8003b8c:	7cfb      	ldrb	r3, [r7, #19]
 8003b8e:	2b00      	cmp	r3, #0
 8003b90:	d001      	beq.n	8003b96 <HAL_RCCEx_PeriphCLKConfig+0x452>
 8003b92:	7cfb      	ldrb	r3, [r7, #19]
 8003b94:	74bb      	strb	r3, [r7, #18]
 8003b96:	687b      	ldr	r3, [r7, #4]
 8003b98:	681b      	ldr	r3, [r3, #0]
 8003b9a:	f403 2300 	and.w	r3, r3, #524288	; 0x80000
 8003b9e:	2b00      	cmp	r3, #0
 8003ba0:	d028      	beq.n	8003bf4 <HAL_RCCEx_PeriphCLKConfig+0x4b0>
 8003ba2:	4b23      	ldr	r3, [pc, #140]	; (8003c30 <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 8003ba4:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8003ba8:	f023 6240 	bic.w	r2, r3, #201326592	; 0xc000000
 8003bac:	687b      	ldr	r3, [r7, #4]
 8003bae:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8003bb0:	491f      	ldr	r1, [pc, #124]	; (8003c30 <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 8003bb2:	4313      	orrs	r3, r2
 8003bb4:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
 8003bb8:	687b      	ldr	r3, [r7, #4]
 8003bba:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8003bbc:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
 8003bc0:	d106      	bne.n	8003bd0 <HAL_RCCEx_PeriphCLKConfig+0x48c>
 8003bc2:	4b1b      	ldr	r3, [pc, #108]	; (8003c30 <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 8003bc4:	68db      	ldr	r3, [r3, #12]
 8003bc6:	4a1a      	ldr	r2, [pc, #104]	; (8003c30 <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 8003bc8:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8003bcc:	60d3      	str	r3, [r2, #12]
 8003bce:	e011      	b.n	8003bf4 <HAL_RCCEx_PeriphCLKConfig+0x4b0>
 8003bd0:	687b      	ldr	r3, [r7, #4]
 8003bd2:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8003bd4:	f1b3 6f80 	cmp.w	r3, #67108864	; 0x4000000
 8003bd8:	d10c      	bne.n	8003bf4 <HAL_RCCEx_PeriphCLKConfig+0x4b0>
 8003bda:	687b      	ldr	r3, [r7, #4]
 8003bdc:	3304      	adds	r3, #4
 8003bde:	2101      	movs	r1, #1
 8003be0:	4618      	mov	r0, r3
 8003be2:	f000 f899 	bl	8003d18 <RCCEx_PLLSAI1_Config>
 8003be6:	4603      	mov	r3, r0
 8003be8:	74fb      	strb	r3, [r7, #19]
 8003bea:	7cfb      	ldrb	r3, [r7, #19]
 8003bec:	2b00      	cmp	r3, #0
 8003bee:	d001      	beq.n	8003bf4 <HAL_RCCEx_PeriphCLKConfig+0x4b0>
 8003bf0:	7cfb      	ldrb	r3, [r7, #19]
 8003bf2:	74bb      	strb	r3, [r7, #18]
 8003bf4:	687b      	ldr	r3, [r7, #4]
 8003bf6:	681b      	ldr	r3, [r3, #0]
 8003bf8:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 8003bfc:	2b00      	cmp	r3, #0
 8003bfe:	d02b      	beq.n	8003c58 <HAL_RCCEx_PeriphCLKConfig+0x514>
 8003c00:	4b0b      	ldr	r3, [pc, #44]	; (8003c30 <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 8003c02:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8003c06:	f023 6240 	bic.w	r2, r3, #201326592	; 0xc000000
 8003c0a:	687b      	ldr	r3, [r7, #4]
 8003c0c:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8003c0e:	4908      	ldr	r1, [pc, #32]	; (8003c30 <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 8003c10:	4313      	orrs	r3, r2
 8003c12:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
 8003c16:	687b      	ldr	r3, [r7, #4]
 8003c18:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8003c1a:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
 8003c1e:	d109      	bne.n	8003c34 <HAL_RCCEx_PeriphCLKConfig+0x4f0>
 8003c20:	4b03      	ldr	r3, [pc, #12]	; (8003c30 <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 8003c22:	68db      	ldr	r3, [r3, #12]
 8003c24:	4a02      	ldr	r2, [pc, #8]	; (8003c30 <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 8003c26:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8003c2a:	60d3      	str	r3, [r2, #12]
 8003c2c:	e014      	b.n	8003c58 <HAL_RCCEx_PeriphCLKConfig+0x514>
 8003c2e:	bf00      	nop
 8003c30:	40021000 	.word	0x40021000
 8003c34:	687b      	ldr	r3, [r7, #4]
 8003c36:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8003c38:	f1b3 6f80 	cmp.w	r3, #67108864	; 0x4000000
 8003c3c:	d10c      	bne.n	8003c58 <HAL_RCCEx_PeriphCLKConfig+0x514>
 8003c3e:	687b      	ldr	r3, [r7, #4]
 8003c40:	3304      	adds	r3, #4
 8003c42:	2101      	movs	r1, #1
 8003c44:	4618      	mov	r0, r3
 8003c46:	f000 f867 	bl	8003d18 <RCCEx_PLLSAI1_Config>
 8003c4a:	4603      	mov	r3, r0
 8003c4c:	74fb      	strb	r3, [r7, #19]
 8003c4e:	7cfb      	ldrb	r3, [r7, #19]
 8003c50:	2b00      	cmp	r3, #0
 8003c52:	d001      	beq.n	8003c58 <HAL_RCCEx_PeriphCLKConfig+0x514>
 8003c54:	7cfb      	ldrb	r3, [r7, #19]
 8003c56:	74bb      	strb	r3, [r7, #18]
 8003c58:	687b      	ldr	r3, [r7, #4]
 8003c5a:	681b      	ldr	r3, [r3, #0]
 8003c5c:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8003c60:	2b00      	cmp	r3, #0
 8003c62:	d02f      	beq.n	8003cc4 <HAL_RCCEx_PeriphCLKConfig+0x580>
 8003c64:	4b2b      	ldr	r3, [pc, #172]	; (8003d14 <HAL_RCCEx_PeriphCLKConfig+0x5d0>)
 8003c66:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8003c6a:	f023 5240 	bic.w	r2, r3, #805306368	; 0x30000000
 8003c6e:	687b      	ldr	r3, [r7, #4]
 8003c70:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 8003c72:	4928      	ldr	r1, [pc, #160]	; (8003d14 <HAL_RCCEx_PeriphCLKConfig+0x5d0>)
 8003c74:	4313      	orrs	r3, r2
 8003c76:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
 8003c7a:	687b      	ldr	r3, [r7, #4]
 8003c7c:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 8003c7e:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
 8003c82:	d10d      	bne.n	8003ca0 <HAL_RCCEx_PeriphCLKConfig+0x55c>
 8003c84:	687b      	ldr	r3, [r7, #4]
 8003c86:	3304      	adds	r3, #4
 8003c88:	2102      	movs	r1, #2
 8003c8a:	4618      	mov	r0, r3
 8003c8c:	f000 f844 	bl	8003d18 <RCCEx_PLLSAI1_Config>
 8003c90:	4603      	mov	r3, r0
 8003c92:	74fb      	strb	r3, [r7, #19]
 8003c94:	7cfb      	ldrb	r3, [r7, #19]
 8003c96:	2b00      	cmp	r3, #0
 8003c98:	d014      	beq.n	8003cc4 <HAL_RCCEx_PeriphCLKConfig+0x580>
 8003c9a:	7cfb      	ldrb	r3, [r7, #19]
 8003c9c:	74bb      	strb	r3, [r7, #18]
 8003c9e:	e011      	b.n	8003cc4 <HAL_RCCEx_PeriphCLKConfig+0x580>
 8003ca0:	687b      	ldr	r3, [r7, #4]
 8003ca2:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 8003ca4:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 8003ca8:	d10c      	bne.n	8003cc4 <HAL_RCCEx_PeriphCLKConfig+0x580>
 8003caa:	687b      	ldr	r3, [r7, #4]
 8003cac:	3320      	adds	r3, #32
 8003cae:	2102      	movs	r1, #2
 8003cb0:	4618      	mov	r0, r3
 8003cb2:	f000 f925 	bl	8003f00 <RCCEx_PLLSAI2_Config>
 8003cb6:	4603      	mov	r3, r0
 8003cb8:	74fb      	strb	r3, [r7, #19]
 8003cba:	7cfb      	ldrb	r3, [r7, #19]
 8003cbc:	2b00      	cmp	r3, #0
 8003cbe:	d001      	beq.n	8003cc4 <HAL_RCCEx_PeriphCLKConfig+0x580>
 8003cc0:	7cfb      	ldrb	r3, [r7, #19]
 8003cc2:	74bb      	strb	r3, [r7, #18]
 8003cc4:	687b      	ldr	r3, [r7, #4]
 8003cc6:	681b      	ldr	r3, [r3, #0]
 8003cc8:	f403 4300 	and.w	r3, r3, #32768	; 0x8000
 8003ccc:	2b00      	cmp	r3, #0
 8003cce:	d00a      	beq.n	8003ce6 <HAL_RCCEx_PeriphCLKConfig+0x5a2>
 8003cd0:	4b10      	ldr	r3, [pc, #64]	; (8003d14 <HAL_RCCEx_PeriphCLKConfig+0x5d0>)
 8003cd2:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8003cd6:	f023 4280 	bic.w	r2, r3, #1073741824	; 0x40000000
 8003cda:	687b      	ldr	r3, [r7, #4]
 8003cdc:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8003cde:	490d      	ldr	r1, [pc, #52]	; (8003d14 <HAL_RCCEx_PeriphCLKConfig+0x5d0>)
 8003ce0:	4313      	orrs	r3, r2
 8003ce2:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
 8003ce6:	687b      	ldr	r3, [r7, #4]
 8003ce8:	681b      	ldr	r3, [r3, #0]
 8003cea:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8003cee:	2b00      	cmp	r3, #0
 8003cf0:	d00b      	beq.n	8003d0a <HAL_RCCEx_PeriphCLKConfig+0x5c6>
 8003cf2:	4b08      	ldr	r3, [pc, #32]	; (8003d14 <HAL_RCCEx_PeriphCLKConfig+0x5d0>)
 8003cf4:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8003cf8:	f023 4200 	bic.w	r2, r3, #2147483648	; 0x80000000
 8003cfc:	687b      	ldr	r3, [r7, #4]
 8003cfe:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8003d02:	4904      	ldr	r1, [pc, #16]	; (8003d14 <HAL_RCCEx_PeriphCLKConfig+0x5d0>)
 8003d04:	4313      	orrs	r3, r2
 8003d06:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
 8003d0a:	7cbb      	ldrb	r3, [r7, #18]
 8003d0c:	4618      	mov	r0, r3
 8003d0e:	3718      	adds	r7, #24
 8003d10:	46bd      	mov	sp, r7
 8003d12:	bd80      	pop	{r7, pc}
 8003d14:	40021000 	.word	0x40021000

08003d18 <RCCEx_PLLSAI1_Config>:
 8003d18:	b580      	push	{r7, lr}
 8003d1a:	b084      	sub	sp, #16
 8003d1c:	af00      	add	r7, sp, #0
 8003d1e:	6078      	str	r0, [r7, #4]
 8003d20:	6039      	str	r1, [r7, #0]
 8003d22:	2300      	movs	r3, #0
 8003d24:	73fb      	strb	r3, [r7, #15]
 8003d26:	4b75      	ldr	r3, [pc, #468]	; (8003efc <RCCEx_PLLSAI1_Config+0x1e4>)
 8003d28:	68db      	ldr	r3, [r3, #12]
 8003d2a:	f003 0303 	and.w	r3, r3, #3
 8003d2e:	2b00      	cmp	r3, #0
 8003d30:	d018      	beq.n	8003d64 <RCCEx_PLLSAI1_Config+0x4c>
 8003d32:	4b72      	ldr	r3, [pc, #456]	; (8003efc <RCCEx_PLLSAI1_Config+0x1e4>)
 8003d34:	68db      	ldr	r3, [r3, #12]
 8003d36:	f003 0203 	and.w	r2, r3, #3
 8003d3a:	687b      	ldr	r3, [r7, #4]
 8003d3c:	681b      	ldr	r3, [r3, #0]
 8003d3e:	429a      	cmp	r2, r3
 8003d40:	d10d      	bne.n	8003d5e <RCCEx_PLLSAI1_Config+0x46>
 8003d42:	687b      	ldr	r3, [r7, #4]
 8003d44:	681b      	ldr	r3, [r3, #0]
 8003d46:	2b00      	cmp	r3, #0
 8003d48:	d009      	beq.n	8003d5e <RCCEx_PLLSAI1_Config+0x46>
 8003d4a:	4b6c      	ldr	r3, [pc, #432]	; (8003efc <RCCEx_PLLSAI1_Config+0x1e4>)
 8003d4c:	68db      	ldr	r3, [r3, #12]
 8003d4e:	091b      	lsrs	r3, r3, #4
 8003d50:	f003 0307 	and.w	r3, r3, #7
 8003d54:	1c5a      	adds	r2, r3, #1
 8003d56:	687b      	ldr	r3, [r7, #4]
 8003d58:	685b      	ldr	r3, [r3, #4]
 8003d5a:	429a      	cmp	r2, r3
 8003d5c:	d047      	beq.n	8003dee <RCCEx_PLLSAI1_Config+0xd6>
 8003d5e:	2301      	movs	r3, #1
 8003d60:	73fb      	strb	r3, [r7, #15]
 8003d62:	e044      	b.n	8003dee <RCCEx_PLLSAI1_Config+0xd6>
 8003d64:	687b      	ldr	r3, [r7, #4]
 8003d66:	681b      	ldr	r3, [r3, #0]
 8003d68:	2b03      	cmp	r3, #3
 8003d6a:	d018      	beq.n	8003d9e <RCCEx_PLLSAI1_Config+0x86>
 8003d6c:	2b03      	cmp	r3, #3
 8003d6e:	d825      	bhi.n	8003dbc <RCCEx_PLLSAI1_Config+0xa4>
 8003d70:	2b01      	cmp	r3, #1
 8003d72:	d002      	beq.n	8003d7a <RCCEx_PLLSAI1_Config+0x62>
 8003d74:	2b02      	cmp	r3, #2
 8003d76:	d009      	beq.n	8003d8c <RCCEx_PLLSAI1_Config+0x74>
 8003d78:	e020      	b.n	8003dbc <RCCEx_PLLSAI1_Config+0xa4>
 8003d7a:	4b60      	ldr	r3, [pc, #384]	; (8003efc <RCCEx_PLLSAI1_Config+0x1e4>)
 8003d7c:	681b      	ldr	r3, [r3, #0]
 8003d7e:	f003 0302 	and.w	r3, r3, #2
 8003d82:	2b00      	cmp	r3, #0
 8003d84:	d11d      	bne.n	8003dc2 <RCCEx_PLLSAI1_Config+0xaa>
 8003d86:	2301      	movs	r3, #1
 8003d88:	73fb      	strb	r3, [r7, #15]
 8003d8a:	e01a      	b.n	8003dc2 <RCCEx_PLLSAI1_Config+0xaa>
 8003d8c:	4b5b      	ldr	r3, [pc, #364]	; (8003efc <RCCEx_PLLSAI1_Config+0x1e4>)
 8003d8e:	681b      	ldr	r3, [r3, #0]
 8003d90:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8003d94:	2b00      	cmp	r3, #0
 8003d96:	d116      	bne.n	8003dc6 <RCCEx_PLLSAI1_Config+0xae>
 8003d98:	2301      	movs	r3, #1
 8003d9a:	73fb      	strb	r3, [r7, #15]
 8003d9c:	e013      	b.n	8003dc6 <RCCEx_PLLSAI1_Config+0xae>
 8003d9e:	4b57      	ldr	r3, [pc, #348]	; (8003efc <RCCEx_PLLSAI1_Config+0x1e4>)
 8003da0:	681b      	ldr	r3, [r3, #0]
 8003da2:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8003da6:	2b00      	cmp	r3, #0
 8003da8:	d10f      	bne.n	8003dca <RCCEx_PLLSAI1_Config+0xb2>
 8003daa:	4b54      	ldr	r3, [pc, #336]	; (8003efc <RCCEx_PLLSAI1_Config+0x1e4>)
 8003dac:	681b      	ldr	r3, [r3, #0]
 8003dae:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 8003db2:	2b00      	cmp	r3, #0
 8003db4:	d109      	bne.n	8003dca <RCCEx_PLLSAI1_Config+0xb2>
 8003db6:	2301      	movs	r3, #1
 8003db8:	73fb      	strb	r3, [r7, #15]
 8003dba:	e006      	b.n	8003dca <RCCEx_PLLSAI1_Config+0xb2>
 8003dbc:	2301      	movs	r3, #1
 8003dbe:	73fb      	strb	r3, [r7, #15]
 8003dc0:	e004      	b.n	8003dcc <RCCEx_PLLSAI1_Config+0xb4>
 8003dc2:	bf00      	nop
 8003dc4:	e002      	b.n	8003dcc <RCCEx_PLLSAI1_Config+0xb4>
 8003dc6:	bf00      	nop
 8003dc8:	e000      	b.n	8003dcc <RCCEx_PLLSAI1_Config+0xb4>
 8003dca:	bf00      	nop
 8003dcc:	7bfb      	ldrb	r3, [r7, #15]
 8003dce:	2b00      	cmp	r3, #0
 8003dd0:	d10d      	bne.n	8003dee <RCCEx_PLLSAI1_Config+0xd6>
 8003dd2:	4b4a      	ldr	r3, [pc, #296]	; (8003efc <RCCEx_PLLSAI1_Config+0x1e4>)
 8003dd4:	68db      	ldr	r3, [r3, #12]
 8003dd6:	f023 0273 	bic.w	r2, r3, #115	; 0x73
 8003dda:	687b      	ldr	r3, [r7, #4]
 8003ddc:	6819      	ldr	r1, [r3, #0]
 8003dde:	687b      	ldr	r3, [r7, #4]
 8003de0:	685b      	ldr	r3, [r3, #4]
 8003de2:	3b01      	subs	r3, #1
 8003de4:	011b      	lsls	r3, r3, #4
 8003de6:	430b      	orrs	r3, r1
 8003de8:	4944      	ldr	r1, [pc, #272]	; (8003efc <RCCEx_PLLSAI1_Config+0x1e4>)
 8003dea:	4313      	orrs	r3, r2
 8003dec:	60cb      	str	r3, [r1, #12]
 8003dee:	7bfb      	ldrb	r3, [r7, #15]
 8003df0:	2b00      	cmp	r3, #0
 8003df2:	d17d      	bne.n	8003ef0 <RCCEx_PLLSAI1_Config+0x1d8>
 8003df4:	4b41      	ldr	r3, [pc, #260]	; (8003efc <RCCEx_PLLSAI1_Config+0x1e4>)
 8003df6:	681b      	ldr	r3, [r3, #0]
 8003df8:	4a40      	ldr	r2, [pc, #256]	; (8003efc <RCCEx_PLLSAI1_Config+0x1e4>)
 8003dfa:	f023 6380 	bic.w	r3, r3, #67108864	; 0x4000000
 8003dfe:	6013      	str	r3, [r2, #0]
 8003e00:	f7fd fc92 	bl	8001728 <HAL_GetTick>
 8003e04:	60b8      	str	r0, [r7, #8]
 8003e06:	e009      	b.n	8003e1c <RCCEx_PLLSAI1_Config+0x104>
 8003e08:	f7fd fc8e 	bl	8001728 <HAL_GetTick>
 8003e0c:	4602      	mov	r2, r0
 8003e0e:	68bb      	ldr	r3, [r7, #8]
 8003e10:	1ad3      	subs	r3, r2, r3
 8003e12:	2b02      	cmp	r3, #2
 8003e14:	d902      	bls.n	8003e1c <RCCEx_PLLSAI1_Config+0x104>
 8003e16:	2303      	movs	r3, #3
 8003e18:	73fb      	strb	r3, [r7, #15]
 8003e1a:	e005      	b.n	8003e28 <RCCEx_PLLSAI1_Config+0x110>
 8003e1c:	4b37      	ldr	r3, [pc, #220]	; (8003efc <RCCEx_PLLSAI1_Config+0x1e4>)
 8003e1e:	681b      	ldr	r3, [r3, #0]
 8003e20:	f003 6300 	and.w	r3, r3, #134217728	; 0x8000000
 8003e24:	2b00      	cmp	r3, #0
 8003e26:	d1ef      	bne.n	8003e08 <RCCEx_PLLSAI1_Config+0xf0>
 8003e28:	7bfb      	ldrb	r3, [r7, #15]
 8003e2a:	2b00      	cmp	r3, #0
 8003e2c:	d160      	bne.n	8003ef0 <RCCEx_PLLSAI1_Config+0x1d8>
 8003e2e:	683b      	ldr	r3, [r7, #0]
 8003e30:	2b00      	cmp	r3, #0
 8003e32:	d111      	bne.n	8003e58 <RCCEx_PLLSAI1_Config+0x140>
 8003e34:	4b31      	ldr	r3, [pc, #196]	; (8003efc <RCCEx_PLLSAI1_Config+0x1e4>)
 8003e36:	691b      	ldr	r3, [r3, #16]
 8003e38:	f423 331f 	bic.w	r3, r3, #162816	; 0x27c00
 8003e3c:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8003e40:	687a      	ldr	r2, [r7, #4]
 8003e42:	6892      	ldr	r2, [r2, #8]
 8003e44:	0211      	lsls	r1, r2, #8
 8003e46:	687a      	ldr	r2, [r7, #4]
 8003e48:	68d2      	ldr	r2, [r2, #12]
 8003e4a:	0912      	lsrs	r2, r2, #4
 8003e4c:	0452      	lsls	r2, r2, #17
 8003e4e:	430a      	orrs	r2, r1
 8003e50:	492a      	ldr	r1, [pc, #168]	; (8003efc <RCCEx_PLLSAI1_Config+0x1e4>)
 8003e52:	4313      	orrs	r3, r2
 8003e54:	610b      	str	r3, [r1, #16]
 8003e56:	e027      	b.n	8003ea8 <RCCEx_PLLSAI1_Config+0x190>
 8003e58:	683b      	ldr	r3, [r7, #0]
 8003e5a:	2b01      	cmp	r3, #1
 8003e5c:	d112      	bne.n	8003e84 <RCCEx_PLLSAI1_Config+0x16c>
 8003e5e:	4b27      	ldr	r3, [pc, #156]	; (8003efc <RCCEx_PLLSAI1_Config+0x1e4>)
 8003e60:	691b      	ldr	r3, [r3, #16]
 8003e62:	f423 03c0 	bic.w	r3, r3, #6291456	; 0x600000
 8003e66:	f423 43fe 	bic.w	r3, r3, #32512	; 0x7f00
 8003e6a:	687a      	ldr	r2, [r7, #4]
 8003e6c:	6892      	ldr	r2, [r2, #8]
 8003e6e:	0211      	lsls	r1, r2, #8
 8003e70:	687a      	ldr	r2, [r7, #4]
 8003e72:	6912      	ldr	r2, [r2, #16]
 8003e74:	0852      	lsrs	r2, r2, #1
 8003e76:	3a01      	subs	r2, #1
 8003e78:	0552      	lsls	r2, r2, #21
 8003e7a:	430a      	orrs	r2, r1
 8003e7c:	491f      	ldr	r1, [pc, #124]	; (8003efc <RCCEx_PLLSAI1_Config+0x1e4>)
 8003e7e:	4313      	orrs	r3, r2
 8003e80:	610b      	str	r3, [r1, #16]
 8003e82:	e011      	b.n	8003ea8 <RCCEx_PLLSAI1_Config+0x190>
 8003e84:	4b1d      	ldr	r3, [pc, #116]	; (8003efc <RCCEx_PLLSAI1_Config+0x1e4>)
 8003e86:	691b      	ldr	r3, [r3, #16]
 8003e88:	f023 63c0 	bic.w	r3, r3, #100663296	; 0x6000000
 8003e8c:	f423 43fe 	bic.w	r3, r3, #32512	; 0x7f00
 8003e90:	687a      	ldr	r2, [r7, #4]
 8003e92:	6892      	ldr	r2, [r2, #8]
 8003e94:	0211      	lsls	r1, r2, #8
 8003e96:	687a      	ldr	r2, [r7, #4]
 8003e98:	6952      	ldr	r2, [r2, #20]
 8003e9a:	0852      	lsrs	r2, r2, #1
 8003e9c:	3a01      	subs	r2, #1
 8003e9e:	0652      	lsls	r2, r2, #25
 8003ea0:	430a      	orrs	r2, r1
 8003ea2:	4916      	ldr	r1, [pc, #88]	; (8003efc <RCCEx_PLLSAI1_Config+0x1e4>)
 8003ea4:	4313      	orrs	r3, r2
 8003ea6:	610b      	str	r3, [r1, #16]
 8003ea8:	4b14      	ldr	r3, [pc, #80]	; (8003efc <RCCEx_PLLSAI1_Config+0x1e4>)
 8003eaa:	681b      	ldr	r3, [r3, #0]
 8003eac:	4a13      	ldr	r2, [pc, #76]	; (8003efc <RCCEx_PLLSAI1_Config+0x1e4>)
 8003eae:	f043 6380 	orr.w	r3, r3, #67108864	; 0x4000000
 8003eb2:	6013      	str	r3, [r2, #0]
 8003eb4:	f7fd fc38 	bl	8001728 <HAL_GetTick>
 8003eb8:	60b8      	str	r0, [r7, #8]
 8003eba:	e009      	b.n	8003ed0 <RCCEx_PLLSAI1_Config+0x1b8>
 8003ebc:	f7fd fc34 	bl	8001728 <HAL_GetTick>
 8003ec0:	4602      	mov	r2, r0
 8003ec2:	68bb      	ldr	r3, [r7, #8]
 8003ec4:	1ad3      	subs	r3, r2, r3
 8003ec6:	2b02      	cmp	r3, #2
 8003ec8:	d902      	bls.n	8003ed0 <RCCEx_PLLSAI1_Config+0x1b8>
 8003eca:	2303      	movs	r3, #3
 8003ecc:	73fb      	strb	r3, [r7, #15]
 8003ece:	e005      	b.n	8003edc <RCCEx_PLLSAI1_Config+0x1c4>
 8003ed0:	4b0a      	ldr	r3, [pc, #40]	; (8003efc <RCCEx_PLLSAI1_Config+0x1e4>)
 8003ed2:	681b      	ldr	r3, [r3, #0]
 8003ed4:	f003 6300 	and.w	r3, r3, #134217728	; 0x8000000
 8003ed8:	2b00      	cmp	r3, #0
 8003eda:	d0ef      	beq.n	8003ebc <RCCEx_PLLSAI1_Config+0x1a4>
 8003edc:	7bfb      	ldrb	r3, [r7, #15]
 8003ede:	2b00      	cmp	r3, #0
 8003ee0:	d106      	bne.n	8003ef0 <RCCEx_PLLSAI1_Config+0x1d8>
 8003ee2:	4b06      	ldr	r3, [pc, #24]	; (8003efc <RCCEx_PLLSAI1_Config+0x1e4>)
 8003ee4:	691a      	ldr	r2, [r3, #16]
 8003ee6:	687b      	ldr	r3, [r7, #4]
 8003ee8:	699b      	ldr	r3, [r3, #24]
 8003eea:	4904      	ldr	r1, [pc, #16]	; (8003efc <RCCEx_PLLSAI1_Config+0x1e4>)
 8003eec:	4313      	orrs	r3, r2
 8003eee:	610b      	str	r3, [r1, #16]
 8003ef0:	7bfb      	ldrb	r3, [r7, #15]
 8003ef2:	4618      	mov	r0, r3
 8003ef4:	3710      	adds	r7, #16
 8003ef6:	46bd      	mov	sp, r7
 8003ef8:	bd80      	pop	{r7, pc}
 8003efa:	bf00      	nop
 8003efc:	40021000 	.word	0x40021000

08003f00 <RCCEx_PLLSAI2_Config>:
 8003f00:	b580      	push	{r7, lr}
 8003f02:	b084      	sub	sp, #16
 8003f04:	af00      	add	r7, sp, #0
 8003f06:	6078      	str	r0, [r7, #4]
 8003f08:	6039      	str	r1, [r7, #0]
 8003f0a:	2300      	movs	r3, #0
 8003f0c:	73fb      	strb	r3, [r7, #15]
 8003f0e:	4b6a      	ldr	r3, [pc, #424]	; (80040b8 <RCCEx_PLLSAI2_Config+0x1b8>)
 8003f10:	68db      	ldr	r3, [r3, #12]
 8003f12:	f003 0303 	and.w	r3, r3, #3
 8003f16:	2b00      	cmp	r3, #0
 8003f18:	d018      	beq.n	8003f4c <RCCEx_PLLSAI2_Config+0x4c>
 8003f1a:	4b67      	ldr	r3, [pc, #412]	; (80040b8 <RCCEx_PLLSAI2_Config+0x1b8>)
 8003f1c:	68db      	ldr	r3, [r3, #12]
 8003f1e:	f003 0203 	and.w	r2, r3, #3
 8003f22:	687b      	ldr	r3, [r7, #4]
 8003f24:	681b      	ldr	r3, [r3, #0]
 8003f26:	429a      	cmp	r2, r3
 8003f28:	d10d      	bne.n	8003f46 <RCCEx_PLLSAI2_Config+0x46>
 8003f2a:	687b      	ldr	r3, [r7, #4]
 8003f2c:	681b      	ldr	r3, [r3, #0]
 8003f2e:	2b00      	cmp	r3, #0
 8003f30:	d009      	beq.n	8003f46 <RCCEx_PLLSAI2_Config+0x46>
 8003f32:	4b61      	ldr	r3, [pc, #388]	; (80040b8 <RCCEx_PLLSAI2_Config+0x1b8>)
 8003f34:	68db      	ldr	r3, [r3, #12]
 8003f36:	091b      	lsrs	r3, r3, #4
 8003f38:	f003 0307 	and.w	r3, r3, #7
 8003f3c:	1c5a      	adds	r2, r3, #1
 8003f3e:	687b      	ldr	r3, [r7, #4]
 8003f40:	685b      	ldr	r3, [r3, #4]
 8003f42:	429a      	cmp	r2, r3
 8003f44:	d047      	beq.n	8003fd6 <RCCEx_PLLSAI2_Config+0xd6>
 8003f46:	2301      	movs	r3, #1
 8003f48:	73fb      	strb	r3, [r7, #15]
 8003f4a:	e044      	b.n	8003fd6 <RCCEx_PLLSAI2_Config+0xd6>
 8003f4c:	687b      	ldr	r3, [r7, #4]
 8003f4e:	681b      	ldr	r3, [r3, #0]
 8003f50:	2b03      	cmp	r3, #3
 8003f52:	d018      	beq.n	8003f86 <RCCEx_PLLSAI2_Config+0x86>
 8003f54:	2b03      	cmp	r3, #3
 8003f56:	d825      	bhi.n	8003fa4 <RCCEx_PLLSAI2_Config+0xa4>
 8003f58:	2b01      	cmp	r3, #1
 8003f5a:	d002      	beq.n	8003f62 <RCCEx_PLLSAI2_Config+0x62>
 8003f5c:	2b02      	cmp	r3, #2
 8003f5e:	d009      	beq.n	8003f74 <RCCEx_PLLSAI2_Config+0x74>
 8003f60:	e020      	b.n	8003fa4 <RCCEx_PLLSAI2_Config+0xa4>
 8003f62:	4b55      	ldr	r3, [pc, #340]	; (80040b8 <RCCEx_PLLSAI2_Config+0x1b8>)
 8003f64:	681b      	ldr	r3, [r3, #0]
 8003f66:	f003 0302 	and.w	r3, r3, #2
 8003f6a:	2b00      	cmp	r3, #0
 8003f6c:	d11d      	bne.n	8003faa <RCCEx_PLLSAI2_Config+0xaa>
 8003f6e:	2301      	movs	r3, #1
 8003f70:	73fb      	strb	r3, [r7, #15]
 8003f72:	e01a      	b.n	8003faa <RCCEx_PLLSAI2_Config+0xaa>
 8003f74:	4b50      	ldr	r3, [pc, #320]	; (80040b8 <RCCEx_PLLSAI2_Config+0x1b8>)
 8003f76:	681b      	ldr	r3, [r3, #0]
 8003f78:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8003f7c:	2b00      	cmp	r3, #0
 8003f7e:	d116      	bne.n	8003fae <RCCEx_PLLSAI2_Config+0xae>
 8003f80:	2301      	movs	r3, #1
 8003f82:	73fb      	strb	r3, [r7, #15]
 8003f84:	e013      	b.n	8003fae <RCCEx_PLLSAI2_Config+0xae>
 8003f86:	4b4c      	ldr	r3, [pc, #304]	; (80040b8 <RCCEx_PLLSAI2_Config+0x1b8>)
 8003f88:	681b      	ldr	r3, [r3, #0]
 8003f8a:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8003f8e:	2b00      	cmp	r3, #0
 8003f90:	d10f      	bne.n	8003fb2 <RCCEx_PLLSAI2_Config+0xb2>
 8003f92:	4b49      	ldr	r3, [pc, #292]	; (80040b8 <RCCEx_PLLSAI2_Config+0x1b8>)
 8003f94:	681b      	ldr	r3, [r3, #0]
 8003f96:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 8003f9a:	2b00      	cmp	r3, #0
 8003f9c:	d109      	bne.n	8003fb2 <RCCEx_PLLSAI2_Config+0xb2>
 8003f9e:	2301      	movs	r3, #1
 8003fa0:	73fb      	strb	r3, [r7, #15]
 8003fa2:	e006      	b.n	8003fb2 <RCCEx_PLLSAI2_Config+0xb2>
 8003fa4:	2301      	movs	r3, #1
 8003fa6:	73fb      	strb	r3, [r7, #15]
 8003fa8:	e004      	b.n	8003fb4 <RCCEx_PLLSAI2_Config+0xb4>
 8003faa:	bf00      	nop
 8003fac:	e002      	b.n	8003fb4 <RCCEx_PLLSAI2_Config+0xb4>
 8003fae:	bf00      	nop
 8003fb0:	e000      	b.n	8003fb4 <RCCEx_PLLSAI2_Config+0xb4>
 8003fb2:	bf00      	nop
 8003fb4:	7bfb      	ldrb	r3, [r7, #15]
 8003fb6:	2b00      	cmp	r3, #0
 8003fb8:	d10d      	bne.n	8003fd6 <RCCEx_PLLSAI2_Config+0xd6>
 8003fba:	4b3f      	ldr	r3, [pc, #252]	; (80040b8 <RCCEx_PLLSAI2_Config+0x1b8>)
 8003fbc:	68db      	ldr	r3, [r3, #12]
 8003fbe:	f023 0273 	bic.w	r2, r3, #115	; 0x73
 8003fc2:	687b      	ldr	r3, [r7, #4]
 8003fc4:	6819      	ldr	r1, [r3, #0]
 8003fc6:	687b      	ldr	r3, [r7, #4]
 8003fc8:	685b      	ldr	r3, [r3, #4]
 8003fca:	3b01      	subs	r3, #1
 8003fcc:	011b      	lsls	r3, r3, #4
 8003fce:	430b      	orrs	r3, r1
 8003fd0:	4939      	ldr	r1, [pc, #228]	; (80040b8 <RCCEx_PLLSAI2_Config+0x1b8>)
 8003fd2:	4313      	orrs	r3, r2
 8003fd4:	60cb      	str	r3, [r1, #12]
 8003fd6:	7bfb      	ldrb	r3, [r7, #15]
 8003fd8:	2b00      	cmp	r3, #0
 8003fda:	d167      	bne.n	80040ac <RCCEx_PLLSAI2_Config+0x1ac>
 8003fdc:	4b36      	ldr	r3, [pc, #216]	; (80040b8 <RCCEx_PLLSAI2_Config+0x1b8>)
 8003fde:	681b      	ldr	r3, [r3, #0]
 8003fe0:	4a35      	ldr	r2, [pc, #212]	; (80040b8 <RCCEx_PLLSAI2_Config+0x1b8>)
 8003fe2:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8003fe6:	6013      	str	r3, [r2, #0]
 8003fe8:	f7fd fb9e 	bl	8001728 <HAL_GetTick>
 8003fec:	60b8      	str	r0, [r7, #8]
 8003fee:	e009      	b.n	8004004 <RCCEx_PLLSAI2_Config+0x104>
 8003ff0:	f7fd fb9a 	bl	8001728 <HAL_GetTick>
 8003ff4:	4602      	mov	r2, r0
 8003ff6:	68bb      	ldr	r3, [r7, #8]
 8003ff8:	1ad3      	subs	r3, r2, r3
 8003ffa:	2b02      	cmp	r3, #2
 8003ffc:	d902      	bls.n	8004004 <RCCEx_PLLSAI2_Config+0x104>
 8003ffe:	2303      	movs	r3, #3
 8004000:	73fb      	strb	r3, [r7, #15]
 8004002:	e005      	b.n	8004010 <RCCEx_PLLSAI2_Config+0x110>
 8004004:	4b2c      	ldr	r3, [pc, #176]	; (80040b8 <RCCEx_PLLSAI2_Config+0x1b8>)
 8004006:	681b      	ldr	r3, [r3, #0]
 8004008:	f003 5300 	and.w	r3, r3, #536870912	; 0x20000000
 800400c:	2b00      	cmp	r3, #0
 800400e:	d1ef      	bne.n	8003ff0 <RCCEx_PLLSAI2_Config+0xf0>
 8004010:	7bfb      	ldrb	r3, [r7, #15]
 8004012:	2b00      	cmp	r3, #0
 8004014:	d14a      	bne.n	80040ac <RCCEx_PLLSAI2_Config+0x1ac>
 8004016:	683b      	ldr	r3, [r7, #0]
 8004018:	2b00      	cmp	r3, #0
 800401a:	d111      	bne.n	8004040 <RCCEx_PLLSAI2_Config+0x140>
 800401c:	4b26      	ldr	r3, [pc, #152]	; (80040b8 <RCCEx_PLLSAI2_Config+0x1b8>)
 800401e:	695b      	ldr	r3, [r3, #20]
 8004020:	f423 331f 	bic.w	r3, r3, #162816	; 0x27c00
 8004024:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8004028:	687a      	ldr	r2, [r7, #4]
 800402a:	6892      	ldr	r2, [r2, #8]
 800402c:	0211      	lsls	r1, r2, #8
 800402e:	687a      	ldr	r2, [r7, #4]
 8004030:	68d2      	ldr	r2, [r2, #12]
 8004032:	0912      	lsrs	r2, r2, #4
 8004034:	0452      	lsls	r2, r2, #17
 8004036:	430a      	orrs	r2, r1
 8004038:	491f      	ldr	r1, [pc, #124]	; (80040b8 <RCCEx_PLLSAI2_Config+0x1b8>)
 800403a:	4313      	orrs	r3, r2
 800403c:	614b      	str	r3, [r1, #20]
 800403e:	e011      	b.n	8004064 <RCCEx_PLLSAI2_Config+0x164>
 8004040:	4b1d      	ldr	r3, [pc, #116]	; (80040b8 <RCCEx_PLLSAI2_Config+0x1b8>)
 8004042:	695b      	ldr	r3, [r3, #20]
 8004044:	f023 63c0 	bic.w	r3, r3, #100663296	; 0x6000000
 8004048:	f423 43fe 	bic.w	r3, r3, #32512	; 0x7f00
 800404c:	687a      	ldr	r2, [r7, #4]
 800404e:	6892      	ldr	r2, [r2, #8]
 8004050:	0211      	lsls	r1, r2, #8
 8004052:	687a      	ldr	r2, [r7, #4]
 8004054:	6912      	ldr	r2, [r2, #16]
 8004056:	0852      	lsrs	r2, r2, #1
 8004058:	3a01      	subs	r2, #1
 800405a:	0652      	lsls	r2, r2, #25
 800405c:	430a      	orrs	r2, r1
 800405e:	4916      	ldr	r1, [pc, #88]	; (80040b8 <RCCEx_PLLSAI2_Config+0x1b8>)
 8004060:	4313      	orrs	r3, r2
 8004062:	614b      	str	r3, [r1, #20]
 8004064:	4b14      	ldr	r3, [pc, #80]	; (80040b8 <RCCEx_PLLSAI2_Config+0x1b8>)
 8004066:	681b      	ldr	r3, [r3, #0]
 8004068:	4a13      	ldr	r2, [pc, #76]	; (80040b8 <RCCEx_PLLSAI2_Config+0x1b8>)
 800406a:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 800406e:	6013      	str	r3, [r2, #0]
 8004070:	f7fd fb5a 	bl	8001728 <HAL_GetTick>
 8004074:	60b8      	str	r0, [r7, #8]
 8004076:	e009      	b.n	800408c <RCCEx_PLLSAI2_Config+0x18c>
 8004078:	f7fd fb56 	bl	8001728 <HAL_GetTick>
 800407c:	4602      	mov	r2, r0
 800407e:	68bb      	ldr	r3, [r7, #8]
 8004080:	1ad3      	subs	r3, r2, r3
 8004082:	2b02      	cmp	r3, #2
 8004084:	d902      	bls.n	800408c <RCCEx_PLLSAI2_Config+0x18c>
 8004086:	2303      	movs	r3, #3
 8004088:	73fb      	strb	r3, [r7, #15]
 800408a:	e005      	b.n	8004098 <RCCEx_PLLSAI2_Config+0x198>
 800408c:	4b0a      	ldr	r3, [pc, #40]	; (80040b8 <RCCEx_PLLSAI2_Config+0x1b8>)
 800408e:	681b      	ldr	r3, [r3, #0]
 8004090:	f003 5300 	and.w	r3, r3, #536870912	; 0x20000000
 8004094:	2b00      	cmp	r3, #0
 8004096:	d0ef      	beq.n	8004078 <RCCEx_PLLSAI2_Config+0x178>
 8004098:	7bfb      	ldrb	r3, [r7, #15]
 800409a:	2b00      	cmp	r3, #0
 800409c:	d106      	bne.n	80040ac <RCCEx_PLLSAI2_Config+0x1ac>
 800409e:	4b06      	ldr	r3, [pc, #24]	; (80040b8 <RCCEx_PLLSAI2_Config+0x1b8>)
 80040a0:	695a      	ldr	r2, [r3, #20]
 80040a2:	687b      	ldr	r3, [r7, #4]
 80040a4:	695b      	ldr	r3, [r3, #20]
 80040a6:	4904      	ldr	r1, [pc, #16]	; (80040b8 <RCCEx_PLLSAI2_Config+0x1b8>)
 80040a8:	4313      	orrs	r3, r2
 80040aa:	614b      	str	r3, [r1, #20]
 80040ac:	7bfb      	ldrb	r3, [r7, #15]
 80040ae:	4618      	mov	r0, r3
 80040b0:	3710      	adds	r7, #16
 80040b2:	46bd      	mov	sp, r7
 80040b4:	bd80      	pop	{r7, pc}
 80040b6:	bf00      	nop
 80040b8:	40021000 	.word	0x40021000

080040bc <HAL_TIM_Base_Init>:
 80040bc:	b580      	push	{r7, lr}
 80040be:	b082      	sub	sp, #8
 80040c0:	af00      	add	r7, sp, #0
 80040c2:	6078      	str	r0, [r7, #4]
 80040c4:	687b      	ldr	r3, [r7, #4]
 80040c6:	2b00      	cmp	r3, #0
 80040c8:	d101      	bne.n	80040ce <HAL_TIM_Base_Init+0x12>
 80040ca:	2301      	movs	r3, #1
 80040cc:	e049      	b.n	8004162 <HAL_TIM_Base_Init+0xa6>
 80040ce:	687b      	ldr	r3, [r7, #4]
 80040d0:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 80040d4:	b2db      	uxtb	r3, r3
 80040d6:	2b00      	cmp	r3, #0
 80040d8:	d106      	bne.n	80040e8 <HAL_TIM_Base_Init+0x2c>
 80040da:	687b      	ldr	r3, [r7, #4]
 80040dc:	2200      	movs	r2, #0
 80040de:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80040e2:	6878      	ldr	r0, [r7, #4]
 80040e4:	f7fd f9da 	bl	800149c <HAL_TIM_Base_MspInit>
 80040e8:	687b      	ldr	r3, [r7, #4]
 80040ea:	2202      	movs	r2, #2
 80040ec:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80040f0:	687b      	ldr	r3, [r7, #4]
 80040f2:	681a      	ldr	r2, [r3, #0]
 80040f4:	687b      	ldr	r3, [r7, #4]
 80040f6:	3304      	adds	r3, #4
 80040f8:	4619      	mov	r1, r3
 80040fa:	4610      	mov	r0, r2
 80040fc:	f000 f836 	bl	800416c <TIM_Base_SetConfig>
 8004100:	687b      	ldr	r3, [r7, #4]
 8004102:	2201      	movs	r2, #1
 8004104:	f883 2048 	strb.w	r2, [r3, #72]	; 0x48
 8004108:	687b      	ldr	r3, [r7, #4]
 800410a:	2201      	movs	r2, #1
 800410c:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8004110:	687b      	ldr	r3, [r7, #4]
 8004112:	2201      	movs	r2, #1
 8004114:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 8004118:	687b      	ldr	r3, [r7, #4]
 800411a:	2201      	movs	r2, #1
 800411c:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8004120:	687b      	ldr	r3, [r7, #4]
 8004122:	2201      	movs	r2, #1
 8004124:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8004128:	687b      	ldr	r3, [r7, #4]
 800412a:	2201      	movs	r2, #1
 800412c:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8004130:	687b      	ldr	r3, [r7, #4]
 8004132:	2201      	movs	r2, #1
 8004134:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 8004138:	687b      	ldr	r3, [r7, #4]
 800413a:	2201      	movs	r2, #1
 800413c:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 8004140:	687b      	ldr	r3, [r7, #4]
 8004142:	2201      	movs	r2, #1
 8004144:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 8004148:	687b      	ldr	r3, [r7, #4]
 800414a:	2201      	movs	r2, #1
 800414c:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
 8004150:	687b      	ldr	r3, [r7, #4]
 8004152:	2201      	movs	r2, #1
 8004154:	f883 2047 	strb.w	r2, [r3, #71]	; 0x47
 8004158:	687b      	ldr	r3, [r7, #4]
 800415a:	2201      	movs	r2, #1
 800415c:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8004160:	2300      	movs	r3, #0
 8004162:	4618      	mov	r0, r3
 8004164:	3708      	adds	r7, #8
 8004166:	46bd      	mov	sp, r7
 8004168:	bd80      	pop	{r7, pc}
	...

0800416c <TIM_Base_SetConfig>:
 800416c:	b480      	push	{r7}
 800416e:	b085      	sub	sp, #20
 8004170:	af00      	add	r7, sp, #0
 8004172:	6078      	str	r0, [r7, #4]
 8004174:	6039      	str	r1, [r7, #0]
 8004176:	687b      	ldr	r3, [r7, #4]
 8004178:	681b      	ldr	r3, [r3, #0]
 800417a:	60fb      	str	r3, [r7, #12]
 800417c:	687b      	ldr	r3, [r7, #4]
 800417e:	4a40      	ldr	r2, [pc, #256]	; (8004280 <TIM_Base_SetConfig+0x114>)
 8004180:	4293      	cmp	r3, r2
 8004182:	d013      	beq.n	80041ac <TIM_Base_SetConfig+0x40>
 8004184:	687b      	ldr	r3, [r7, #4]
 8004186:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800418a:	d00f      	beq.n	80041ac <TIM_Base_SetConfig+0x40>
 800418c:	687b      	ldr	r3, [r7, #4]
 800418e:	4a3d      	ldr	r2, [pc, #244]	; (8004284 <TIM_Base_SetConfig+0x118>)
 8004190:	4293      	cmp	r3, r2
 8004192:	d00b      	beq.n	80041ac <TIM_Base_SetConfig+0x40>
 8004194:	687b      	ldr	r3, [r7, #4]
 8004196:	4a3c      	ldr	r2, [pc, #240]	; (8004288 <TIM_Base_SetConfig+0x11c>)
 8004198:	4293      	cmp	r3, r2
 800419a:	d007      	beq.n	80041ac <TIM_Base_SetConfig+0x40>
 800419c:	687b      	ldr	r3, [r7, #4]
 800419e:	4a3b      	ldr	r2, [pc, #236]	; (800428c <TIM_Base_SetConfig+0x120>)
 80041a0:	4293      	cmp	r3, r2
 80041a2:	d003      	beq.n	80041ac <TIM_Base_SetConfig+0x40>
 80041a4:	687b      	ldr	r3, [r7, #4]
 80041a6:	4a3a      	ldr	r2, [pc, #232]	; (8004290 <TIM_Base_SetConfig+0x124>)
 80041a8:	4293      	cmp	r3, r2
 80041aa:	d108      	bne.n	80041be <TIM_Base_SetConfig+0x52>
 80041ac:	68fb      	ldr	r3, [r7, #12]
 80041ae:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 80041b2:	60fb      	str	r3, [r7, #12]
 80041b4:	683b      	ldr	r3, [r7, #0]
 80041b6:	685b      	ldr	r3, [r3, #4]
 80041b8:	68fa      	ldr	r2, [r7, #12]
 80041ba:	4313      	orrs	r3, r2
 80041bc:	60fb      	str	r3, [r7, #12]
 80041be:	687b      	ldr	r3, [r7, #4]
 80041c0:	4a2f      	ldr	r2, [pc, #188]	; (8004280 <TIM_Base_SetConfig+0x114>)
 80041c2:	4293      	cmp	r3, r2
 80041c4:	d01f      	beq.n	8004206 <TIM_Base_SetConfig+0x9a>
 80041c6:	687b      	ldr	r3, [r7, #4]
 80041c8:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 80041cc:	d01b      	beq.n	8004206 <TIM_Base_SetConfig+0x9a>
 80041ce:	687b      	ldr	r3, [r7, #4]
 80041d0:	4a2c      	ldr	r2, [pc, #176]	; (8004284 <TIM_Base_SetConfig+0x118>)
 80041d2:	4293      	cmp	r3, r2
 80041d4:	d017      	beq.n	8004206 <TIM_Base_SetConfig+0x9a>
 80041d6:	687b      	ldr	r3, [r7, #4]
 80041d8:	4a2b      	ldr	r2, [pc, #172]	; (8004288 <TIM_Base_SetConfig+0x11c>)
 80041da:	4293      	cmp	r3, r2
 80041dc:	d013      	beq.n	8004206 <TIM_Base_SetConfig+0x9a>
 80041de:	687b      	ldr	r3, [r7, #4]
 80041e0:	4a2a      	ldr	r2, [pc, #168]	; (800428c <TIM_Base_SetConfig+0x120>)
 80041e2:	4293      	cmp	r3, r2
 80041e4:	d00f      	beq.n	8004206 <TIM_Base_SetConfig+0x9a>
 80041e6:	687b      	ldr	r3, [r7, #4]
 80041e8:	4a29      	ldr	r2, [pc, #164]	; (8004290 <TIM_Base_SetConfig+0x124>)
 80041ea:	4293      	cmp	r3, r2
 80041ec:	d00b      	beq.n	8004206 <TIM_Base_SetConfig+0x9a>
 80041ee:	687b      	ldr	r3, [r7, #4]
 80041f0:	4a28      	ldr	r2, [pc, #160]	; (8004294 <TIM_Base_SetConfig+0x128>)
 80041f2:	4293      	cmp	r3, r2
 80041f4:	d007      	beq.n	8004206 <TIM_Base_SetConfig+0x9a>
 80041f6:	687b      	ldr	r3, [r7, #4]
 80041f8:	4a27      	ldr	r2, [pc, #156]	; (8004298 <TIM_Base_SetConfig+0x12c>)
 80041fa:	4293      	cmp	r3, r2
 80041fc:	d003      	beq.n	8004206 <TIM_Base_SetConfig+0x9a>
 80041fe:	687b      	ldr	r3, [r7, #4]
 8004200:	4a26      	ldr	r2, [pc, #152]	; (800429c <TIM_Base_SetConfig+0x130>)
 8004202:	4293      	cmp	r3, r2
 8004204:	d108      	bne.n	8004218 <TIM_Base_SetConfig+0xac>
 8004206:	68fb      	ldr	r3, [r7, #12]
 8004208:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 800420c:	60fb      	str	r3, [r7, #12]
 800420e:	683b      	ldr	r3, [r7, #0]
 8004210:	68db      	ldr	r3, [r3, #12]
 8004212:	68fa      	ldr	r2, [r7, #12]
 8004214:	4313      	orrs	r3, r2
 8004216:	60fb      	str	r3, [r7, #12]
 8004218:	68fb      	ldr	r3, [r7, #12]
 800421a:	f023 0280 	bic.w	r2, r3, #128	; 0x80
 800421e:	683b      	ldr	r3, [r7, #0]
 8004220:	695b      	ldr	r3, [r3, #20]
 8004222:	4313      	orrs	r3, r2
 8004224:	60fb      	str	r3, [r7, #12]
 8004226:	687b      	ldr	r3, [r7, #4]
 8004228:	68fa      	ldr	r2, [r7, #12]
 800422a:	601a      	str	r2, [r3, #0]
 800422c:	683b      	ldr	r3, [r7, #0]
 800422e:	689a      	ldr	r2, [r3, #8]
 8004230:	687b      	ldr	r3, [r7, #4]
 8004232:	62da      	str	r2, [r3, #44]	; 0x2c
 8004234:	683b      	ldr	r3, [r7, #0]
 8004236:	681a      	ldr	r2, [r3, #0]
 8004238:	687b      	ldr	r3, [r7, #4]
 800423a:	629a      	str	r2, [r3, #40]	; 0x28
 800423c:	687b      	ldr	r3, [r7, #4]
 800423e:	4a10      	ldr	r2, [pc, #64]	; (8004280 <TIM_Base_SetConfig+0x114>)
 8004240:	4293      	cmp	r3, r2
 8004242:	d00f      	beq.n	8004264 <TIM_Base_SetConfig+0xf8>
 8004244:	687b      	ldr	r3, [r7, #4]
 8004246:	4a12      	ldr	r2, [pc, #72]	; (8004290 <TIM_Base_SetConfig+0x124>)
 8004248:	4293      	cmp	r3, r2
 800424a:	d00b      	beq.n	8004264 <TIM_Base_SetConfig+0xf8>
 800424c:	687b      	ldr	r3, [r7, #4]
 800424e:	4a11      	ldr	r2, [pc, #68]	; (8004294 <TIM_Base_SetConfig+0x128>)
 8004250:	4293      	cmp	r3, r2
 8004252:	d007      	beq.n	8004264 <TIM_Base_SetConfig+0xf8>
 8004254:	687b      	ldr	r3, [r7, #4]
 8004256:	4a10      	ldr	r2, [pc, #64]	; (8004298 <TIM_Base_SetConfig+0x12c>)
 8004258:	4293      	cmp	r3, r2
 800425a:	d003      	beq.n	8004264 <TIM_Base_SetConfig+0xf8>
 800425c:	687b      	ldr	r3, [r7, #4]
 800425e:	4a0f      	ldr	r2, [pc, #60]	; (800429c <TIM_Base_SetConfig+0x130>)
 8004260:	4293      	cmp	r3, r2
 8004262:	d103      	bne.n	800426c <TIM_Base_SetConfig+0x100>
 8004264:	683b      	ldr	r3, [r7, #0]
 8004266:	691a      	ldr	r2, [r3, #16]
 8004268:	687b      	ldr	r3, [r7, #4]
 800426a:	631a      	str	r2, [r3, #48]	; 0x30
 800426c:	687b      	ldr	r3, [r7, #4]
 800426e:	2201      	movs	r2, #1
 8004270:	615a      	str	r2, [r3, #20]
 8004272:	bf00      	nop
 8004274:	3714      	adds	r7, #20
 8004276:	46bd      	mov	sp, r7
 8004278:	f85d 7b04 	ldr.w	r7, [sp], #4
 800427c:	4770      	bx	lr
 800427e:	bf00      	nop
 8004280:	40012c00 	.word	0x40012c00
 8004284:	40000400 	.word	0x40000400
 8004288:	40000800 	.word	0x40000800
 800428c:	40000c00 	.word	0x40000c00
 8004290:	40013400 	.word	0x40013400
 8004294:	40014000 	.word	0x40014000
 8004298:	40014400 	.word	0x40014400
 800429c:	40014800 	.word	0x40014800

080042a0 <HAL_UART_Init>:
 80042a0:	b580      	push	{r7, lr}
 80042a2:	b082      	sub	sp, #8
 80042a4:	af00      	add	r7, sp, #0
 80042a6:	6078      	str	r0, [r7, #4]
 80042a8:	687b      	ldr	r3, [r7, #4]
 80042aa:	2b00      	cmp	r3, #0
 80042ac:	d101      	bne.n	80042b2 <HAL_UART_Init+0x12>
 80042ae:	2301      	movs	r3, #1
 80042b0:	e040      	b.n	8004334 <HAL_UART_Init+0x94>
 80042b2:	687b      	ldr	r3, [r7, #4]
 80042b4:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 80042b6:	2b00      	cmp	r3, #0
 80042b8:	d106      	bne.n	80042c8 <HAL_UART_Init+0x28>
 80042ba:	687b      	ldr	r3, [r7, #4]
 80042bc:	2200      	movs	r2, #0
 80042be:	f883 2078 	strb.w	r2, [r3, #120]	; 0x78
 80042c2:	6878      	ldr	r0, [r7, #4]
 80042c4:	f7fd f93a 	bl	800153c <HAL_UART_MspInit>
 80042c8:	687b      	ldr	r3, [r7, #4]
 80042ca:	2224      	movs	r2, #36	; 0x24
 80042cc:	67da      	str	r2, [r3, #124]	; 0x7c
 80042ce:	687b      	ldr	r3, [r7, #4]
 80042d0:	681b      	ldr	r3, [r3, #0]
 80042d2:	681a      	ldr	r2, [r3, #0]
 80042d4:	687b      	ldr	r3, [r7, #4]
 80042d6:	681b      	ldr	r3, [r3, #0]
 80042d8:	f022 0201 	bic.w	r2, r2, #1
 80042dc:	601a      	str	r2, [r3, #0]
 80042de:	687b      	ldr	r3, [r7, #4]
 80042e0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80042e2:	2b00      	cmp	r3, #0
 80042e4:	d002      	beq.n	80042ec <HAL_UART_Init+0x4c>
 80042e6:	6878      	ldr	r0, [r7, #4]
 80042e8:	f000 fb6a 	bl	80049c0 <UART_AdvFeatureConfig>
 80042ec:	6878      	ldr	r0, [r7, #4]
 80042ee:	f000 f8af 	bl	8004450 <UART_SetConfig>
 80042f2:	4603      	mov	r3, r0
 80042f4:	2b01      	cmp	r3, #1
 80042f6:	d101      	bne.n	80042fc <HAL_UART_Init+0x5c>
 80042f8:	2301      	movs	r3, #1
 80042fa:	e01b      	b.n	8004334 <HAL_UART_Init+0x94>
 80042fc:	687b      	ldr	r3, [r7, #4]
 80042fe:	681b      	ldr	r3, [r3, #0]
 8004300:	685a      	ldr	r2, [r3, #4]
 8004302:	687b      	ldr	r3, [r7, #4]
 8004304:	681b      	ldr	r3, [r3, #0]
 8004306:	f422 4290 	bic.w	r2, r2, #18432	; 0x4800
 800430a:	605a      	str	r2, [r3, #4]
 800430c:	687b      	ldr	r3, [r7, #4]
 800430e:	681b      	ldr	r3, [r3, #0]
 8004310:	689a      	ldr	r2, [r3, #8]
 8004312:	687b      	ldr	r3, [r7, #4]
 8004314:	681b      	ldr	r3, [r3, #0]
 8004316:	f022 022a 	bic.w	r2, r2, #42	; 0x2a
 800431a:	609a      	str	r2, [r3, #8]
 800431c:	687b      	ldr	r3, [r7, #4]
 800431e:	681b      	ldr	r3, [r3, #0]
 8004320:	681a      	ldr	r2, [r3, #0]
 8004322:	687b      	ldr	r3, [r7, #4]
 8004324:	681b      	ldr	r3, [r3, #0]
 8004326:	f042 0201 	orr.w	r2, r2, #1
 800432a:	601a      	str	r2, [r3, #0]
 800432c:	6878      	ldr	r0, [r7, #4]
 800432e:	f000 fbe9 	bl	8004b04 <UART_CheckIdleState>
 8004332:	4603      	mov	r3, r0
 8004334:	4618      	mov	r0, r3
 8004336:	3708      	adds	r7, #8
 8004338:	46bd      	mov	sp, r7
 800433a:	bd80      	pop	{r7, pc}

0800433c <HAL_UART_Transmit>:
 800433c:	b580      	push	{r7, lr}
 800433e:	b08a      	sub	sp, #40	; 0x28
 8004340:	af02      	add	r7, sp, #8
 8004342:	60f8      	str	r0, [r7, #12]
 8004344:	60b9      	str	r1, [r7, #8]
 8004346:	603b      	str	r3, [r7, #0]
 8004348:	4613      	mov	r3, r2
 800434a:	80fb      	strh	r3, [r7, #6]
 800434c:	68fb      	ldr	r3, [r7, #12]
 800434e:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8004350:	2b20      	cmp	r3, #32
 8004352:	d178      	bne.n	8004446 <HAL_UART_Transmit+0x10a>
 8004354:	68bb      	ldr	r3, [r7, #8]
 8004356:	2b00      	cmp	r3, #0
 8004358:	d002      	beq.n	8004360 <HAL_UART_Transmit+0x24>
 800435a:	88fb      	ldrh	r3, [r7, #6]
 800435c:	2b00      	cmp	r3, #0
 800435e:	d101      	bne.n	8004364 <HAL_UART_Transmit+0x28>
 8004360:	2301      	movs	r3, #1
 8004362:	e071      	b.n	8004448 <HAL_UART_Transmit+0x10c>
 8004364:	68fb      	ldr	r3, [r7, #12]
 8004366:	2200      	movs	r2, #0
 8004368:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
 800436c:	68fb      	ldr	r3, [r7, #12]
 800436e:	2221      	movs	r2, #33	; 0x21
 8004370:	67da      	str	r2, [r3, #124]	; 0x7c
 8004372:	f7fd f9d9 	bl	8001728 <HAL_GetTick>
 8004376:	6178      	str	r0, [r7, #20]
 8004378:	68fb      	ldr	r3, [r7, #12]
 800437a:	88fa      	ldrh	r2, [r7, #6]
 800437c:	f8a3 2050 	strh.w	r2, [r3, #80]	; 0x50
 8004380:	68fb      	ldr	r3, [r7, #12]
 8004382:	88fa      	ldrh	r2, [r7, #6]
 8004384:	f8a3 2052 	strh.w	r2, [r3, #82]	; 0x52
 8004388:	68fb      	ldr	r3, [r7, #12]
 800438a:	689b      	ldr	r3, [r3, #8]
 800438c:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8004390:	d108      	bne.n	80043a4 <HAL_UART_Transmit+0x68>
 8004392:	68fb      	ldr	r3, [r7, #12]
 8004394:	691b      	ldr	r3, [r3, #16]
 8004396:	2b00      	cmp	r3, #0
 8004398:	d104      	bne.n	80043a4 <HAL_UART_Transmit+0x68>
 800439a:	2300      	movs	r3, #0
 800439c:	61fb      	str	r3, [r7, #28]
 800439e:	68bb      	ldr	r3, [r7, #8]
 80043a0:	61bb      	str	r3, [r7, #24]
 80043a2:	e003      	b.n	80043ac <HAL_UART_Transmit+0x70>
 80043a4:	68bb      	ldr	r3, [r7, #8]
 80043a6:	61fb      	str	r3, [r7, #28]
 80043a8:	2300      	movs	r3, #0
 80043aa:	61bb      	str	r3, [r7, #24]
 80043ac:	e030      	b.n	8004410 <HAL_UART_Transmit+0xd4>
 80043ae:	683b      	ldr	r3, [r7, #0]
 80043b0:	9300      	str	r3, [sp, #0]
 80043b2:	697b      	ldr	r3, [r7, #20]
 80043b4:	2200      	movs	r2, #0
 80043b6:	2180      	movs	r1, #128	; 0x80
 80043b8:	68f8      	ldr	r0, [r7, #12]
 80043ba:	f000 fc4b 	bl	8004c54 <UART_WaitOnFlagUntilTimeout>
 80043be:	4603      	mov	r3, r0
 80043c0:	2b00      	cmp	r3, #0
 80043c2:	d004      	beq.n	80043ce <HAL_UART_Transmit+0x92>
 80043c4:	68fb      	ldr	r3, [r7, #12]
 80043c6:	2220      	movs	r2, #32
 80043c8:	67da      	str	r2, [r3, #124]	; 0x7c
 80043ca:	2303      	movs	r3, #3
 80043cc:	e03c      	b.n	8004448 <HAL_UART_Transmit+0x10c>
 80043ce:	69fb      	ldr	r3, [r7, #28]
 80043d0:	2b00      	cmp	r3, #0
 80043d2:	d10b      	bne.n	80043ec <HAL_UART_Transmit+0xb0>
 80043d4:	69bb      	ldr	r3, [r7, #24]
 80043d6:	881a      	ldrh	r2, [r3, #0]
 80043d8:	68fb      	ldr	r3, [r7, #12]
 80043da:	681b      	ldr	r3, [r3, #0]
 80043dc:	f3c2 0208 	ubfx	r2, r2, #0, #9
 80043e0:	b292      	uxth	r2, r2
 80043e2:	851a      	strh	r2, [r3, #40]	; 0x28
 80043e4:	69bb      	ldr	r3, [r7, #24]
 80043e6:	3302      	adds	r3, #2
 80043e8:	61bb      	str	r3, [r7, #24]
 80043ea:	e008      	b.n	80043fe <HAL_UART_Transmit+0xc2>
 80043ec:	69fb      	ldr	r3, [r7, #28]
 80043ee:	781a      	ldrb	r2, [r3, #0]
 80043f0:	68fb      	ldr	r3, [r7, #12]
 80043f2:	681b      	ldr	r3, [r3, #0]
 80043f4:	b292      	uxth	r2, r2
 80043f6:	851a      	strh	r2, [r3, #40]	; 0x28
 80043f8:	69fb      	ldr	r3, [r7, #28]
 80043fa:	3301      	adds	r3, #1
 80043fc:	61fb      	str	r3, [r7, #28]
 80043fe:	68fb      	ldr	r3, [r7, #12]
 8004400:	f8b3 3052 	ldrh.w	r3, [r3, #82]	; 0x52
 8004404:	b29b      	uxth	r3, r3
 8004406:	3b01      	subs	r3, #1
 8004408:	b29a      	uxth	r2, r3
 800440a:	68fb      	ldr	r3, [r7, #12]
 800440c:	f8a3 2052 	strh.w	r2, [r3, #82]	; 0x52
 8004410:	68fb      	ldr	r3, [r7, #12]
 8004412:	f8b3 3052 	ldrh.w	r3, [r3, #82]	; 0x52
 8004416:	b29b      	uxth	r3, r3
 8004418:	2b00      	cmp	r3, #0
 800441a:	d1c8      	bne.n	80043ae <HAL_UART_Transmit+0x72>
 800441c:	683b      	ldr	r3, [r7, #0]
 800441e:	9300      	str	r3, [sp, #0]
 8004420:	697b      	ldr	r3, [r7, #20]
 8004422:	2200      	movs	r2, #0
 8004424:	2140      	movs	r1, #64	; 0x40
 8004426:	68f8      	ldr	r0, [r7, #12]
 8004428:	f000 fc14 	bl	8004c54 <UART_WaitOnFlagUntilTimeout>
 800442c:	4603      	mov	r3, r0
 800442e:	2b00      	cmp	r3, #0
 8004430:	d004      	beq.n	800443c <HAL_UART_Transmit+0x100>
 8004432:	68fb      	ldr	r3, [r7, #12]
 8004434:	2220      	movs	r2, #32
 8004436:	67da      	str	r2, [r3, #124]	; 0x7c
 8004438:	2303      	movs	r3, #3
 800443a:	e005      	b.n	8004448 <HAL_UART_Transmit+0x10c>
 800443c:	68fb      	ldr	r3, [r7, #12]
 800443e:	2220      	movs	r2, #32
 8004440:	67da      	str	r2, [r3, #124]	; 0x7c
 8004442:	2300      	movs	r3, #0
 8004444:	e000      	b.n	8004448 <HAL_UART_Transmit+0x10c>
 8004446:	2302      	movs	r3, #2
 8004448:	4618      	mov	r0, r3
 800444a:	3720      	adds	r7, #32
 800444c:	46bd      	mov	sp, r7
 800444e:	bd80      	pop	{r7, pc}

08004450 <UART_SetConfig>:
 8004450:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 8004454:	b08a      	sub	sp, #40	; 0x28
 8004456:	af00      	add	r7, sp, #0
 8004458:	60f8      	str	r0, [r7, #12]
 800445a:	2300      	movs	r3, #0
 800445c:	f887 3022 	strb.w	r3, [r7, #34]	; 0x22
 8004460:	68fb      	ldr	r3, [r7, #12]
 8004462:	689a      	ldr	r2, [r3, #8]
 8004464:	68fb      	ldr	r3, [r7, #12]
 8004466:	691b      	ldr	r3, [r3, #16]
 8004468:	431a      	orrs	r2, r3
 800446a:	68fb      	ldr	r3, [r7, #12]
 800446c:	695b      	ldr	r3, [r3, #20]
 800446e:	431a      	orrs	r2, r3
 8004470:	68fb      	ldr	r3, [r7, #12]
 8004472:	69db      	ldr	r3, [r3, #28]
 8004474:	4313      	orrs	r3, r2
 8004476:	627b      	str	r3, [r7, #36]	; 0x24
 8004478:	68fb      	ldr	r3, [r7, #12]
 800447a:	681b      	ldr	r3, [r3, #0]
 800447c:	681a      	ldr	r2, [r3, #0]
 800447e:	4ba4      	ldr	r3, [pc, #656]	; (8004710 <UART_SetConfig+0x2c0>)
 8004480:	4013      	ands	r3, r2
 8004482:	68fa      	ldr	r2, [r7, #12]
 8004484:	6812      	ldr	r2, [r2, #0]
 8004486:	6a79      	ldr	r1, [r7, #36]	; 0x24
 8004488:	430b      	orrs	r3, r1
 800448a:	6013      	str	r3, [r2, #0]
 800448c:	68fb      	ldr	r3, [r7, #12]
 800448e:	681b      	ldr	r3, [r3, #0]
 8004490:	685b      	ldr	r3, [r3, #4]
 8004492:	f423 5140 	bic.w	r1, r3, #12288	; 0x3000
 8004496:	68fb      	ldr	r3, [r7, #12]
 8004498:	68da      	ldr	r2, [r3, #12]
 800449a:	68fb      	ldr	r3, [r7, #12]
 800449c:	681b      	ldr	r3, [r3, #0]
 800449e:	430a      	orrs	r2, r1
 80044a0:	605a      	str	r2, [r3, #4]
 80044a2:	68fb      	ldr	r3, [r7, #12]
 80044a4:	699b      	ldr	r3, [r3, #24]
 80044a6:	627b      	str	r3, [r7, #36]	; 0x24
 80044a8:	68fb      	ldr	r3, [r7, #12]
 80044aa:	681b      	ldr	r3, [r3, #0]
 80044ac:	4a99      	ldr	r2, [pc, #612]	; (8004714 <UART_SetConfig+0x2c4>)
 80044ae:	4293      	cmp	r3, r2
 80044b0:	d004      	beq.n	80044bc <UART_SetConfig+0x6c>
 80044b2:	68fb      	ldr	r3, [r7, #12]
 80044b4:	6a1b      	ldr	r3, [r3, #32]
 80044b6:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 80044b8:	4313      	orrs	r3, r2
 80044ba:	627b      	str	r3, [r7, #36]	; 0x24
 80044bc:	68fb      	ldr	r3, [r7, #12]
 80044be:	681b      	ldr	r3, [r3, #0]
 80044c0:	689b      	ldr	r3, [r3, #8]
 80044c2:	f423 6130 	bic.w	r1, r3, #2816	; 0xb00
 80044c6:	68fb      	ldr	r3, [r7, #12]
 80044c8:	681b      	ldr	r3, [r3, #0]
 80044ca:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 80044cc:	430a      	orrs	r2, r1
 80044ce:	609a      	str	r2, [r3, #8]
 80044d0:	68fb      	ldr	r3, [r7, #12]
 80044d2:	681b      	ldr	r3, [r3, #0]
 80044d4:	4a90      	ldr	r2, [pc, #576]	; (8004718 <UART_SetConfig+0x2c8>)
 80044d6:	4293      	cmp	r3, r2
 80044d8:	d126      	bne.n	8004528 <UART_SetConfig+0xd8>
 80044da:	4b90      	ldr	r3, [pc, #576]	; (800471c <UART_SetConfig+0x2cc>)
 80044dc:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 80044e0:	f003 0303 	and.w	r3, r3, #3
 80044e4:	2b03      	cmp	r3, #3
 80044e6:	d81b      	bhi.n	8004520 <UART_SetConfig+0xd0>
 80044e8:	a201      	add	r2, pc, #4	; (adr r2, 80044f0 <UART_SetConfig+0xa0>)
 80044ea:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80044ee:	bf00      	nop
 80044f0:	08004501 	.word	0x08004501
 80044f4:	08004511 	.word	0x08004511
 80044f8:	08004509 	.word	0x08004509
 80044fc:	08004519 	.word	0x08004519
 8004500:	2301      	movs	r3, #1
 8004502:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 8004506:	e116      	b.n	8004736 <UART_SetConfig+0x2e6>
 8004508:	2302      	movs	r3, #2
 800450a:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 800450e:	e112      	b.n	8004736 <UART_SetConfig+0x2e6>
 8004510:	2304      	movs	r3, #4
 8004512:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 8004516:	e10e      	b.n	8004736 <UART_SetConfig+0x2e6>
 8004518:	2308      	movs	r3, #8
 800451a:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 800451e:	e10a      	b.n	8004736 <UART_SetConfig+0x2e6>
 8004520:	2310      	movs	r3, #16
 8004522:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 8004526:	e106      	b.n	8004736 <UART_SetConfig+0x2e6>
 8004528:	68fb      	ldr	r3, [r7, #12]
 800452a:	681b      	ldr	r3, [r3, #0]
 800452c:	4a7c      	ldr	r2, [pc, #496]	; (8004720 <UART_SetConfig+0x2d0>)
 800452e:	4293      	cmp	r3, r2
 8004530:	d138      	bne.n	80045a4 <UART_SetConfig+0x154>
 8004532:	4b7a      	ldr	r3, [pc, #488]	; (800471c <UART_SetConfig+0x2cc>)
 8004534:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8004538:	f003 030c 	and.w	r3, r3, #12
 800453c:	2b0c      	cmp	r3, #12
 800453e:	d82d      	bhi.n	800459c <UART_SetConfig+0x14c>
 8004540:	a201      	add	r2, pc, #4	; (adr r2, 8004548 <UART_SetConfig+0xf8>)
 8004542:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8004546:	bf00      	nop
 8004548:	0800457d 	.word	0x0800457d
 800454c:	0800459d 	.word	0x0800459d
 8004550:	0800459d 	.word	0x0800459d
 8004554:	0800459d 	.word	0x0800459d
 8004558:	0800458d 	.word	0x0800458d
 800455c:	0800459d 	.word	0x0800459d
 8004560:	0800459d 	.word	0x0800459d
 8004564:	0800459d 	.word	0x0800459d
 8004568:	08004585 	.word	0x08004585
 800456c:	0800459d 	.word	0x0800459d
 8004570:	0800459d 	.word	0x0800459d
 8004574:	0800459d 	.word	0x0800459d
 8004578:	08004595 	.word	0x08004595
 800457c:	2300      	movs	r3, #0
 800457e:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 8004582:	e0d8      	b.n	8004736 <UART_SetConfig+0x2e6>
 8004584:	2302      	movs	r3, #2
 8004586:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 800458a:	e0d4      	b.n	8004736 <UART_SetConfig+0x2e6>
 800458c:	2304      	movs	r3, #4
 800458e:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 8004592:	e0d0      	b.n	8004736 <UART_SetConfig+0x2e6>
 8004594:	2308      	movs	r3, #8
 8004596:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 800459a:	e0cc      	b.n	8004736 <UART_SetConfig+0x2e6>
 800459c:	2310      	movs	r3, #16
 800459e:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 80045a2:	e0c8      	b.n	8004736 <UART_SetConfig+0x2e6>
 80045a4:	68fb      	ldr	r3, [r7, #12]
 80045a6:	681b      	ldr	r3, [r3, #0]
 80045a8:	4a5e      	ldr	r2, [pc, #376]	; (8004724 <UART_SetConfig+0x2d4>)
 80045aa:	4293      	cmp	r3, r2
 80045ac:	d125      	bne.n	80045fa <UART_SetConfig+0x1aa>
 80045ae:	4b5b      	ldr	r3, [pc, #364]	; (800471c <UART_SetConfig+0x2cc>)
 80045b0:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 80045b4:	f003 0330 	and.w	r3, r3, #48	; 0x30
 80045b8:	2b30      	cmp	r3, #48	; 0x30
 80045ba:	d016      	beq.n	80045ea <UART_SetConfig+0x19a>
 80045bc:	2b30      	cmp	r3, #48	; 0x30
 80045be:	d818      	bhi.n	80045f2 <UART_SetConfig+0x1a2>
 80045c0:	2b20      	cmp	r3, #32
 80045c2:	d00a      	beq.n	80045da <UART_SetConfig+0x18a>
 80045c4:	2b20      	cmp	r3, #32
 80045c6:	d814      	bhi.n	80045f2 <UART_SetConfig+0x1a2>
 80045c8:	2b00      	cmp	r3, #0
 80045ca:	d002      	beq.n	80045d2 <UART_SetConfig+0x182>
 80045cc:	2b10      	cmp	r3, #16
 80045ce:	d008      	beq.n	80045e2 <UART_SetConfig+0x192>
 80045d0:	e00f      	b.n	80045f2 <UART_SetConfig+0x1a2>
 80045d2:	2300      	movs	r3, #0
 80045d4:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 80045d8:	e0ad      	b.n	8004736 <UART_SetConfig+0x2e6>
 80045da:	2302      	movs	r3, #2
 80045dc:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 80045e0:	e0a9      	b.n	8004736 <UART_SetConfig+0x2e6>
 80045e2:	2304      	movs	r3, #4
 80045e4:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 80045e8:	e0a5      	b.n	8004736 <UART_SetConfig+0x2e6>
 80045ea:	2308      	movs	r3, #8
 80045ec:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 80045f0:	e0a1      	b.n	8004736 <UART_SetConfig+0x2e6>
 80045f2:	2310      	movs	r3, #16
 80045f4:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 80045f8:	e09d      	b.n	8004736 <UART_SetConfig+0x2e6>
 80045fa:	68fb      	ldr	r3, [r7, #12]
 80045fc:	681b      	ldr	r3, [r3, #0]
 80045fe:	4a4a      	ldr	r2, [pc, #296]	; (8004728 <UART_SetConfig+0x2d8>)
 8004600:	4293      	cmp	r3, r2
 8004602:	d125      	bne.n	8004650 <UART_SetConfig+0x200>
 8004604:	4b45      	ldr	r3, [pc, #276]	; (800471c <UART_SetConfig+0x2cc>)
 8004606:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 800460a:	f003 03c0 	and.w	r3, r3, #192	; 0xc0
 800460e:	2bc0      	cmp	r3, #192	; 0xc0
 8004610:	d016      	beq.n	8004640 <UART_SetConfig+0x1f0>
 8004612:	2bc0      	cmp	r3, #192	; 0xc0
 8004614:	d818      	bhi.n	8004648 <UART_SetConfig+0x1f8>
 8004616:	2b80      	cmp	r3, #128	; 0x80
 8004618:	d00a      	beq.n	8004630 <UART_SetConfig+0x1e0>
 800461a:	2b80      	cmp	r3, #128	; 0x80
 800461c:	d814      	bhi.n	8004648 <UART_SetConfig+0x1f8>
 800461e:	2b00      	cmp	r3, #0
 8004620:	d002      	beq.n	8004628 <UART_SetConfig+0x1d8>
 8004622:	2b40      	cmp	r3, #64	; 0x40
 8004624:	d008      	beq.n	8004638 <UART_SetConfig+0x1e8>
 8004626:	e00f      	b.n	8004648 <UART_SetConfig+0x1f8>
 8004628:	2300      	movs	r3, #0
 800462a:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 800462e:	e082      	b.n	8004736 <UART_SetConfig+0x2e6>
 8004630:	2302      	movs	r3, #2
 8004632:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 8004636:	e07e      	b.n	8004736 <UART_SetConfig+0x2e6>
 8004638:	2304      	movs	r3, #4
 800463a:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 800463e:	e07a      	b.n	8004736 <UART_SetConfig+0x2e6>
 8004640:	2308      	movs	r3, #8
 8004642:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 8004646:	e076      	b.n	8004736 <UART_SetConfig+0x2e6>
 8004648:	2310      	movs	r3, #16
 800464a:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 800464e:	e072      	b.n	8004736 <UART_SetConfig+0x2e6>
 8004650:	68fb      	ldr	r3, [r7, #12]
 8004652:	681b      	ldr	r3, [r3, #0]
 8004654:	4a35      	ldr	r2, [pc, #212]	; (800472c <UART_SetConfig+0x2dc>)
 8004656:	4293      	cmp	r3, r2
 8004658:	d12a      	bne.n	80046b0 <UART_SetConfig+0x260>
 800465a:	4b30      	ldr	r3, [pc, #192]	; (800471c <UART_SetConfig+0x2cc>)
 800465c:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8004660:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8004664:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 8004668:	d01a      	beq.n	80046a0 <UART_SetConfig+0x250>
 800466a:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 800466e:	d81b      	bhi.n	80046a8 <UART_SetConfig+0x258>
 8004670:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8004674:	d00c      	beq.n	8004690 <UART_SetConfig+0x240>
 8004676:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800467a:	d815      	bhi.n	80046a8 <UART_SetConfig+0x258>
 800467c:	2b00      	cmp	r3, #0
 800467e:	d003      	beq.n	8004688 <UART_SetConfig+0x238>
 8004680:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8004684:	d008      	beq.n	8004698 <UART_SetConfig+0x248>
 8004686:	e00f      	b.n	80046a8 <UART_SetConfig+0x258>
 8004688:	2300      	movs	r3, #0
 800468a:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 800468e:	e052      	b.n	8004736 <UART_SetConfig+0x2e6>
 8004690:	2302      	movs	r3, #2
 8004692:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 8004696:	e04e      	b.n	8004736 <UART_SetConfig+0x2e6>
 8004698:	2304      	movs	r3, #4
 800469a:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 800469e:	e04a      	b.n	8004736 <UART_SetConfig+0x2e6>
 80046a0:	2308      	movs	r3, #8
 80046a2:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 80046a6:	e046      	b.n	8004736 <UART_SetConfig+0x2e6>
 80046a8:	2310      	movs	r3, #16
 80046aa:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 80046ae:	e042      	b.n	8004736 <UART_SetConfig+0x2e6>
 80046b0:	68fb      	ldr	r3, [r7, #12]
 80046b2:	681b      	ldr	r3, [r3, #0]
 80046b4:	4a17      	ldr	r2, [pc, #92]	; (8004714 <UART_SetConfig+0x2c4>)
 80046b6:	4293      	cmp	r3, r2
 80046b8:	d13a      	bne.n	8004730 <UART_SetConfig+0x2e0>
 80046ba:	4b18      	ldr	r3, [pc, #96]	; (800471c <UART_SetConfig+0x2cc>)
 80046bc:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 80046c0:	f403 6340 	and.w	r3, r3, #3072	; 0xc00
 80046c4:	f5b3 6f40 	cmp.w	r3, #3072	; 0xc00
 80046c8:	d01a      	beq.n	8004700 <UART_SetConfig+0x2b0>
 80046ca:	f5b3 6f40 	cmp.w	r3, #3072	; 0xc00
 80046ce:	d81b      	bhi.n	8004708 <UART_SetConfig+0x2b8>
 80046d0:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 80046d4:	d00c      	beq.n	80046f0 <UART_SetConfig+0x2a0>
 80046d6:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 80046da:	d815      	bhi.n	8004708 <UART_SetConfig+0x2b8>
 80046dc:	2b00      	cmp	r3, #0
 80046de:	d003      	beq.n	80046e8 <UART_SetConfig+0x298>
 80046e0:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 80046e4:	d008      	beq.n	80046f8 <UART_SetConfig+0x2a8>
 80046e6:	e00f      	b.n	8004708 <UART_SetConfig+0x2b8>
 80046e8:	2300      	movs	r3, #0
 80046ea:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 80046ee:	e022      	b.n	8004736 <UART_SetConfig+0x2e6>
 80046f0:	2302      	movs	r3, #2
 80046f2:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 80046f6:	e01e      	b.n	8004736 <UART_SetConfig+0x2e6>
 80046f8:	2304      	movs	r3, #4
 80046fa:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 80046fe:	e01a      	b.n	8004736 <UART_SetConfig+0x2e6>
 8004700:	2308      	movs	r3, #8
 8004702:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 8004706:	e016      	b.n	8004736 <UART_SetConfig+0x2e6>
 8004708:	2310      	movs	r3, #16
 800470a:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 800470e:	e012      	b.n	8004736 <UART_SetConfig+0x2e6>
 8004710:	efff69f3 	.word	0xefff69f3
 8004714:	40008000 	.word	0x40008000
 8004718:	40013800 	.word	0x40013800
 800471c:	40021000 	.word	0x40021000
 8004720:	40004400 	.word	0x40004400
 8004724:	40004800 	.word	0x40004800
 8004728:	40004c00 	.word	0x40004c00
 800472c:	40005000 	.word	0x40005000
 8004730:	2310      	movs	r3, #16
 8004732:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 8004736:	68fb      	ldr	r3, [r7, #12]
 8004738:	681b      	ldr	r3, [r3, #0]
 800473a:	4a9f      	ldr	r2, [pc, #636]	; (80049b8 <UART_SetConfig+0x568>)
 800473c:	4293      	cmp	r3, r2
 800473e:	d17a      	bne.n	8004836 <UART_SetConfig+0x3e6>
 8004740:	f897 3023 	ldrb.w	r3, [r7, #35]	; 0x23
 8004744:	2b08      	cmp	r3, #8
 8004746:	d824      	bhi.n	8004792 <UART_SetConfig+0x342>
 8004748:	a201      	add	r2, pc, #4	; (adr r2, 8004750 <UART_SetConfig+0x300>)
 800474a:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800474e:	bf00      	nop
 8004750:	08004775 	.word	0x08004775
 8004754:	08004793 	.word	0x08004793
 8004758:	0800477d 	.word	0x0800477d
 800475c:	08004793 	.word	0x08004793
 8004760:	08004783 	.word	0x08004783
 8004764:	08004793 	.word	0x08004793
 8004768:	08004793 	.word	0x08004793
 800476c:	08004793 	.word	0x08004793
 8004770:	0800478b 	.word	0x0800478b
 8004774:	f7fe ff5a 	bl	800362c <HAL_RCC_GetPCLK1Freq>
 8004778:	61f8      	str	r0, [r7, #28]
 800477a:	e010      	b.n	800479e <UART_SetConfig+0x34e>
 800477c:	4b8f      	ldr	r3, [pc, #572]	; (80049bc <UART_SetConfig+0x56c>)
 800477e:	61fb      	str	r3, [r7, #28]
 8004780:	e00d      	b.n	800479e <UART_SetConfig+0x34e>
 8004782:	f7fe febb 	bl	80034fc <HAL_RCC_GetSysClockFreq>
 8004786:	61f8      	str	r0, [r7, #28]
 8004788:	e009      	b.n	800479e <UART_SetConfig+0x34e>
 800478a:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 800478e:	61fb      	str	r3, [r7, #28]
 8004790:	e005      	b.n	800479e <UART_SetConfig+0x34e>
 8004792:	2300      	movs	r3, #0
 8004794:	61fb      	str	r3, [r7, #28]
 8004796:	2301      	movs	r3, #1
 8004798:	f887 3022 	strb.w	r3, [r7, #34]	; 0x22
 800479c:	bf00      	nop
 800479e:	69fb      	ldr	r3, [r7, #28]
 80047a0:	2b00      	cmp	r3, #0
 80047a2:	f000 80fb 	beq.w	800499c <UART_SetConfig+0x54c>
 80047a6:	68fb      	ldr	r3, [r7, #12]
 80047a8:	685a      	ldr	r2, [r3, #4]
 80047aa:	4613      	mov	r3, r2
 80047ac:	005b      	lsls	r3, r3, #1
 80047ae:	4413      	add	r3, r2
 80047b0:	69fa      	ldr	r2, [r7, #28]
 80047b2:	429a      	cmp	r2, r3
 80047b4:	d305      	bcc.n	80047c2 <UART_SetConfig+0x372>
 80047b6:	68fb      	ldr	r3, [r7, #12]
 80047b8:	685b      	ldr	r3, [r3, #4]
 80047ba:	031b      	lsls	r3, r3, #12
 80047bc:	69fa      	ldr	r2, [r7, #28]
 80047be:	429a      	cmp	r2, r3
 80047c0:	d903      	bls.n	80047ca <UART_SetConfig+0x37a>
 80047c2:	2301      	movs	r3, #1
 80047c4:	f887 3022 	strb.w	r3, [r7, #34]	; 0x22
 80047c8:	e0e8      	b.n	800499c <UART_SetConfig+0x54c>
 80047ca:	69fb      	ldr	r3, [r7, #28]
 80047cc:	2200      	movs	r2, #0
 80047ce:	461c      	mov	r4, r3
 80047d0:	4615      	mov	r5, r2
 80047d2:	f04f 0200 	mov.w	r2, #0
 80047d6:	f04f 0300 	mov.w	r3, #0
 80047da:	022b      	lsls	r3, r5, #8
 80047dc:	ea43 6314 	orr.w	r3, r3, r4, lsr #24
 80047e0:	0222      	lsls	r2, r4, #8
 80047e2:	68f9      	ldr	r1, [r7, #12]
 80047e4:	6849      	ldr	r1, [r1, #4]
 80047e6:	0849      	lsrs	r1, r1, #1
 80047e8:	2000      	movs	r0, #0
 80047ea:	4688      	mov	r8, r1
 80047ec:	4681      	mov	r9, r0
 80047ee:	eb12 0a08 	adds.w	sl, r2, r8
 80047f2:	eb43 0b09 	adc.w	fp, r3, r9
 80047f6:	68fb      	ldr	r3, [r7, #12]
 80047f8:	685b      	ldr	r3, [r3, #4]
 80047fa:	2200      	movs	r2, #0
 80047fc:	603b      	str	r3, [r7, #0]
 80047fe:	607a      	str	r2, [r7, #4]
 8004800:	e9d7 2300 	ldrd	r2, r3, [r7]
 8004804:	4650      	mov	r0, sl
 8004806:	4659      	mov	r1, fp
 8004808:	f7fb fd32 	bl	8000270 <__aeabi_uldivmod>
 800480c:	4602      	mov	r2, r0
 800480e:	460b      	mov	r3, r1
 8004810:	4613      	mov	r3, r2
 8004812:	61bb      	str	r3, [r7, #24]
 8004814:	69bb      	ldr	r3, [r7, #24]
 8004816:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 800481a:	d308      	bcc.n	800482e <UART_SetConfig+0x3de>
 800481c:	69bb      	ldr	r3, [r7, #24]
 800481e:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
 8004822:	d204      	bcs.n	800482e <UART_SetConfig+0x3de>
 8004824:	68fb      	ldr	r3, [r7, #12]
 8004826:	681b      	ldr	r3, [r3, #0]
 8004828:	69ba      	ldr	r2, [r7, #24]
 800482a:	60da      	str	r2, [r3, #12]
 800482c:	e0b6      	b.n	800499c <UART_SetConfig+0x54c>
 800482e:	2301      	movs	r3, #1
 8004830:	f887 3022 	strb.w	r3, [r7, #34]	; 0x22
 8004834:	e0b2      	b.n	800499c <UART_SetConfig+0x54c>
 8004836:	68fb      	ldr	r3, [r7, #12]
 8004838:	69db      	ldr	r3, [r3, #28]
 800483a:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 800483e:	d15e      	bne.n	80048fe <UART_SetConfig+0x4ae>
 8004840:	f897 3023 	ldrb.w	r3, [r7, #35]	; 0x23
 8004844:	2b08      	cmp	r3, #8
 8004846:	d828      	bhi.n	800489a <UART_SetConfig+0x44a>
 8004848:	a201      	add	r2, pc, #4	; (adr r2, 8004850 <UART_SetConfig+0x400>)
 800484a:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800484e:	bf00      	nop
 8004850:	08004875 	.word	0x08004875
 8004854:	0800487d 	.word	0x0800487d
 8004858:	08004885 	.word	0x08004885
 800485c:	0800489b 	.word	0x0800489b
 8004860:	0800488b 	.word	0x0800488b
 8004864:	0800489b 	.word	0x0800489b
 8004868:	0800489b 	.word	0x0800489b
 800486c:	0800489b 	.word	0x0800489b
 8004870:	08004893 	.word	0x08004893
 8004874:	f7fe feda 	bl	800362c <HAL_RCC_GetPCLK1Freq>
 8004878:	61f8      	str	r0, [r7, #28]
 800487a:	e014      	b.n	80048a6 <UART_SetConfig+0x456>
 800487c:	f7fe feec 	bl	8003658 <HAL_RCC_GetPCLK2Freq>
 8004880:	61f8      	str	r0, [r7, #28]
 8004882:	e010      	b.n	80048a6 <UART_SetConfig+0x456>
 8004884:	4b4d      	ldr	r3, [pc, #308]	; (80049bc <UART_SetConfig+0x56c>)
 8004886:	61fb      	str	r3, [r7, #28]
 8004888:	e00d      	b.n	80048a6 <UART_SetConfig+0x456>
 800488a:	f7fe fe37 	bl	80034fc <HAL_RCC_GetSysClockFreq>
 800488e:	61f8      	str	r0, [r7, #28]
 8004890:	e009      	b.n	80048a6 <UART_SetConfig+0x456>
 8004892:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8004896:	61fb      	str	r3, [r7, #28]
 8004898:	e005      	b.n	80048a6 <UART_SetConfig+0x456>
 800489a:	2300      	movs	r3, #0
 800489c:	61fb      	str	r3, [r7, #28]
 800489e:	2301      	movs	r3, #1
 80048a0:	f887 3022 	strb.w	r3, [r7, #34]	; 0x22
 80048a4:	bf00      	nop
 80048a6:	69fb      	ldr	r3, [r7, #28]
 80048a8:	2b00      	cmp	r3, #0
 80048aa:	d077      	beq.n	800499c <UART_SetConfig+0x54c>
 80048ac:	69fb      	ldr	r3, [r7, #28]
 80048ae:	005a      	lsls	r2, r3, #1
 80048b0:	68fb      	ldr	r3, [r7, #12]
 80048b2:	685b      	ldr	r3, [r3, #4]
 80048b4:	085b      	lsrs	r3, r3, #1
 80048b6:	441a      	add	r2, r3
 80048b8:	68fb      	ldr	r3, [r7, #12]
 80048ba:	685b      	ldr	r3, [r3, #4]
 80048bc:	fbb2 f3f3 	udiv	r3, r2, r3
 80048c0:	61bb      	str	r3, [r7, #24]
 80048c2:	69bb      	ldr	r3, [r7, #24]
 80048c4:	2b0f      	cmp	r3, #15
 80048c6:	d916      	bls.n	80048f6 <UART_SetConfig+0x4a6>
 80048c8:	69bb      	ldr	r3, [r7, #24]
 80048ca:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 80048ce:	d212      	bcs.n	80048f6 <UART_SetConfig+0x4a6>
 80048d0:	69bb      	ldr	r3, [r7, #24]
 80048d2:	b29b      	uxth	r3, r3
 80048d4:	f023 030f 	bic.w	r3, r3, #15
 80048d8:	82fb      	strh	r3, [r7, #22]
 80048da:	69bb      	ldr	r3, [r7, #24]
 80048dc:	085b      	lsrs	r3, r3, #1
 80048de:	b29b      	uxth	r3, r3
 80048e0:	f003 0307 	and.w	r3, r3, #7
 80048e4:	b29a      	uxth	r2, r3
 80048e6:	8afb      	ldrh	r3, [r7, #22]
 80048e8:	4313      	orrs	r3, r2
 80048ea:	82fb      	strh	r3, [r7, #22]
 80048ec:	68fb      	ldr	r3, [r7, #12]
 80048ee:	681b      	ldr	r3, [r3, #0]
 80048f0:	8afa      	ldrh	r2, [r7, #22]
 80048f2:	60da      	str	r2, [r3, #12]
 80048f4:	e052      	b.n	800499c <UART_SetConfig+0x54c>
 80048f6:	2301      	movs	r3, #1
 80048f8:	f887 3022 	strb.w	r3, [r7, #34]	; 0x22
 80048fc:	e04e      	b.n	800499c <UART_SetConfig+0x54c>
 80048fe:	f897 3023 	ldrb.w	r3, [r7, #35]	; 0x23
 8004902:	2b08      	cmp	r3, #8
 8004904:	d827      	bhi.n	8004956 <UART_SetConfig+0x506>
 8004906:	a201      	add	r2, pc, #4	; (adr r2, 800490c <UART_SetConfig+0x4bc>)
 8004908:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800490c:	08004931 	.word	0x08004931
 8004910:	08004939 	.word	0x08004939
 8004914:	08004941 	.word	0x08004941
 8004918:	08004957 	.word	0x08004957
 800491c:	08004947 	.word	0x08004947
 8004920:	08004957 	.word	0x08004957
 8004924:	08004957 	.word	0x08004957
 8004928:	08004957 	.word	0x08004957
 800492c:	0800494f 	.word	0x0800494f
 8004930:	f7fe fe7c 	bl	800362c <HAL_RCC_GetPCLK1Freq>
 8004934:	61f8      	str	r0, [r7, #28]
 8004936:	e014      	b.n	8004962 <UART_SetConfig+0x512>
 8004938:	f7fe fe8e 	bl	8003658 <HAL_RCC_GetPCLK2Freq>
 800493c:	61f8      	str	r0, [r7, #28]
 800493e:	e010      	b.n	8004962 <UART_SetConfig+0x512>
 8004940:	4b1e      	ldr	r3, [pc, #120]	; (80049bc <UART_SetConfig+0x56c>)
 8004942:	61fb      	str	r3, [r7, #28]
 8004944:	e00d      	b.n	8004962 <UART_SetConfig+0x512>
 8004946:	f7fe fdd9 	bl	80034fc <HAL_RCC_GetSysClockFreq>
 800494a:	61f8      	str	r0, [r7, #28]
 800494c:	e009      	b.n	8004962 <UART_SetConfig+0x512>
 800494e:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8004952:	61fb      	str	r3, [r7, #28]
 8004954:	e005      	b.n	8004962 <UART_SetConfig+0x512>
 8004956:	2300      	movs	r3, #0
 8004958:	61fb      	str	r3, [r7, #28]
 800495a:	2301      	movs	r3, #1
 800495c:	f887 3022 	strb.w	r3, [r7, #34]	; 0x22
 8004960:	bf00      	nop
 8004962:	69fb      	ldr	r3, [r7, #28]
 8004964:	2b00      	cmp	r3, #0
 8004966:	d019      	beq.n	800499c <UART_SetConfig+0x54c>
 8004968:	68fb      	ldr	r3, [r7, #12]
 800496a:	685b      	ldr	r3, [r3, #4]
 800496c:	085a      	lsrs	r2, r3, #1
 800496e:	69fb      	ldr	r3, [r7, #28]
 8004970:	441a      	add	r2, r3
 8004972:	68fb      	ldr	r3, [r7, #12]
 8004974:	685b      	ldr	r3, [r3, #4]
 8004976:	fbb2 f3f3 	udiv	r3, r2, r3
 800497a:	61bb      	str	r3, [r7, #24]
 800497c:	69bb      	ldr	r3, [r7, #24]
 800497e:	2b0f      	cmp	r3, #15
 8004980:	d909      	bls.n	8004996 <UART_SetConfig+0x546>
 8004982:	69bb      	ldr	r3, [r7, #24]
 8004984:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8004988:	d205      	bcs.n	8004996 <UART_SetConfig+0x546>
 800498a:	69bb      	ldr	r3, [r7, #24]
 800498c:	b29a      	uxth	r2, r3
 800498e:	68fb      	ldr	r3, [r7, #12]
 8004990:	681b      	ldr	r3, [r3, #0]
 8004992:	60da      	str	r2, [r3, #12]
 8004994:	e002      	b.n	800499c <UART_SetConfig+0x54c>
 8004996:	2301      	movs	r3, #1
 8004998:	f887 3022 	strb.w	r3, [r7, #34]	; 0x22
 800499c:	68fb      	ldr	r3, [r7, #12]
 800499e:	2200      	movs	r2, #0
 80049a0:	669a      	str	r2, [r3, #104]	; 0x68
 80049a2:	68fb      	ldr	r3, [r7, #12]
 80049a4:	2200      	movs	r2, #0
 80049a6:	66da      	str	r2, [r3, #108]	; 0x6c
 80049a8:	f897 3022 	ldrb.w	r3, [r7, #34]	; 0x22
 80049ac:	4618      	mov	r0, r3
 80049ae:	3728      	adds	r7, #40	; 0x28
 80049b0:	46bd      	mov	sp, r7
 80049b2:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 80049b6:	bf00      	nop
 80049b8:	40008000 	.word	0x40008000
 80049bc:	00f42400 	.word	0x00f42400

080049c0 <UART_AdvFeatureConfig>:
 80049c0:	b480      	push	{r7}
 80049c2:	b083      	sub	sp, #12
 80049c4:	af00      	add	r7, sp, #0
 80049c6:	6078      	str	r0, [r7, #4]
 80049c8:	687b      	ldr	r3, [r7, #4]
 80049ca:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80049cc:	f003 0308 	and.w	r3, r3, #8
 80049d0:	2b00      	cmp	r3, #0
 80049d2:	d00a      	beq.n	80049ea <UART_AdvFeatureConfig+0x2a>
 80049d4:	687b      	ldr	r3, [r7, #4]
 80049d6:	681b      	ldr	r3, [r3, #0]
 80049d8:	685b      	ldr	r3, [r3, #4]
 80049da:	f423 4100 	bic.w	r1, r3, #32768	; 0x8000
 80049de:	687b      	ldr	r3, [r7, #4]
 80049e0:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80049e2:	687b      	ldr	r3, [r7, #4]
 80049e4:	681b      	ldr	r3, [r3, #0]
 80049e6:	430a      	orrs	r2, r1
 80049e8:	605a      	str	r2, [r3, #4]
 80049ea:	687b      	ldr	r3, [r7, #4]
 80049ec:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80049ee:	f003 0301 	and.w	r3, r3, #1
 80049f2:	2b00      	cmp	r3, #0
 80049f4:	d00a      	beq.n	8004a0c <UART_AdvFeatureConfig+0x4c>
 80049f6:	687b      	ldr	r3, [r7, #4]
 80049f8:	681b      	ldr	r3, [r3, #0]
 80049fa:	685b      	ldr	r3, [r3, #4]
 80049fc:	f423 3100 	bic.w	r1, r3, #131072	; 0x20000
 8004a00:	687b      	ldr	r3, [r7, #4]
 8004a02:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8004a04:	687b      	ldr	r3, [r7, #4]
 8004a06:	681b      	ldr	r3, [r3, #0]
 8004a08:	430a      	orrs	r2, r1
 8004a0a:	605a      	str	r2, [r3, #4]
 8004a0c:	687b      	ldr	r3, [r7, #4]
 8004a0e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004a10:	f003 0302 	and.w	r3, r3, #2
 8004a14:	2b00      	cmp	r3, #0
 8004a16:	d00a      	beq.n	8004a2e <UART_AdvFeatureConfig+0x6e>
 8004a18:	687b      	ldr	r3, [r7, #4]
 8004a1a:	681b      	ldr	r3, [r3, #0]
 8004a1c:	685b      	ldr	r3, [r3, #4]
 8004a1e:	f423 3180 	bic.w	r1, r3, #65536	; 0x10000
 8004a22:	687b      	ldr	r3, [r7, #4]
 8004a24:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8004a26:	687b      	ldr	r3, [r7, #4]
 8004a28:	681b      	ldr	r3, [r3, #0]
 8004a2a:	430a      	orrs	r2, r1
 8004a2c:	605a      	str	r2, [r3, #4]
 8004a2e:	687b      	ldr	r3, [r7, #4]
 8004a30:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004a32:	f003 0304 	and.w	r3, r3, #4
 8004a36:	2b00      	cmp	r3, #0
 8004a38:	d00a      	beq.n	8004a50 <UART_AdvFeatureConfig+0x90>
 8004a3a:	687b      	ldr	r3, [r7, #4]
 8004a3c:	681b      	ldr	r3, [r3, #0]
 8004a3e:	685b      	ldr	r3, [r3, #4]
 8004a40:	f423 2180 	bic.w	r1, r3, #262144	; 0x40000
 8004a44:	687b      	ldr	r3, [r7, #4]
 8004a46:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8004a48:	687b      	ldr	r3, [r7, #4]
 8004a4a:	681b      	ldr	r3, [r3, #0]
 8004a4c:	430a      	orrs	r2, r1
 8004a4e:	605a      	str	r2, [r3, #4]
 8004a50:	687b      	ldr	r3, [r7, #4]
 8004a52:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004a54:	f003 0310 	and.w	r3, r3, #16
 8004a58:	2b00      	cmp	r3, #0
 8004a5a:	d00a      	beq.n	8004a72 <UART_AdvFeatureConfig+0xb2>
 8004a5c:	687b      	ldr	r3, [r7, #4]
 8004a5e:	681b      	ldr	r3, [r3, #0]
 8004a60:	689b      	ldr	r3, [r3, #8]
 8004a62:	f423 5180 	bic.w	r1, r3, #4096	; 0x1000
 8004a66:	687b      	ldr	r3, [r7, #4]
 8004a68:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8004a6a:	687b      	ldr	r3, [r7, #4]
 8004a6c:	681b      	ldr	r3, [r3, #0]
 8004a6e:	430a      	orrs	r2, r1
 8004a70:	609a      	str	r2, [r3, #8]
 8004a72:	687b      	ldr	r3, [r7, #4]
 8004a74:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004a76:	f003 0320 	and.w	r3, r3, #32
 8004a7a:	2b00      	cmp	r3, #0
 8004a7c:	d00a      	beq.n	8004a94 <UART_AdvFeatureConfig+0xd4>
 8004a7e:	687b      	ldr	r3, [r7, #4]
 8004a80:	681b      	ldr	r3, [r3, #0]
 8004a82:	689b      	ldr	r3, [r3, #8]
 8004a84:	f423 5100 	bic.w	r1, r3, #8192	; 0x2000
 8004a88:	687b      	ldr	r3, [r7, #4]
 8004a8a:	6bda      	ldr	r2, [r3, #60]	; 0x3c
 8004a8c:	687b      	ldr	r3, [r7, #4]
 8004a8e:	681b      	ldr	r3, [r3, #0]
 8004a90:	430a      	orrs	r2, r1
 8004a92:	609a      	str	r2, [r3, #8]
 8004a94:	687b      	ldr	r3, [r7, #4]
 8004a96:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004a98:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8004a9c:	2b00      	cmp	r3, #0
 8004a9e:	d01a      	beq.n	8004ad6 <UART_AdvFeatureConfig+0x116>
 8004aa0:	687b      	ldr	r3, [r7, #4]
 8004aa2:	681b      	ldr	r3, [r3, #0]
 8004aa4:	685b      	ldr	r3, [r3, #4]
 8004aa6:	f423 1180 	bic.w	r1, r3, #1048576	; 0x100000
 8004aaa:	687b      	ldr	r3, [r7, #4]
 8004aac:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8004aae:	687b      	ldr	r3, [r7, #4]
 8004ab0:	681b      	ldr	r3, [r3, #0]
 8004ab2:	430a      	orrs	r2, r1
 8004ab4:	605a      	str	r2, [r3, #4]
 8004ab6:	687b      	ldr	r3, [r7, #4]
 8004ab8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004aba:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
 8004abe:	d10a      	bne.n	8004ad6 <UART_AdvFeatureConfig+0x116>
 8004ac0:	687b      	ldr	r3, [r7, #4]
 8004ac2:	681b      	ldr	r3, [r3, #0]
 8004ac4:	685b      	ldr	r3, [r3, #4]
 8004ac6:	f423 01c0 	bic.w	r1, r3, #6291456	; 0x600000
 8004aca:	687b      	ldr	r3, [r7, #4]
 8004acc:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8004ace:	687b      	ldr	r3, [r7, #4]
 8004ad0:	681b      	ldr	r3, [r3, #0]
 8004ad2:	430a      	orrs	r2, r1
 8004ad4:	605a      	str	r2, [r3, #4]
 8004ad6:	687b      	ldr	r3, [r7, #4]
 8004ad8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004ada:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8004ade:	2b00      	cmp	r3, #0
 8004ae0:	d00a      	beq.n	8004af8 <UART_AdvFeatureConfig+0x138>
 8004ae2:	687b      	ldr	r3, [r7, #4]
 8004ae4:	681b      	ldr	r3, [r3, #0]
 8004ae6:	685b      	ldr	r3, [r3, #4]
 8004ae8:	f423 2100 	bic.w	r1, r3, #524288	; 0x80000
 8004aec:	687b      	ldr	r3, [r7, #4]
 8004aee:	6c9a      	ldr	r2, [r3, #72]	; 0x48
 8004af0:	687b      	ldr	r3, [r7, #4]
 8004af2:	681b      	ldr	r3, [r3, #0]
 8004af4:	430a      	orrs	r2, r1
 8004af6:	605a      	str	r2, [r3, #4]
 8004af8:	bf00      	nop
 8004afa:	370c      	adds	r7, #12
 8004afc:	46bd      	mov	sp, r7
 8004afe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004b02:	4770      	bx	lr

08004b04 <UART_CheckIdleState>:
 8004b04:	b580      	push	{r7, lr}
 8004b06:	b098      	sub	sp, #96	; 0x60
 8004b08:	af02      	add	r7, sp, #8
 8004b0a:	6078      	str	r0, [r7, #4]
 8004b0c:	687b      	ldr	r3, [r7, #4]
 8004b0e:	2200      	movs	r2, #0
 8004b10:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
 8004b14:	f7fc fe08 	bl	8001728 <HAL_GetTick>
 8004b18:	6578      	str	r0, [r7, #84]	; 0x54
 8004b1a:	687b      	ldr	r3, [r7, #4]
 8004b1c:	681b      	ldr	r3, [r3, #0]
 8004b1e:	681b      	ldr	r3, [r3, #0]
 8004b20:	f003 0308 	and.w	r3, r3, #8
 8004b24:	2b08      	cmp	r3, #8
 8004b26:	d12e      	bne.n	8004b86 <UART_CheckIdleState+0x82>
 8004b28:	f06f 437e 	mvn.w	r3, #4261412864	; 0xfe000000
 8004b2c:	9300      	str	r3, [sp, #0]
 8004b2e:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 8004b30:	2200      	movs	r2, #0
 8004b32:	f44f 1100 	mov.w	r1, #2097152	; 0x200000
 8004b36:	6878      	ldr	r0, [r7, #4]
 8004b38:	f000 f88c 	bl	8004c54 <UART_WaitOnFlagUntilTimeout>
 8004b3c:	4603      	mov	r3, r0
 8004b3e:	2b00      	cmp	r3, #0
 8004b40:	d021      	beq.n	8004b86 <UART_CheckIdleState+0x82>
 8004b42:	687b      	ldr	r3, [r7, #4]
 8004b44:	681b      	ldr	r3, [r3, #0]
 8004b46:	63bb      	str	r3, [r7, #56]	; 0x38
 8004b48:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8004b4a:	e853 3f00 	ldrex	r3, [r3]
 8004b4e:	637b      	str	r3, [r7, #52]	; 0x34
 8004b50:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8004b52:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8004b56:	653b      	str	r3, [r7, #80]	; 0x50
 8004b58:	687b      	ldr	r3, [r7, #4]
 8004b5a:	681b      	ldr	r3, [r3, #0]
 8004b5c:	461a      	mov	r2, r3
 8004b5e:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 8004b60:	647b      	str	r3, [r7, #68]	; 0x44
 8004b62:	643a      	str	r2, [r7, #64]	; 0x40
 8004b64:	6c39      	ldr	r1, [r7, #64]	; 0x40
 8004b66:	6c7a      	ldr	r2, [r7, #68]	; 0x44
 8004b68:	e841 2300 	strex	r3, r2, [r1]
 8004b6c:	63fb      	str	r3, [r7, #60]	; 0x3c
 8004b6e:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8004b70:	2b00      	cmp	r3, #0
 8004b72:	d1e6      	bne.n	8004b42 <UART_CheckIdleState+0x3e>
 8004b74:	687b      	ldr	r3, [r7, #4]
 8004b76:	2220      	movs	r2, #32
 8004b78:	67da      	str	r2, [r3, #124]	; 0x7c
 8004b7a:	687b      	ldr	r3, [r7, #4]
 8004b7c:	2200      	movs	r2, #0
 8004b7e:	f883 2078 	strb.w	r2, [r3, #120]	; 0x78
 8004b82:	2303      	movs	r3, #3
 8004b84:	e062      	b.n	8004c4c <UART_CheckIdleState+0x148>
 8004b86:	687b      	ldr	r3, [r7, #4]
 8004b88:	681b      	ldr	r3, [r3, #0]
 8004b8a:	681b      	ldr	r3, [r3, #0]
 8004b8c:	f003 0304 	and.w	r3, r3, #4
 8004b90:	2b04      	cmp	r3, #4
 8004b92:	d149      	bne.n	8004c28 <UART_CheckIdleState+0x124>
 8004b94:	f06f 437e 	mvn.w	r3, #4261412864	; 0xfe000000
 8004b98:	9300      	str	r3, [sp, #0]
 8004b9a:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 8004b9c:	2200      	movs	r2, #0
 8004b9e:	f44f 0180 	mov.w	r1, #4194304	; 0x400000
 8004ba2:	6878      	ldr	r0, [r7, #4]
 8004ba4:	f000 f856 	bl	8004c54 <UART_WaitOnFlagUntilTimeout>
 8004ba8:	4603      	mov	r3, r0
 8004baa:	2b00      	cmp	r3, #0
 8004bac:	d03c      	beq.n	8004c28 <UART_CheckIdleState+0x124>
 8004bae:	687b      	ldr	r3, [r7, #4]
 8004bb0:	681b      	ldr	r3, [r3, #0]
 8004bb2:	627b      	str	r3, [r7, #36]	; 0x24
 8004bb4:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8004bb6:	e853 3f00 	ldrex	r3, [r3]
 8004bba:	623b      	str	r3, [r7, #32]
 8004bbc:	6a3b      	ldr	r3, [r7, #32]
 8004bbe:	f423 7390 	bic.w	r3, r3, #288	; 0x120
 8004bc2:	64fb      	str	r3, [r7, #76]	; 0x4c
 8004bc4:	687b      	ldr	r3, [r7, #4]
 8004bc6:	681b      	ldr	r3, [r3, #0]
 8004bc8:	461a      	mov	r2, r3
 8004bca:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 8004bcc:	633b      	str	r3, [r7, #48]	; 0x30
 8004bce:	62fa      	str	r2, [r7, #44]	; 0x2c
 8004bd0:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 8004bd2:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 8004bd4:	e841 2300 	strex	r3, r2, [r1]
 8004bd8:	62bb      	str	r3, [r7, #40]	; 0x28
 8004bda:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8004bdc:	2b00      	cmp	r3, #0
 8004bde:	d1e6      	bne.n	8004bae <UART_CheckIdleState+0xaa>
 8004be0:	687b      	ldr	r3, [r7, #4]
 8004be2:	681b      	ldr	r3, [r3, #0]
 8004be4:	3308      	adds	r3, #8
 8004be6:	613b      	str	r3, [r7, #16]
 8004be8:	693b      	ldr	r3, [r7, #16]
 8004bea:	e853 3f00 	ldrex	r3, [r3]
 8004bee:	60fb      	str	r3, [r7, #12]
 8004bf0:	68fb      	ldr	r3, [r7, #12]
 8004bf2:	f023 0301 	bic.w	r3, r3, #1
 8004bf6:	64bb      	str	r3, [r7, #72]	; 0x48
 8004bf8:	687b      	ldr	r3, [r7, #4]
 8004bfa:	681b      	ldr	r3, [r3, #0]
 8004bfc:	3308      	adds	r3, #8
 8004bfe:	6cba      	ldr	r2, [r7, #72]	; 0x48
 8004c00:	61fa      	str	r2, [r7, #28]
 8004c02:	61bb      	str	r3, [r7, #24]
 8004c04:	69b9      	ldr	r1, [r7, #24]
 8004c06:	69fa      	ldr	r2, [r7, #28]
 8004c08:	e841 2300 	strex	r3, r2, [r1]
 8004c0c:	617b      	str	r3, [r7, #20]
 8004c0e:	697b      	ldr	r3, [r7, #20]
 8004c10:	2b00      	cmp	r3, #0
 8004c12:	d1e5      	bne.n	8004be0 <UART_CheckIdleState+0xdc>
 8004c14:	687b      	ldr	r3, [r7, #4]
 8004c16:	2220      	movs	r2, #32
 8004c18:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
 8004c1c:	687b      	ldr	r3, [r7, #4]
 8004c1e:	2200      	movs	r2, #0
 8004c20:	f883 2078 	strb.w	r2, [r3, #120]	; 0x78
 8004c24:	2303      	movs	r3, #3
 8004c26:	e011      	b.n	8004c4c <UART_CheckIdleState+0x148>
 8004c28:	687b      	ldr	r3, [r7, #4]
 8004c2a:	2220      	movs	r2, #32
 8004c2c:	67da      	str	r2, [r3, #124]	; 0x7c
 8004c2e:	687b      	ldr	r3, [r7, #4]
 8004c30:	2220      	movs	r2, #32
 8004c32:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
 8004c36:	687b      	ldr	r3, [r7, #4]
 8004c38:	2200      	movs	r2, #0
 8004c3a:	661a      	str	r2, [r3, #96]	; 0x60
 8004c3c:	687b      	ldr	r3, [r7, #4]
 8004c3e:	2200      	movs	r2, #0
 8004c40:	665a      	str	r2, [r3, #100]	; 0x64
 8004c42:	687b      	ldr	r3, [r7, #4]
 8004c44:	2200      	movs	r2, #0
 8004c46:	f883 2078 	strb.w	r2, [r3, #120]	; 0x78
 8004c4a:	2300      	movs	r3, #0
 8004c4c:	4618      	mov	r0, r3
 8004c4e:	3758      	adds	r7, #88	; 0x58
 8004c50:	46bd      	mov	sp, r7
 8004c52:	bd80      	pop	{r7, pc}

08004c54 <UART_WaitOnFlagUntilTimeout>:
 8004c54:	b580      	push	{r7, lr}
 8004c56:	b084      	sub	sp, #16
 8004c58:	af00      	add	r7, sp, #0
 8004c5a:	60f8      	str	r0, [r7, #12]
 8004c5c:	60b9      	str	r1, [r7, #8]
 8004c5e:	603b      	str	r3, [r7, #0]
 8004c60:	4613      	mov	r3, r2
 8004c62:	71fb      	strb	r3, [r7, #7]
 8004c64:	e049      	b.n	8004cfa <UART_WaitOnFlagUntilTimeout+0xa6>
 8004c66:	69bb      	ldr	r3, [r7, #24]
 8004c68:	f1b3 3fff 	cmp.w	r3, #4294967295
 8004c6c:	d045      	beq.n	8004cfa <UART_WaitOnFlagUntilTimeout+0xa6>
 8004c6e:	f7fc fd5b 	bl	8001728 <HAL_GetTick>
 8004c72:	4602      	mov	r2, r0
 8004c74:	683b      	ldr	r3, [r7, #0]
 8004c76:	1ad3      	subs	r3, r2, r3
 8004c78:	69ba      	ldr	r2, [r7, #24]
 8004c7a:	429a      	cmp	r2, r3
 8004c7c:	d302      	bcc.n	8004c84 <UART_WaitOnFlagUntilTimeout+0x30>
 8004c7e:	69bb      	ldr	r3, [r7, #24]
 8004c80:	2b00      	cmp	r3, #0
 8004c82:	d101      	bne.n	8004c88 <UART_WaitOnFlagUntilTimeout+0x34>
 8004c84:	2303      	movs	r3, #3
 8004c86:	e048      	b.n	8004d1a <UART_WaitOnFlagUntilTimeout+0xc6>
 8004c88:	68fb      	ldr	r3, [r7, #12]
 8004c8a:	681b      	ldr	r3, [r3, #0]
 8004c8c:	681b      	ldr	r3, [r3, #0]
 8004c8e:	f003 0304 	and.w	r3, r3, #4
 8004c92:	2b00      	cmp	r3, #0
 8004c94:	d031      	beq.n	8004cfa <UART_WaitOnFlagUntilTimeout+0xa6>
 8004c96:	68fb      	ldr	r3, [r7, #12]
 8004c98:	681b      	ldr	r3, [r3, #0]
 8004c9a:	69db      	ldr	r3, [r3, #28]
 8004c9c:	f003 0308 	and.w	r3, r3, #8
 8004ca0:	2b08      	cmp	r3, #8
 8004ca2:	d110      	bne.n	8004cc6 <UART_WaitOnFlagUntilTimeout+0x72>
 8004ca4:	68fb      	ldr	r3, [r7, #12]
 8004ca6:	681b      	ldr	r3, [r3, #0]
 8004ca8:	2208      	movs	r2, #8
 8004caa:	621a      	str	r2, [r3, #32]
 8004cac:	68f8      	ldr	r0, [r7, #12]
 8004cae:	f000 f838 	bl	8004d22 <UART_EndRxTransfer>
 8004cb2:	68fb      	ldr	r3, [r7, #12]
 8004cb4:	2208      	movs	r2, #8
 8004cb6:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
 8004cba:	68fb      	ldr	r3, [r7, #12]
 8004cbc:	2200      	movs	r2, #0
 8004cbe:	f883 2078 	strb.w	r2, [r3, #120]	; 0x78
 8004cc2:	2301      	movs	r3, #1
 8004cc4:	e029      	b.n	8004d1a <UART_WaitOnFlagUntilTimeout+0xc6>
 8004cc6:	68fb      	ldr	r3, [r7, #12]
 8004cc8:	681b      	ldr	r3, [r3, #0]
 8004cca:	69db      	ldr	r3, [r3, #28]
 8004ccc:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 8004cd0:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 8004cd4:	d111      	bne.n	8004cfa <UART_WaitOnFlagUntilTimeout+0xa6>
 8004cd6:	68fb      	ldr	r3, [r7, #12]
 8004cd8:	681b      	ldr	r3, [r3, #0]
 8004cda:	f44f 6200 	mov.w	r2, #2048	; 0x800
 8004cde:	621a      	str	r2, [r3, #32]
 8004ce0:	68f8      	ldr	r0, [r7, #12]
 8004ce2:	f000 f81e 	bl	8004d22 <UART_EndRxTransfer>
 8004ce6:	68fb      	ldr	r3, [r7, #12]
 8004ce8:	2220      	movs	r2, #32
 8004cea:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
 8004cee:	68fb      	ldr	r3, [r7, #12]
 8004cf0:	2200      	movs	r2, #0
 8004cf2:	f883 2078 	strb.w	r2, [r3, #120]	; 0x78
 8004cf6:	2303      	movs	r3, #3
 8004cf8:	e00f      	b.n	8004d1a <UART_WaitOnFlagUntilTimeout+0xc6>
 8004cfa:	68fb      	ldr	r3, [r7, #12]
 8004cfc:	681b      	ldr	r3, [r3, #0]
 8004cfe:	69da      	ldr	r2, [r3, #28]
 8004d00:	68bb      	ldr	r3, [r7, #8]
 8004d02:	4013      	ands	r3, r2
 8004d04:	68ba      	ldr	r2, [r7, #8]
 8004d06:	429a      	cmp	r2, r3
 8004d08:	bf0c      	ite	eq
 8004d0a:	2301      	moveq	r3, #1
 8004d0c:	2300      	movne	r3, #0
 8004d0e:	b2db      	uxtb	r3, r3
 8004d10:	461a      	mov	r2, r3
 8004d12:	79fb      	ldrb	r3, [r7, #7]
 8004d14:	429a      	cmp	r2, r3
 8004d16:	d0a6      	beq.n	8004c66 <UART_WaitOnFlagUntilTimeout+0x12>
 8004d18:	2300      	movs	r3, #0
 8004d1a:	4618      	mov	r0, r3
 8004d1c:	3710      	adds	r7, #16
 8004d1e:	46bd      	mov	sp, r7
 8004d20:	bd80      	pop	{r7, pc}

08004d22 <UART_EndRxTransfer>:
 8004d22:	b480      	push	{r7}
 8004d24:	b095      	sub	sp, #84	; 0x54
 8004d26:	af00      	add	r7, sp, #0
 8004d28:	6078      	str	r0, [r7, #4]
 8004d2a:	687b      	ldr	r3, [r7, #4]
 8004d2c:	681b      	ldr	r3, [r3, #0]
 8004d2e:	637b      	str	r3, [r7, #52]	; 0x34
 8004d30:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8004d32:	e853 3f00 	ldrex	r3, [r3]
 8004d36:	633b      	str	r3, [r7, #48]	; 0x30
 8004d38:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8004d3a:	f423 7390 	bic.w	r3, r3, #288	; 0x120
 8004d3e:	64fb      	str	r3, [r7, #76]	; 0x4c
 8004d40:	687b      	ldr	r3, [r7, #4]
 8004d42:	681b      	ldr	r3, [r3, #0]
 8004d44:	461a      	mov	r2, r3
 8004d46:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 8004d48:	643b      	str	r3, [r7, #64]	; 0x40
 8004d4a:	63fa      	str	r2, [r7, #60]	; 0x3c
 8004d4c:	6bf9      	ldr	r1, [r7, #60]	; 0x3c
 8004d4e:	6c3a      	ldr	r2, [r7, #64]	; 0x40
 8004d50:	e841 2300 	strex	r3, r2, [r1]
 8004d54:	63bb      	str	r3, [r7, #56]	; 0x38
 8004d56:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8004d58:	2b00      	cmp	r3, #0
 8004d5a:	d1e6      	bne.n	8004d2a <UART_EndRxTransfer+0x8>
 8004d5c:	687b      	ldr	r3, [r7, #4]
 8004d5e:	681b      	ldr	r3, [r3, #0]
 8004d60:	3308      	adds	r3, #8
 8004d62:	623b      	str	r3, [r7, #32]
 8004d64:	6a3b      	ldr	r3, [r7, #32]
 8004d66:	e853 3f00 	ldrex	r3, [r3]
 8004d6a:	61fb      	str	r3, [r7, #28]
 8004d6c:	69fb      	ldr	r3, [r7, #28]
 8004d6e:	f023 0301 	bic.w	r3, r3, #1
 8004d72:	64bb      	str	r3, [r7, #72]	; 0x48
 8004d74:	687b      	ldr	r3, [r7, #4]
 8004d76:	681b      	ldr	r3, [r3, #0]
 8004d78:	3308      	adds	r3, #8
 8004d7a:	6cba      	ldr	r2, [r7, #72]	; 0x48
 8004d7c:	62fa      	str	r2, [r7, #44]	; 0x2c
 8004d7e:	62bb      	str	r3, [r7, #40]	; 0x28
 8004d80:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 8004d82:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 8004d84:	e841 2300 	strex	r3, r2, [r1]
 8004d88:	627b      	str	r3, [r7, #36]	; 0x24
 8004d8a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8004d8c:	2b00      	cmp	r3, #0
 8004d8e:	d1e5      	bne.n	8004d5c <UART_EndRxTransfer+0x3a>
 8004d90:	687b      	ldr	r3, [r7, #4]
 8004d92:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8004d94:	2b01      	cmp	r3, #1
 8004d96:	d118      	bne.n	8004dca <UART_EndRxTransfer+0xa8>
 8004d98:	687b      	ldr	r3, [r7, #4]
 8004d9a:	681b      	ldr	r3, [r3, #0]
 8004d9c:	60fb      	str	r3, [r7, #12]
 8004d9e:	68fb      	ldr	r3, [r7, #12]
 8004da0:	e853 3f00 	ldrex	r3, [r3]
 8004da4:	60bb      	str	r3, [r7, #8]
 8004da6:	68bb      	ldr	r3, [r7, #8]
 8004da8:	f023 0310 	bic.w	r3, r3, #16
 8004dac:	647b      	str	r3, [r7, #68]	; 0x44
 8004dae:	687b      	ldr	r3, [r7, #4]
 8004db0:	681b      	ldr	r3, [r3, #0]
 8004db2:	461a      	mov	r2, r3
 8004db4:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8004db6:	61bb      	str	r3, [r7, #24]
 8004db8:	617a      	str	r2, [r7, #20]
 8004dba:	6979      	ldr	r1, [r7, #20]
 8004dbc:	69ba      	ldr	r2, [r7, #24]
 8004dbe:	e841 2300 	strex	r3, r2, [r1]
 8004dc2:	613b      	str	r3, [r7, #16]
 8004dc4:	693b      	ldr	r3, [r7, #16]
 8004dc6:	2b00      	cmp	r3, #0
 8004dc8:	d1e6      	bne.n	8004d98 <UART_EndRxTransfer+0x76>
 8004dca:	687b      	ldr	r3, [r7, #4]
 8004dcc:	2220      	movs	r2, #32
 8004dce:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
 8004dd2:	687b      	ldr	r3, [r7, #4]
 8004dd4:	2200      	movs	r2, #0
 8004dd6:	661a      	str	r2, [r3, #96]	; 0x60
 8004dd8:	687b      	ldr	r3, [r7, #4]
 8004dda:	2200      	movs	r2, #0
 8004ddc:	669a      	str	r2, [r3, #104]	; 0x68
 8004dde:	bf00      	nop
 8004de0:	3754      	adds	r7, #84	; 0x54
 8004de2:	46bd      	mov	sp, r7
 8004de4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004de8:	4770      	bx	lr
	...

08004dec <std>:
 8004dec:	2300      	movs	r3, #0
 8004dee:	b510      	push	{r4, lr}
 8004df0:	4604      	mov	r4, r0
 8004df2:	e9c0 3300 	strd	r3, r3, [r0]
 8004df6:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8004dfa:	6083      	str	r3, [r0, #8]
 8004dfc:	8181      	strh	r1, [r0, #12]
 8004dfe:	6643      	str	r3, [r0, #100]	; 0x64
 8004e00:	81c2      	strh	r2, [r0, #14]
 8004e02:	6183      	str	r3, [r0, #24]
 8004e04:	4619      	mov	r1, r3
 8004e06:	2208      	movs	r2, #8
 8004e08:	305c      	adds	r0, #92	; 0x5c
 8004e0a:	f000 f9f7 	bl	80051fc <memset>
 8004e0e:	4b0d      	ldr	r3, [pc, #52]	; (8004e44 <std+0x58>)
 8004e10:	6263      	str	r3, [r4, #36]	; 0x24
 8004e12:	4b0d      	ldr	r3, [pc, #52]	; (8004e48 <std+0x5c>)
 8004e14:	62a3      	str	r3, [r4, #40]	; 0x28
 8004e16:	4b0d      	ldr	r3, [pc, #52]	; (8004e4c <std+0x60>)
 8004e18:	62e3      	str	r3, [r4, #44]	; 0x2c
 8004e1a:	4b0d      	ldr	r3, [pc, #52]	; (8004e50 <std+0x64>)
 8004e1c:	6323      	str	r3, [r4, #48]	; 0x30
 8004e1e:	4b0d      	ldr	r3, [pc, #52]	; (8004e54 <std+0x68>)
 8004e20:	6224      	str	r4, [r4, #32]
 8004e22:	429c      	cmp	r4, r3
 8004e24:	d006      	beq.n	8004e34 <std+0x48>
 8004e26:	f103 0268 	add.w	r2, r3, #104	; 0x68
 8004e2a:	4294      	cmp	r4, r2
 8004e2c:	d002      	beq.n	8004e34 <std+0x48>
 8004e2e:	33d0      	adds	r3, #208	; 0xd0
 8004e30:	429c      	cmp	r4, r3
 8004e32:	d105      	bne.n	8004e40 <std+0x54>
 8004e34:	f104 0058 	add.w	r0, r4, #88	; 0x58
 8004e38:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8004e3c:	f000 ba56 	b.w	80052ec <__retarget_lock_init_recursive>
 8004e40:	bd10      	pop	{r4, pc}
 8004e42:	bf00      	nop
 8004e44:	0800504d 	.word	0x0800504d
 8004e48:	0800506f 	.word	0x0800506f
 8004e4c:	080050a7 	.word	0x080050a7
 8004e50:	080050cb 	.word	0x080050cb
 8004e54:	20000200 	.word	0x20000200

08004e58 <stdio_exit_handler>:
 8004e58:	4a02      	ldr	r2, [pc, #8]	; (8004e64 <stdio_exit_handler+0xc>)
 8004e5a:	4903      	ldr	r1, [pc, #12]	; (8004e68 <stdio_exit_handler+0x10>)
 8004e5c:	4803      	ldr	r0, [pc, #12]	; (8004e6c <stdio_exit_handler+0x14>)
 8004e5e:	f000 b869 	b.w	8004f34 <_fwalk_sglue>
 8004e62:	bf00      	nop
 8004e64:	2000000c 	.word	0x2000000c
 8004e68:	08005b99 	.word	0x08005b99
 8004e6c:	20000018 	.word	0x20000018

08004e70 <cleanup_stdio>:
 8004e70:	6841      	ldr	r1, [r0, #4]
 8004e72:	4b0c      	ldr	r3, [pc, #48]	; (8004ea4 <cleanup_stdio+0x34>)
 8004e74:	4299      	cmp	r1, r3
 8004e76:	b510      	push	{r4, lr}
 8004e78:	4604      	mov	r4, r0
 8004e7a:	d001      	beq.n	8004e80 <cleanup_stdio+0x10>
 8004e7c:	f000 fe8c 	bl	8005b98 <_fflush_r>
 8004e80:	68a1      	ldr	r1, [r4, #8]
 8004e82:	4b09      	ldr	r3, [pc, #36]	; (8004ea8 <cleanup_stdio+0x38>)
 8004e84:	4299      	cmp	r1, r3
 8004e86:	d002      	beq.n	8004e8e <cleanup_stdio+0x1e>
 8004e88:	4620      	mov	r0, r4
 8004e8a:	f000 fe85 	bl	8005b98 <_fflush_r>
 8004e8e:	68e1      	ldr	r1, [r4, #12]
 8004e90:	4b06      	ldr	r3, [pc, #24]	; (8004eac <cleanup_stdio+0x3c>)
 8004e92:	4299      	cmp	r1, r3
 8004e94:	d004      	beq.n	8004ea0 <cleanup_stdio+0x30>
 8004e96:	4620      	mov	r0, r4
 8004e98:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8004e9c:	f000 be7c 	b.w	8005b98 <_fflush_r>
 8004ea0:	bd10      	pop	{r4, pc}
 8004ea2:	bf00      	nop
 8004ea4:	20000200 	.word	0x20000200
 8004ea8:	20000268 	.word	0x20000268
 8004eac:	200002d0 	.word	0x200002d0

08004eb0 <global_stdio_init.part.0>:
 8004eb0:	b510      	push	{r4, lr}
 8004eb2:	4b0b      	ldr	r3, [pc, #44]	; (8004ee0 <global_stdio_init.part.0+0x30>)
 8004eb4:	4c0b      	ldr	r4, [pc, #44]	; (8004ee4 <global_stdio_init.part.0+0x34>)
 8004eb6:	4a0c      	ldr	r2, [pc, #48]	; (8004ee8 <global_stdio_init.part.0+0x38>)
 8004eb8:	601a      	str	r2, [r3, #0]
 8004eba:	4620      	mov	r0, r4
 8004ebc:	2200      	movs	r2, #0
 8004ebe:	2104      	movs	r1, #4
 8004ec0:	f7ff ff94 	bl	8004dec <std>
 8004ec4:	f104 0068 	add.w	r0, r4, #104	; 0x68
 8004ec8:	2201      	movs	r2, #1
 8004eca:	2109      	movs	r1, #9
 8004ecc:	f7ff ff8e 	bl	8004dec <std>
 8004ed0:	f104 00d0 	add.w	r0, r4, #208	; 0xd0
 8004ed4:	2202      	movs	r2, #2
 8004ed6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8004eda:	2112      	movs	r1, #18
 8004edc:	f7ff bf86 	b.w	8004dec <std>
 8004ee0:	20000338 	.word	0x20000338
 8004ee4:	20000200 	.word	0x20000200
 8004ee8:	08004e59 	.word	0x08004e59

08004eec <__sfp_lock_acquire>:
 8004eec:	4801      	ldr	r0, [pc, #4]	; (8004ef4 <__sfp_lock_acquire+0x8>)
 8004eee:	f000 b9fe 	b.w	80052ee <__retarget_lock_acquire_recursive>
 8004ef2:	bf00      	nop
 8004ef4:	20000341 	.word	0x20000341

08004ef8 <__sfp_lock_release>:
 8004ef8:	4801      	ldr	r0, [pc, #4]	; (8004f00 <__sfp_lock_release+0x8>)
 8004efa:	f000 b9f9 	b.w	80052f0 <__retarget_lock_release_recursive>
 8004efe:	bf00      	nop
 8004f00:	20000341 	.word	0x20000341

08004f04 <__sinit>:
 8004f04:	b510      	push	{r4, lr}
 8004f06:	4604      	mov	r4, r0
 8004f08:	f7ff fff0 	bl	8004eec <__sfp_lock_acquire>
 8004f0c:	6a23      	ldr	r3, [r4, #32]
 8004f0e:	b11b      	cbz	r3, 8004f18 <__sinit+0x14>
 8004f10:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8004f14:	f7ff bff0 	b.w	8004ef8 <__sfp_lock_release>
 8004f18:	4b04      	ldr	r3, [pc, #16]	; (8004f2c <__sinit+0x28>)
 8004f1a:	6223      	str	r3, [r4, #32]
 8004f1c:	4b04      	ldr	r3, [pc, #16]	; (8004f30 <__sinit+0x2c>)
 8004f1e:	681b      	ldr	r3, [r3, #0]
 8004f20:	2b00      	cmp	r3, #0
 8004f22:	d1f5      	bne.n	8004f10 <__sinit+0xc>
 8004f24:	f7ff ffc4 	bl	8004eb0 <global_stdio_init.part.0>
 8004f28:	e7f2      	b.n	8004f10 <__sinit+0xc>
 8004f2a:	bf00      	nop
 8004f2c:	08004e71 	.word	0x08004e71
 8004f30:	20000338 	.word	0x20000338

08004f34 <_fwalk_sglue>:
 8004f34:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8004f38:	4607      	mov	r7, r0
 8004f3a:	4688      	mov	r8, r1
 8004f3c:	4614      	mov	r4, r2
 8004f3e:	2600      	movs	r6, #0
 8004f40:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8004f44:	f1b9 0901 	subs.w	r9, r9, #1
 8004f48:	d505      	bpl.n	8004f56 <_fwalk_sglue+0x22>
 8004f4a:	6824      	ldr	r4, [r4, #0]
 8004f4c:	2c00      	cmp	r4, #0
 8004f4e:	d1f7      	bne.n	8004f40 <_fwalk_sglue+0xc>
 8004f50:	4630      	mov	r0, r6
 8004f52:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8004f56:	89ab      	ldrh	r3, [r5, #12]
 8004f58:	2b01      	cmp	r3, #1
 8004f5a:	d907      	bls.n	8004f6c <_fwalk_sglue+0x38>
 8004f5c:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8004f60:	3301      	adds	r3, #1
 8004f62:	d003      	beq.n	8004f6c <_fwalk_sglue+0x38>
 8004f64:	4629      	mov	r1, r5
 8004f66:	4638      	mov	r0, r7
 8004f68:	47c0      	blx	r8
 8004f6a:	4306      	orrs	r6, r0
 8004f6c:	3568      	adds	r5, #104	; 0x68
 8004f6e:	e7e9      	b.n	8004f44 <_fwalk_sglue+0x10>

08004f70 <iprintf>:
 8004f70:	b40f      	push	{r0, r1, r2, r3}
 8004f72:	b507      	push	{r0, r1, r2, lr}
 8004f74:	4906      	ldr	r1, [pc, #24]	; (8004f90 <iprintf+0x20>)
 8004f76:	ab04      	add	r3, sp, #16
 8004f78:	6808      	ldr	r0, [r1, #0]
 8004f7a:	f853 2b04 	ldr.w	r2, [r3], #4
 8004f7e:	6881      	ldr	r1, [r0, #8]
 8004f80:	9301      	str	r3, [sp, #4]
 8004f82:	f000 fad9 	bl	8005538 <_vfiprintf_r>
 8004f86:	b003      	add	sp, #12
 8004f88:	f85d eb04 	ldr.w	lr, [sp], #4
 8004f8c:	b004      	add	sp, #16
 8004f8e:	4770      	bx	lr
 8004f90:	20000064 	.word	0x20000064

08004f94 <_puts_r>:
 8004f94:	6a03      	ldr	r3, [r0, #32]
 8004f96:	b570      	push	{r4, r5, r6, lr}
 8004f98:	6884      	ldr	r4, [r0, #8]
 8004f9a:	4605      	mov	r5, r0
 8004f9c:	460e      	mov	r6, r1
 8004f9e:	b90b      	cbnz	r3, 8004fa4 <_puts_r+0x10>
 8004fa0:	f7ff ffb0 	bl	8004f04 <__sinit>
 8004fa4:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8004fa6:	07db      	lsls	r3, r3, #31
 8004fa8:	d405      	bmi.n	8004fb6 <_puts_r+0x22>
 8004faa:	89a3      	ldrh	r3, [r4, #12]
 8004fac:	0598      	lsls	r0, r3, #22
 8004fae:	d402      	bmi.n	8004fb6 <_puts_r+0x22>
 8004fb0:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8004fb2:	f000 f99c 	bl	80052ee <__retarget_lock_acquire_recursive>
 8004fb6:	89a3      	ldrh	r3, [r4, #12]
 8004fb8:	0719      	lsls	r1, r3, #28
 8004fba:	d513      	bpl.n	8004fe4 <_puts_r+0x50>
 8004fbc:	6923      	ldr	r3, [r4, #16]
 8004fbe:	b18b      	cbz	r3, 8004fe4 <_puts_r+0x50>
 8004fc0:	3e01      	subs	r6, #1
 8004fc2:	68a3      	ldr	r3, [r4, #8]
 8004fc4:	f816 1f01 	ldrb.w	r1, [r6, #1]!
 8004fc8:	3b01      	subs	r3, #1
 8004fca:	60a3      	str	r3, [r4, #8]
 8004fcc:	b9e9      	cbnz	r1, 800500a <_puts_r+0x76>
 8004fce:	2b00      	cmp	r3, #0
 8004fd0:	da2e      	bge.n	8005030 <_puts_r+0x9c>
 8004fd2:	4622      	mov	r2, r4
 8004fd4:	210a      	movs	r1, #10
 8004fd6:	4628      	mov	r0, r5
 8004fd8:	f000 f87b 	bl	80050d2 <__swbuf_r>
 8004fdc:	3001      	adds	r0, #1
 8004fde:	d007      	beq.n	8004ff0 <_puts_r+0x5c>
 8004fe0:	250a      	movs	r5, #10
 8004fe2:	e007      	b.n	8004ff4 <_puts_r+0x60>
 8004fe4:	4621      	mov	r1, r4
 8004fe6:	4628      	mov	r0, r5
 8004fe8:	f000 f8b0 	bl	800514c <__swsetup_r>
 8004fec:	2800      	cmp	r0, #0
 8004fee:	d0e7      	beq.n	8004fc0 <_puts_r+0x2c>
 8004ff0:	f04f 35ff 	mov.w	r5, #4294967295
 8004ff4:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8004ff6:	07da      	lsls	r2, r3, #31
 8004ff8:	d405      	bmi.n	8005006 <_puts_r+0x72>
 8004ffa:	89a3      	ldrh	r3, [r4, #12]
 8004ffc:	059b      	lsls	r3, r3, #22
 8004ffe:	d402      	bmi.n	8005006 <_puts_r+0x72>
 8005000:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8005002:	f000 f975 	bl	80052f0 <__retarget_lock_release_recursive>
 8005006:	4628      	mov	r0, r5
 8005008:	bd70      	pop	{r4, r5, r6, pc}
 800500a:	2b00      	cmp	r3, #0
 800500c:	da04      	bge.n	8005018 <_puts_r+0x84>
 800500e:	69a2      	ldr	r2, [r4, #24]
 8005010:	429a      	cmp	r2, r3
 8005012:	dc06      	bgt.n	8005022 <_puts_r+0x8e>
 8005014:	290a      	cmp	r1, #10
 8005016:	d004      	beq.n	8005022 <_puts_r+0x8e>
 8005018:	6823      	ldr	r3, [r4, #0]
 800501a:	1c5a      	adds	r2, r3, #1
 800501c:	6022      	str	r2, [r4, #0]
 800501e:	7019      	strb	r1, [r3, #0]
 8005020:	e7cf      	b.n	8004fc2 <_puts_r+0x2e>
 8005022:	4622      	mov	r2, r4
 8005024:	4628      	mov	r0, r5
 8005026:	f000 f854 	bl	80050d2 <__swbuf_r>
 800502a:	3001      	adds	r0, #1
 800502c:	d1c9      	bne.n	8004fc2 <_puts_r+0x2e>
 800502e:	e7df      	b.n	8004ff0 <_puts_r+0x5c>
 8005030:	6823      	ldr	r3, [r4, #0]
 8005032:	250a      	movs	r5, #10
 8005034:	1c5a      	adds	r2, r3, #1
 8005036:	6022      	str	r2, [r4, #0]
 8005038:	701d      	strb	r5, [r3, #0]
 800503a:	e7db      	b.n	8004ff4 <_puts_r+0x60>

0800503c <puts>:
 800503c:	4b02      	ldr	r3, [pc, #8]	; (8005048 <puts+0xc>)
 800503e:	4601      	mov	r1, r0
 8005040:	6818      	ldr	r0, [r3, #0]
 8005042:	f7ff bfa7 	b.w	8004f94 <_puts_r>
 8005046:	bf00      	nop
 8005048:	20000064 	.word	0x20000064

0800504c <__sread>:
 800504c:	b510      	push	{r4, lr}
 800504e:	460c      	mov	r4, r1
 8005050:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8005054:	f000 f8fc 	bl	8005250 <_read_r>
 8005058:	2800      	cmp	r0, #0
 800505a:	bfab      	itete	ge
 800505c:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 800505e:	89a3      	ldrhlt	r3, [r4, #12]
 8005060:	181b      	addge	r3, r3, r0
 8005062:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 8005066:	bfac      	ite	ge
 8005068:	6563      	strge	r3, [r4, #84]	; 0x54
 800506a:	81a3      	strhlt	r3, [r4, #12]
 800506c:	bd10      	pop	{r4, pc}

0800506e <__swrite>:
 800506e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8005072:	461f      	mov	r7, r3
 8005074:	898b      	ldrh	r3, [r1, #12]
 8005076:	05db      	lsls	r3, r3, #23
 8005078:	4605      	mov	r5, r0
 800507a:	460c      	mov	r4, r1
 800507c:	4616      	mov	r6, r2
 800507e:	d505      	bpl.n	800508c <__swrite+0x1e>
 8005080:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8005084:	2302      	movs	r3, #2
 8005086:	2200      	movs	r2, #0
 8005088:	f000 f8d0 	bl	800522c <_lseek_r>
 800508c:	89a3      	ldrh	r3, [r4, #12]
 800508e:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8005092:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8005096:	81a3      	strh	r3, [r4, #12]
 8005098:	4632      	mov	r2, r6
 800509a:	463b      	mov	r3, r7
 800509c:	4628      	mov	r0, r5
 800509e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80050a2:	f000 b8e7 	b.w	8005274 <_write_r>

080050a6 <__sseek>:
 80050a6:	b510      	push	{r4, lr}
 80050a8:	460c      	mov	r4, r1
 80050aa:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80050ae:	f000 f8bd 	bl	800522c <_lseek_r>
 80050b2:	1c43      	adds	r3, r0, #1
 80050b4:	89a3      	ldrh	r3, [r4, #12]
 80050b6:	bf15      	itete	ne
 80050b8:	6560      	strne	r0, [r4, #84]	; 0x54
 80050ba:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 80050be:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 80050c2:	81a3      	strheq	r3, [r4, #12]
 80050c4:	bf18      	it	ne
 80050c6:	81a3      	strhne	r3, [r4, #12]
 80050c8:	bd10      	pop	{r4, pc}

080050ca <__sclose>:
 80050ca:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80050ce:	f000 b89d 	b.w	800520c <_close_r>

080050d2 <__swbuf_r>:
 80050d2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80050d4:	460e      	mov	r6, r1
 80050d6:	4614      	mov	r4, r2
 80050d8:	4605      	mov	r5, r0
 80050da:	b118      	cbz	r0, 80050e4 <__swbuf_r+0x12>
 80050dc:	6a03      	ldr	r3, [r0, #32]
 80050de:	b90b      	cbnz	r3, 80050e4 <__swbuf_r+0x12>
 80050e0:	f7ff ff10 	bl	8004f04 <__sinit>
 80050e4:	69a3      	ldr	r3, [r4, #24]
 80050e6:	60a3      	str	r3, [r4, #8]
 80050e8:	89a3      	ldrh	r3, [r4, #12]
 80050ea:	071a      	lsls	r2, r3, #28
 80050ec:	d525      	bpl.n	800513a <__swbuf_r+0x68>
 80050ee:	6923      	ldr	r3, [r4, #16]
 80050f0:	b31b      	cbz	r3, 800513a <__swbuf_r+0x68>
 80050f2:	6823      	ldr	r3, [r4, #0]
 80050f4:	6922      	ldr	r2, [r4, #16]
 80050f6:	1a98      	subs	r0, r3, r2
 80050f8:	6963      	ldr	r3, [r4, #20]
 80050fa:	b2f6      	uxtb	r6, r6
 80050fc:	4283      	cmp	r3, r0
 80050fe:	4637      	mov	r7, r6
 8005100:	dc04      	bgt.n	800510c <__swbuf_r+0x3a>
 8005102:	4621      	mov	r1, r4
 8005104:	4628      	mov	r0, r5
 8005106:	f000 fd47 	bl	8005b98 <_fflush_r>
 800510a:	b9e0      	cbnz	r0, 8005146 <__swbuf_r+0x74>
 800510c:	68a3      	ldr	r3, [r4, #8]
 800510e:	3b01      	subs	r3, #1
 8005110:	60a3      	str	r3, [r4, #8]
 8005112:	6823      	ldr	r3, [r4, #0]
 8005114:	1c5a      	adds	r2, r3, #1
 8005116:	6022      	str	r2, [r4, #0]
 8005118:	701e      	strb	r6, [r3, #0]
 800511a:	6962      	ldr	r2, [r4, #20]
 800511c:	1c43      	adds	r3, r0, #1
 800511e:	429a      	cmp	r2, r3
 8005120:	d004      	beq.n	800512c <__swbuf_r+0x5a>
 8005122:	89a3      	ldrh	r3, [r4, #12]
 8005124:	07db      	lsls	r3, r3, #31
 8005126:	d506      	bpl.n	8005136 <__swbuf_r+0x64>
 8005128:	2e0a      	cmp	r6, #10
 800512a:	d104      	bne.n	8005136 <__swbuf_r+0x64>
 800512c:	4621      	mov	r1, r4
 800512e:	4628      	mov	r0, r5
 8005130:	f000 fd32 	bl	8005b98 <_fflush_r>
 8005134:	b938      	cbnz	r0, 8005146 <__swbuf_r+0x74>
 8005136:	4638      	mov	r0, r7
 8005138:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800513a:	4621      	mov	r1, r4
 800513c:	4628      	mov	r0, r5
 800513e:	f000 f805 	bl	800514c <__swsetup_r>
 8005142:	2800      	cmp	r0, #0
 8005144:	d0d5      	beq.n	80050f2 <__swbuf_r+0x20>
 8005146:	f04f 37ff 	mov.w	r7, #4294967295
 800514a:	e7f4      	b.n	8005136 <__swbuf_r+0x64>

0800514c <__swsetup_r>:
 800514c:	b538      	push	{r3, r4, r5, lr}
 800514e:	4b2a      	ldr	r3, [pc, #168]	; (80051f8 <__swsetup_r+0xac>)
 8005150:	4605      	mov	r5, r0
 8005152:	6818      	ldr	r0, [r3, #0]
 8005154:	460c      	mov	r4, r1
 8005156:	b118      	cbz	r0, 8005160 <__swsetup_r+0x14>
 8005158:	6a03      	ldr	r3, [r0, #32]
 800515a:	b90b      	cbnz	r3, 8005160 <__swsetup_r+0x14>
 800515c:	f7ff fed2 	bl	8004f04 <__sinit>
 8005160:	89a3      	ldrh	r3, [r4, #12]
 8005162:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8005166:	0718      	lsls	r0, r3, #28
 8005168:	d422      	bmi.n	80051b0 <__swsetup_r+0x64>
 800516a:	06d9      	lsls	r1, r3, #27
 800516c:	d407      	bmi.n	800517e <__swsetup_r+0x32>
 800516e:	2309      	movs	r3, #9
 8005170:	602b      	str	r3, [r5, #0]
 8005172:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 8005176:	81a3      	strh	r3, [r4, #12]
 8005178:	f04f 30ff 	mov.w	r0, #4294967295
 800517c:	e034      	b.n	80051e8 <__swsetup_r+0x9c>
 800517e:	0758      	lsls	r0, r3, #29
 8005180:	d512      	bpl.n	80051a8 <__swsetup_r+0x5c>
 8005182:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8005184:	b141      	cbz	r1, 8005198 <__swsetup_r+0x4c>
 8005186:	f104 0344 	add.w	r3, r4, #68	; 0x44
 800518a:	4299      	cmp	r1, r3
 800518c:	d002      	beq.n	8005194 <__swsetup_r+0x48>
 800518e:	4628      	mov	r0, r5
 8005190:	f000 f8b0 	bl	80052f4 <_free_r>
 8005194:	2300      	movs	r3, #0
 8005196:	6363      	str	r3, [r4, #52]	; 0x34
 8005198:	89a3      	ldrh	r3, [r4, #12]
 800519a:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 800519e:	81a3      	strh	r3, [r4, #12]
 80051a0:	2300      	movs	r3, #0
 80051a2:	6063      	str	r3, [r4, #4]
 80051a4:	6923      	ldr	r3, [r4, #16]
 80051a6:	6023      	str	r3, [r4, #0]
 80051a8:	89a3      	ldrh	r3, [r4, #12]
 80051aa:	f043 0308 	orr.w	r3, r3, #8
 80051ae:	81a3      	strh	r3, [r4, #12]
 80051b0:	6923      	ldr	r3, [r4, #16]
 80051b2:	b94b      	cbnz	r3, 80051c8 <__swsetup_r+0x7c>
 80051b4:	89a3      	ldrh	r3, [r4, #12]
 80051b6:	f403 7320 	and.w	r3, r3, #640	; 0x280
 80051ba:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 80051be:	d003      	beq.n	80051c8 <__swsetup_r+0x7c>
 80051c0:	4621      	mov	r1, r4
 80051c2:	4628      	mov	r0, r5
 80051c4:	f000 fd36 	bl	8005c34 <__smakebuf_r>
 80051c8:	89a0      	ldrh	r0, [r4, #12]
 80051ca:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 80051ce:	f010 0301 	ands.w	r3, r0, #1
 80051d2:	d00a      	beq.n	80051ea <__swsetup_r+0x9e>
 80051d4:	2300      	movs	r3, #0
 80051d6:	60a3      	str	r3, [r4, #8]
 80051d8:	6963      	ldr	r3, [r4, #20]
 80051da:	425b      	negs	r3, r3
 80051dc:	61a3      	str	r3, [r4, #24]
 80051de:	6923      	ldr	r3, [r4, #16]
 80051e0:	b943      	cbnz	r3, 80051f4 <__swsetup_r+0xa8>
 80051e2:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 80051e6:	d1c4      	bne.n	8005172 <__swsetup_r+0x26>
 80051e8:	bd38      	pop	{r3, r4, r5, pc}
 80051ea:	0781      	lsls	r1, r0, #30
 80051ec:	bf58      	it	pl
 80051ee:	6963      	ldrpl	r3, [r4, #20]
 80051f0:	60a3      	str	r3, [r4, #8]
 80051f2:	e7f4      	b.n	80051de <__swsetup_r+0x92>
 80051f4:	2000      	movs	r0, #0
 80051f6:	e7f7      	b.n	80051e8 <__swsetup_r+0x9c>
 80051f8:	20000064 	.word	0x20000064

080051fc <memset>:
 80051fc:	4402      	add	r2, r0
 80051fe:	4603      	mov	r3, r0
 8005200:	4293      	cmp	r3, r2
 8005202:	d100      	bne.n	8005206 <memset+0xa>
 8005204:	4770      	bx	lr
 8005206:	f803 1b01 	strb.w	r1, [r3], #1
 800520a:	e7f9      	b.n	8005200 <memset+0x4>

0800520c <_close_r>:
 800520c:	b538      	push	{r3, r4, r5, lr}
 800520e:	4d06      	ldr	r5, [pc, #24]	; (8005228 <_close_r+0x1c>)
 8005210:	2300      	movs	r3, #0
 8005212:	4604      	mov	r4, r0
 8005214:	4608      	mov	r0, r1
 8005216:	602b      	str	r3, [r5, #0]
 8005218:	f7fc f89b 	bl	8001352 <_close>
 800521c:	1c43      	adds	r3, r0, #1
 800521e:	d102      	bne.n	8005226 <_close_r+0x1a>
 8005220:	682b      	ldr	r3, [r5, #0]
 8005222:	b103      	cbz	r3, 8005226 <_close_r+0x1a>
 8005224:	6023      	str	r3, [r4, #0]
 8005226:	bd38      	pop	{r3, r4, r5, pc}
 8005228:	2000033c 	.word	0x2000033c

0800522c <_lseek_r>:
 800522c:	b538      	push	{r3, r4, r5, lr}
 800522e:	4d07      	ldr	r5, [pc, #28]	; (800524c <_lseek_r+0x20>)
 8005230:	4604      	mov	r4, r0
 8005232:	4608      	mov	r0, r1
 8005234:	4611      	mov	r1, r2
 8005236:	2200      	movs	r2, #0
 8005238:	602a      	str	r2, [r5, #0]
 800523a:	461a      	mov	r2, r3
 800523c:	f7fc f8b0 	bl	80013a0 <_lseek>
 8005240:	1c43      	adds	r3, r0, #1
 8005242:	d102      	bne.n	800524a <_lseek_r+0x1e>
 8005244:	682b      	ldr	r3, [r5, #0]
 8005246:	b103      	cbz	r3, 800524a <_lseek_r+0x1e>
 8005248:	6023      	str	r3, [r4, #0]
 800524a:	bd38      	pop	{r3, r4, r5, pc}
 800524c:	2000033c 	.word	0x2000033c

08005250 <_read_r>:
 8005250:	b538      	push	{r3, r4, r5, lr}
 8005252:	4d07      	ldr	r5, [pc, #28]	; (8005270 <_read_r+0x20>)
 8005254:	4604      	mov	r4, r0
 8005256:	4608      	mov	r0, r1
 8005258:	4611      	mov	r1, r2
 800525a:	2200      	movs	r2, #0
 800525c:	602a      	str	r2, [r5, #0]
 800525e:	461a      	mov	r2, r3
 8005260:	f7fc f83e 	bl	80012e0 <_read>
 8005264:	1c43      	adds	r3, r0, #1
 8005266:	d102      	bne.n	800526e <_read_r+0x1e>
 8005268:	682b      	ldr	r3, [r5, #0]
 800526a:	b103      	cbz	r3, 800526e <_read_r+0x1e>
 800526c:	6023      	str	r3, [r4, #0]
 800526e:	bd38      	pop	{r3, r4, r5, pc}
 8005270:	2000033c 	.word	0x2000033c

08005274 <_write_r>:
 8005274:	b538      	push	{r3, r4, r5, lr}
 8005276:	4d07      	ldr	r5, [pc, #28]	; (8005294 <_write_r+0x20>)
 8005278:	4604      	mov	r4, r0
 800527a:	4608      	mov	r0, r1
 800527c:	4611      	mov	r1, r2
 800527e:	2200      	movs	r2, #0
 8005280:	602a      	str	r2, [r5, #0]
 8005282:	461a      	mov	r2, r3
 8005284:	f7fc f849 	bl	800131a <_write>
 8005288:	1c43      	adds	r3, r0, #1
 800528a:	d102      	bne.n	8005292 <_write_r+0x1e>
 800528c:	682b      	ldr	r3, [r5, #0]
 800528e:	b103      	cbz	r3, 8005292 <_write_r+0x1e>
 8005290:	6023      	str	r3, [r4, #0]
 8005292:	bd38      	pop	{r3, r4, r5, pc}
 8005294:	2000033c 	.word	0x2000033c

08005298 <__errno>:
 8005298:	4b01      	ldr	r3, [pc, #4]	; (80052a0 <__errno+0x8>)
 800529a:	6818      	ldr	r0, [r3, #0]
 800529c:	4770      	bx	lr
 800529e:	bf00      	nop
 80052a0:	20000064 	.word	0x20000064

080052a4 <__libc_init_array>:
 80052a4:	b570      	push	{r4, r5, r6, lr}
 80052a6:	4d0d      	ldr	r5, [pc, #52]	; (80052dc <__libc_init_array+0x38>)
 80052a8:	4c0d      	ldr	r4, [pc, #52]	; (80052e0 <__libc_init_array+0x3c>)
 80052aa:	1b64      	subs	r4, r4, r5
 80052ac:	10a4      	asrs	r4, r4, #2
 80052ae:	2600      	movs	r6, #0
 80052b0:	42a6      	cmp	r6, r4
 80052b2:	d109      	bne.n	80052c8 <__libc_init_array+0x24>
 80052b4:	4d0b      	ldr	r5, [pc, #44]	; (80052e4 <__libc_init_array+0x40>)
 80052b6:	4c0c      	ldr	r4, [pc, #48]	; (80052e8 <__libc_init_array+0x44>)
 80052b8:	f000 fd2a 	bl	8005d10 <_init>
 80052bc:	1b64      	subs	r4, r4, r5
 80052be:	10a4      	asrs	r4, r4, #2
 80052c0:	2600      	movs	r6, #0
 80052c2:	42a6      	cmp	r6, r4
 80052c4:	d105      	bne.n	80052d2 <__libc_init_array+0x2e>
 80052c6:	bd70      	pop	{r4, r5, r6, pc}
 80052c8:	f855 3b04 	ldr.w	r3, [r5], #4
 80052cc:	4798      	blx	r3
 80052ce:	3601      	adds	r6, #1
 80052d0:	e7ee      	b.n	80052b0 <__libc_init_array+0xc>
 80052d2:	f855 3b04 	ldr.w	r3, [r5], #4
 80052d6:	4798      	blx	r3
 80052d8:	3601      	adds	r6, #1
 80052da:	e7f2      	b.n	80052c2 <__libc_init_array+0x1e>
 80052dc:	08005f54 	.word	0x08005f54
 80052e0:	08005f54 	.word	0x08005f54
 80052e4:	08005f54 	.word	0x08005f54
 80052e8:	08005f58 	.word	0x08005f58

080052ec <__retarget_lock_init_recursive>:
 80052ec:	4770      	bx	lr

080052ee <__retarget_lock_acquire_recursive>:
 80052ee:	4770      	bx	lr

080052f0 <__retarget_lock_release_recursive>:
 80052f0:	4770      	bx	lr
	...

080052f4 <_free_r>:
 80052f4:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80052f6:	2900      	cmp	r1, #0
 80052f8:	d044      	beq.n	8005384 <_free_r+0x90>
 80052fa:	f851 3c04 	ldr.w	r3, [r1, #-4]
 80052fe:	9001      	str	r0, [sp, #4]
 8005300:	2b00      	cmp	r3, #0
 8005302:	f1a1 0404 	sub.w	r4, r1, #4
 8005306:	bfb8      	it	lt
 8005308:	18e4      	addlt	r4, r4, r3
 800530a:	f000 f8df 	bl	80054cc <__malloc_lock>
 800530e:	4a1e      	ldr	r2, [pc, #120]	; (8005388 <_free_r+0x94>)
 8005310:	9801      	ldr	r0, [sp, #4]
 8005312:	6813      	ldr	r3, [r2, #0]
 8005314:	b933      	cbnz	r3, 8005324 <_free_r+0x30>
 8005316:	6063      	str	r3, [r4, #4]
 8005318:	6014      	str	r4, [r2, #0]
 800531a:	b003      	add	sp, #12
 800531c:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8005320:	f000 b8da 	b.w	80054d8 <__malloc_unlock>
 8005324:	42a3      	cmp	r3, r4
 8005326:	d908      	bls.n	800533a <_free_r+0x46>
 8005328:	6825      	ldr	r5, [r4, #0]
 800532a:	1961      	adds	r1, r4, r5
 800532c:	428b      	cmp	r3, r1
 800532e:	bf01      	itttt	eq
 8005330:	6819      	ldreq	r1, [r3, #0]
 8005332:	685b      	ldreq	r3, [r3, #4]
 8005334:	1949      	addeq	r1, r1, r5
 8005336:	6021      	streq	r1, [r4, #0]
 8005338:	e7ed      	b.n	8005316 <_free_r+0x22>
 800533a:	461a      	mov	r2, r3
 800533c:	685b      	ldr	r3, [r3, #4]
 800533e:	b10b      	cbz	r3, 8005344 <_free_r+0x50>
 8005340:	42a3      	cmp	r3, r4
 8005342:	d9fa      	bls.n	800533a <_free_r+0x46>
 8005344:	6811      	ldr	r1, [r2, #0]
 8005346:	1855      	adds	r5, r2, r1
 8005348:	42a5      	cmp	r5, r4
 800534a:	d10b      	bne.n	8005364 <_free_r+0x70>
 800534c:	6824      	ldr	r4, [r4, #0]
 800534e:	4421      	add	r1, r4
 8005350:	1854      	adds	r4, r2, r1
 8005352:	42a3      	cmp	r3, r4
 8005354:	6011      	str	r1, [r2, #0]
 8005356:	d1e0      	bne.n	800531a <_free_r+0x26>
 8005358:	681c      	ldr	r4, [r3, #0]
 800535a:	685b      	ldr	r3, [r3, #4]
 800535c:	6053      	str	r3, [r2, #4]
 800535e:	440c      	add	r4, r1
 8005360:	6014      	str	r4, [r2, #0]
 8005362:	e7da      	b.n	800531a <_free_r+0x26>
 8005364:	d902      	bls.n	800536c <_free_r+0x78>
 8005366:	230c      	movs	r3, #12
 8005368:	6003      	str	r3, [r0, #0]
 800536a:	e7d6      	b.n	800531a <_free_r+0x26>
 800536c:	6825      	ldr	r5, [r4, #0]
 800536e:	1961      	adds	r1, r4, r5
 8005370:	428b      	cmp	r3, r1
 8005372:	bf04      	itt	eq
 8005374:	6819      	ldreq	r1, [r3, #0]
 8005376:	685b      	ldreq	r3, [r3, #4]
 8005378:	6063      	str	r3, [r4, #4]
 800537a:	bf04      	itt	eq
 800537c:	1949      	addeq	r1, r1, r5
 800537e:	6021      	streq	r1, [r4, #0]
 8005380:	6054      	str	r4, [r2, #4]
 8005382:	e7ca      	b.n	800531a <_free_r+0x26>
 8005384:	b003      	add	sp, #12
 8005386:	bd30      	pop	{r4, r5, pc}
 8005388:	20000344 	.word	0x20000344

0800538c <sbrk_aligned>:
 800538c:	b570      	push	{r4, r5, r6, lr}
 800538e:	4e0e      	ldr	r6, [pc, #56]	; (80053c8 <sbrk_aligned+0x3c>)
 8005390:	460c      	mov	r4, r1
 8005392:	6831      	ldr	r1, [r6, #0]
 8005394:	4605      	mov	r5, r0
 8005396:	b911      	cbnz	r1, 800539e <sbrk_aligned+0x12>
 8005398:	f000 fcaa 	bl	8005cf0 <_sbrk_r>
 800539c:	6030      	str	r0, [r6, #0]
 800539e:	4621      	mov	r1, r4
 80053a0:	4628      	mov	r0, r5
 80053a2:	f000 fca5 	bl	8005cf0 <_sbrk_r>
 80053a6:	1c43      	adds	r3, r0, #1
 80053a8:	d00a      	beq.n	80053c0 <sbrk_aligned+0x34>
 80053aa:	1cc4      	adds	r4, r0, #3
 80053ac:	f024 0403 	bic.w	r4, r4, #3
 80053b0:	42a0      	cmp	r0, r4
 80053b2:	d007      	beq.n	80053c4 <sbrk_aligned+0x38>
 80053b4:	1a21      	subs	r1, r4, r0
 80053b6:	4628      	mov	r0, r5
 80053b8:	f000 fc9a 	bl	8005cf0 <_sbrk_r>
 80053bc:	3001      	adds	r0, #1
 80053be:	d101      	bne.n	80053c4 <sbrk_aligned+0x38>
 80053c0:	f04f 34ff 	mov.w	r4, #4294967295
 80053c4:	4620      	mov	r0, r4
 80053c6:	bd70      	pop	{r4, r5, r6, pc}
 80053c8:	20000348 	.word	0x20000348

080053cc <_malloc_r>:
 80053cc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80053d0:	1ccd      	adds	r5, r1, #3
 80053d2:	f025 0503 	bic.w	r5, r5, #3
 80053d6:	3508      	adds	r5, #8
 80053d8:	2d0c      	cmp	r5, #12
 80053da:	bf38      	it	cc
 80053dc:	250c      	movcc	r5, #12
 80053de:	2d00      	cmp	r5, #0
 80053e0:	4607      	mov	r7, r0
 80053e2:	db01      	blt.n	80053e8 <_malloc_r+0x1c>
 80053e4:	42a9      	cmp	r1, r5
 80053e6:	d905      	bls.n	80053f4 <_malloc_r+0x28>
 80053e8:	230c      	movs	r3, #12
 80053ea:	603b      	str	r3, [r7, #0]
 80053ec:	2600      	movs	r6, #0
 80053ee:	4630      	mov	r0, r6
 80053f0:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80053f4:	f8df 80d0 	ldr.w	r8, [pc, #208]	; 80054c8 <_malloc_r+0xfc>
 80053f8:	f000 f868 	bl	80054cc <__malloc_lock>
 80053fc:	f8d8 3000 	ldr.w	r3, [r8]
 8005400:	461c      	mov	r4, r3
 8005402:	bb5c      	cbnz	r4, 800545c <_malloc_r+0x90>
 8005404:	4629      	mov	r1, r5
 8005406:	4638      	mov	r0, r7
 8005408:	f7ff ffc0 	bl	800538c <sbrk_aligned>
 800540c:	1c43      	adds	r3, r0, #1
 800540e:	4604      	mov	r4, r0
 8005410:	d155      	bne.n	80054be <_malloc_r+0xf2>
 8005412:	f8d8 4000 	ldr.w	r4, [r8]
 8005416:	4626      	mov	r6, r4
 8005418:	2e00      	cmp	r6, #0
 800541a:	d145      	bne.n	80054a8 <_malloc_r+0xdc>
 800541c:	2c00      	cmp	r4, #0
 800541e:	d048      	beq.n	80054b2 <_malloc_r+0xe6>
 8005420:	6823      	ldr	r3, [r4, #0]
 8005422:	4631      	mov	r1, r6
 8005424:	4638      	mov	r0, r7
 8005426:	eb04 0903 	add.w	r9, r4, r3
 800542a:	f000 fc61 	bl	8005cf0 <_sbrk_r>
 800542e:	4581      	cmp	r9, r0
 8005430:	d13f      	bne.n	80054b2 <_malloc_r+0xe6>
 8005432:	6821      	ldr	r1, [r4, #0]
 8005434:	1a6d      	subs	r5, r5, r1
 8005436:	4629      	mov	r1, r5
 8005438:	4638      	mov	r0, r7
 800543a:	f7ff ffa7 	bl	800538c <sbrk_aligned>
 800543e:	3001      	adds	r0, #1
 8005440:	d037      	beq.n	80054b2 <_malloc_r+0xe6>
 8005442:	6823      	ldr	r3, [r4, #0]
 8005444:	442b      	add	r3, r5
 8005446:	6023      	str	r3, [r4, #0]
 8005448:	f8d8 3000 	ldr.w	r3, [r8]
 800544c:	2b00      	cmp	r3, #0
 800544e:	d038      	beq.n	80054c2 <_malloc_r+0xf6>
 8005450:	685a      	ldr	r2, [r3, #4]
 8005452:	42a2      	cmp	r2, r4
 8005454:	d12b      	bne.n	80054ae <_malloc_r+0xe2>
 8005456:	2200      	movs	r2, #0
 8005458:	605a      	str	r2, [r3, #4]
 800545a:	e00f      	b.n	800547c <_malloc_r+0xb0>
 800545c:	6822      	ldr	r2, [r4, #0]
 800545e:	1b52      	subs	r2, r2, r5
 8005460:	d41f      	bmi.n	80054a2 <_malloc_r+0xd6>
 8005462:	2a0b      	cmp	r2, #11
 8005464:	d917      	bls.n	8005496 <_malloc_r+0xca>
 8005466:	1961      	adds	r1, r4, r5
 8005468:	42a3      	cmp	r3, r4
 800546a:	6025      	str	r5, [r4, #0]
 800546c:	bf18      	it	ne
 800546e:	6059      	strne	r1, [r3, #4]
 8005470:	6863      	ldr	r3, [r4, #4]
 8005472:	bf08      	it	eq
 8005474:	f8c8 1000 	streq.w	r1, [r8]
 8005478:	5162      	str	r2, [r4, r5]
 800547a:	604b      	str	r3, [r1, #4]
 800547c:	4638      	mov	r0, r7
 800547e:	f104 060b 	add.w	r6, r4, #11
 8005482:	f000 f829 	bl	80054d8 <__malloc_unlock>
 8005486:	f026 0607 	bic.w	r6, r6, #7
 800548a:	1d23      	adds	r3, r4, #4
 800548c:	1af2      	subs	r2, r6, r3
 800548e:	d0ae      	beq.n	80053ee <_malloc_r+0x22>
 8005490:	1b9b      	subs	r3, r3, r6
 8005492:	50a3      	str	r3, [r4, r2]
 8005494:	e7ab      	b.n	80053ee <_malloc_r+0x22>
 8005496:	42a3      	cmp	r3, r4
 8005498:	6862      	ldr	r2, [r4, #4]
 800549a:	d1dd      	bne.n	8005458 <_malloc_r+0x8c>
 800549c:	f8c8 2000 	str.w	r2, [r8]
 80054a0:	e7ec      	b.n	800547c <_malloc_r+0xb0>
 80054a2:	4623      	mov	r3, r4
 80054a4:	6864      	ldr	r4, [r4, #4]
 80054a6:	e7ac      	b.n	8005402 <_malloc_r+0x36>
 80054a8:	4634      	mov	r4, r6
 80054aa:	6876      	ldr	r6, [r6, #4]
 80054ac:	e7b4      	b.n	8005418 <_malloc_r+0x4c>
 80054ae:	4613      	mov	r3, r2
 80054b0:	e7cc      	b.n	800544c <_malloc_r+0x80>
 80054b2:	230c      	movs	r3, #12
 80054b4:	603b      	str	r3, [r7, #0]
 80054b6:	4638      	mov	r0, r7
 80054b8:	f000 f80e 	bl	80054d8 <__malloc_unlock>
 80054bc:	e797      	b.n	80053ee <_malloc_r+0x22>
 80054be:	6025      	str	r5, [r4, #0]
 80054c0:	e7dc      	b.n	800547c <_malloc_r+0xb0>
 80054c2:	605b      	str	r3, [r3, #4]
 80054c4:	deff      	udf	#255	; 0xff
 80054c6:	bf00      	nop
 80054c8:	20000344 	.word	0x20000344

080054cc <__malloc_lock>:
 80054cc:	4801      	ldr	r0, [pc, #4]	; (80054d4 <__malloc_lock+0x8>)
 80054ce:	f7ff bf0e 	b.w	80052ee <__retarget_lock_acquire_recursive>
 80054d2:	bf00      	nop
 80054d4:	20000340 	.word	0x20000340

080054d8 <__malloc_unlock>:
 80054d8:	4801      	ldr	r0, [pc, #4]	; (80054e0 <__malloc_unlock+0x8>)
 80054da:	f7ff bf09 	b.w	80052f0 <__retarget_lock_release_recursive>
 80054de:	bf00      	nop
 80054e0:	20000340 	.word	0x20000340

080054e4 <__sfputc_r>:
 80054e4:	6893      	ldr	r3, [r2, #8]
 80054e6:	3b01      	subs	r3, #1
 80054e8:	2b00      	cmp	r3, #0
 80054ea:	b410      	push	{r4}
 80054ec:	6093      	str	r3, [r2, #8]
 80054ee:	da08      	bge.n	8005502 <__sfputc_r+0x1e>
 80054f0:	6994      	ldr	r4, [r2, #24]
 80054f2:	42a3      	cmp	r3, r4
 80054f4:	db01      	blt.n	80054fa <__sfputc_r+0x16>
 80054f6:	290a      	cmp	r1, #10
 80054f8:	d103      	bne.n	8005502 <__sfputc_r+0x1e>
 80054fa:	f85d 4b04 	ldr.w	r4, [sp], #4
 80054fe:	f7ff bde8 	b.w	80050d2 <__swbuf_r>
 8005502:	6813      	ldr	r3, [r2, #0]
 8005504:	1c58      	adds	r0, r3, #1
 8005506:	6010      	str	r0, [r2, #0]
 8005508:	7019      	strb	r1, [r3, #0]
 800550a:	4608      	mov	r0, r1
 800550c:	f85d 4b04 	ldr.w	r4, [sp], #4
 8005510:	4770      	bx	lr

08005512 <__sfputs_r>:
 8005512:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8005514:	4606      	mov	r6, r0
 8005516:	460f      	mov	r7, r1
 8005518:	4614      	mov	r4, r2
 800551a:	18d5      	adds	r5, r2, r3
 800551c:	42ac      	cmp	r4, r5
 800551e:	d101      	bne.n	8005524 <__sfputs_r+0x12>
 8005520:	2000      	movs	r0, #0
 8005522:	e007      	b.n	8005534 <__sfputs_r+0x22>
 8005524:	f814 1b01 	ldrb.w	r1, [r4], #1
 8005528:	463a      	mov	r2, r7
 800552a:	4630      	mov	r0, r6
 800552c:	f7ff ffda 	bl	80054e4 <__sfputc_r>
 8005530:	1c43      	adds	r3, r0, #1
 8005532:	d1f3      	bne.n	800551c <__sfputs_r+0xa>
 8005534:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08005538 <_vfiprintf_r>:
 8005538:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800553c:	460d      	mov	r5, r1
 800553e:	b09d      	sub	sp, #116	; 0x74
 8005540:	4614      	mov	r4, r2
 8005542:	4698      	mov	r8, r3
 8005544:	4606      	mov	r6, r0
 8005546:	b118      	cbz	r0, 8005550 <_vfiprintf_r+0x18>
 8005548:	6a03      	ldr	r3, [r0, #32]
 800554a:	b90b      	cbnz	r3, 8005550 <_vfiprintf_r+0x18>
 800554c:	f7ff fcda 	bl	8004f04 <__sinit>
 8005550:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8005552:	07d9      	lsls	r1, r3, #31
 8005554:	d405      	bmi.n	8005562 <_vfiprintf_r+0x2a>
 8005556:	89ab      	ldrh	r3, [r5, #12]
 8005558:	059a      	lsls	r2, r3, #22
 800555a:	d402      	bmi.n	8005562 <_vfiprintf_r+0x2a>
 800555c:	6da8      	ldr	r0, [r5, #88]	; 0x58
 800555e:	f7ff fec6 	bl	80052ee <__retarget_lock_acquire_recursive>
 8005562:	89ab      	ldrh	r3, [r5, #12]
 8005564:	071b      	lsls	r3, r3, #28
 8005566:	d501      	bpl.n	800556c <_vfiprintf_r+0x34>
 8005568:	692b      	ldr	r3, [r5, #16]
 800556a:	b99b      	cbnz	r3, 8005594 <_vfiprintf_r+0x5c>
 800556c:	4629      	mov	r1, r5
 800556e:	4630      	mov	r0, r6
 8005570:	f7ff fdec 	bl	800514c <__swsetup_r>
 8005574:	b170      	cbz	r0, 8005594 <_vfiprintf_r+0x5c>
 8005576:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8005578:	07dc      	lsls	r4, r3, #31
 800557a:	d504      	bpl.n	8005586 <_vfiprintf_r+0x4e>
 800557c:	f04f 30ff 	mov.w	r0, #4294967295
 8005580:	b01d      	add	sp, #116	; 0x74
 8005582:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8005586:	89ab      	ldrh	r3, [r5, #12]
 8005588:	0598      	lsls	r0, r3, #22
 800558a:	d4f7      	bmi.n	800557c <_vfiprintf_r+0x44>
 800558c:	6da8      	ldr	r0, [r5, #88]	; 0x58
 800558e:	f7ff feaf 	bl	80052f0 <__retarget_lock_release_recursive>
 8005592:	e7f3      	b.n	800557c <_vfiprintf_r+0x44>
 8005594:	2300      	movs	r3, #0
 8005596:	9309      	str	r3, [sp, #36]	; 0x24
 8005598:	2320      	movs	r3, #32
 800559a:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 800559e:	f8cd 800c 	str.w	r8, [sp, #12]
 80055a2:	2330      	movs	r3, #48	; 0x30
 80055a4:	f8df 81b0 	ldr.w	r8, [pc, #432]	; 8005758 <_vfiprintf_r+0x220>
 80055a8:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 80055ac:	f04f 0901 	mov.w	r9, #1
 80055b0:	4623      	mov	r3, r4
 80055b2:	469a      	mov	sl, r3
 80055b4:	f813 2b01 	ldrb.w	r2, [r3], #1
 80055b8:	b10a      	cbz	r2, 80055be <_vfiprintf_r+0x86>
 80055ba:	2a25      	cmp	r2, #37	; 0x25
 80055bc:	d1f9      	bne.n	80055b2 <_vfiprintf_r+0x7a>
 80055be:	ebba 0b04 	subs.w	fp, sl, r4
 80055c2:	d00b      	beq.n	80055dc <_vfiprintf_r+0xa4>
 80055c4:	465b      	mov	r3, fp
 80055c6:	4622      	mov	r2, r4
 80055c8:	4629      	mov	r1, r5
 80055ca:	4630      	mov	r0, r6
 80055cc:	f7ff ffa1 	bl	8005512 <__sfputs_r>
 80055d0:	3001      	adds	r0, #1
 80055d2:	f000 80a9 	beq.w	8005728 <_vfiprintf_r+0x1f0>
 80055d6:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80055d8:	445a      	add	r2, fp
 80055da:	9209      	str	r2, [sp, #36]	; 0x24
 80055dc:	f89a 3000 	ldrb.w	r3, [sl]
 80055e0:	2b00      	cmp	r3, #0
 80055e2:	f000 80a1 	beq.w	8005728 <_vfiprintf_r+0x1f0>
 80055e6:	2300      	movs	r3, #0
 80055e8:	f04f 32ff 	mov.w	r2, #4294967295
 80055ec:	e9cd 2305 	strd	r2, r3, [sp, #20]
 80055f0:	f10a 0a01 	add.w	sl, sl, #1
 80055f4:	9304      	str	r3, [sp, #16]
 80055f6:	9307      	str	r3, [sp, #28]
 80055f8:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 80055fc:	931a      	str	r3, [sp, #104]	; 0x68
 80055fe:	4654      	mov	r4, sl
 8005600:	2205      	movs	r2, #5
 8005602:	f814 1b01 	ldrb.w	r1, [r4], #1
 8005606:	4854      	ldr	r0, [pc, #336]	; (8005758 <_vfiprintf_r+0x220>)
 8005608:	f7fa fde2 	bl	80001d0 <memchr>
 800560c:	9a04      	ldr	r2, [sp, #16]
 800560e:	b9d8      	cbnz	r0, 8005648 <_vfiprintf_r+0x110>
 8005610:	06d1      	lsls	r1, r2, #27
 8005612:	bf44      	itt	mi
 8005614:	2320      	movmi	r3, #32
 8005616:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 800561a:	0713      	lsls	r3, r2, #28
 800561c:	bf44      	itt	mi
 800561e:	232b      	movmi	r3, #43	; 0x2b
 8005620:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8005624:	f89a 3000 	ldrb.w	r3, [sl]
 8005628:	2b2a      	cmp	r3, #42	; 0x2a
 800562a:	d015      	beq.n	8005658 <_vfiprintf_r+0x120>
 800562c:	9a07      	ldr	r2, [sp, #28]
 800562e:	4654      	mov	r4, sl
 8005630:	2000      	movs	r0, #0
 8005632:	f04f 0c0a 	mov.w	ip, #10
 8005636:	4621      	mov	r1, r4
 8005638:	f811 3b01 	ldrb.w	r3, [r1], #1
 800563c:	3b30      	subs	r3, #48	; 0x30
 800563e:	2b09      	cmp	r3, #9
 8005640:	d94d      	bls.n	80056de <_vfiprintf_r+0x1a6>
 8005642:	b1b0      	cbz	r0, 8005672 <_vfiprintf_r+0x13a>
 8005644:	9207      	str	r2, [sp, #28]
 8005646:	e014      	b.n	8005672 <_vfiprintf_r+0x13a>
 8005648:	eba0 0308 	sub.w	r3, r0, r8
 800564c:	fa09 f303 	lsl.w	r3, r9, r3
 8005650:	4313      	orrs	r3, r2
 8005652:	9304      	str	r3, [sp, #16]
 8005654:	46a2      	mov	sl, r4
 8005656:	e7d2      	b.n	80055fe <_vfiprintf_r+0xc6>
 8005658:	9b03      	ldr	r3, [sp, #12]
 800565a:	1d19      	adds	r1, r3, #4
 800565c:	681b      	ldr	r3, [r3, #0]
 800565e:	9103      	str	r1, [sp, #12]
 8005660:	2b00      	cmp	r3, #0
 8005662:	bfbb      	ittet	lt
 8005664:	425b      	neglt	r3, r3
 8005666:	f042 0202 	orrlt.w	r2, r2, #2
 800566a:	9307      	strge	r3, [sp, #28]
 800566c:	9307      	strlt	r3, [sp, #28]
 800566e:	bfb8      	it	lt
 8005670:	9204      	strlt	r2, [sp, #16]
 8005672:	7823      	ldrb	r3, [r4, #0]
 8005674:	2b2e      	cmp	r3, #46	; 0x2e
 8005676:	d10c      	bne.n	8005692 <_vfiprintf_r+0x15a>
 8005678:	7863      	ldrb	r3, [r4, #1]
 800567a:	2b2a      	cmp	r3, #42	; 0x2a
 800567c:	d134      	bne.n	80056e8 <_vfiprintf_r+0x1b0>
 800567e:	9b03      	ldr	r3, [sp, #12]
 8005680:	1d1a      	adds	r2, r3, #4
 8005682:	681b      	ldr	r3, [r3, #0]
 8005684:	9203      	str	r2, [sp, #12]
 8005686:	2b00      	cmp	r3, #0
 8005688:	bfb8      	it	lt
 800568a:	f04f 33ff 	movlt.w	r3, #4294967295
 800568e:	3402      	adds	r4, #2
 8005690:	9305      	str	r3, [sp, #20]
 8005692:	f8df a0d4 	ldr.w	sl, [pc, #212]	; 8005768 <_vfiprintf_r+0x230>
 8005696:	7821      	ldrb	r1, [r4, #0]
 8005698:	2203      	movs	r2, #3
 800569a:	4650      	mov	r0, sl
 800569c:	f7fa fd98 	bl	80001d0 <memchr>
 80056a0:	b138      	cbz	r0, 80056b2 <_vfiprintf_r+0x17a>
 80056a2:	9b04      	ldr	r3, [sp, #16]
 80056a4:	eba0 000a 	sub.w	r0, r0, sl
 80056a8:	2240      	movs	r2, #64	; 0x40
 80056aa:	4082      	lsls	r2, r0
 80056ac:	4313      	orrs	r3, r2
 80056ae:	3401      	adds	r4, #1
 80056b0:	9304      	str	r3, [sp, #16]
 80056b2:	f814 1b01 	ldrb.w	r1, [r4], #1
 80056b6:	4829      	ldr	r0, [pc, #164]	; (800575c <_vfiprintf_r+0x224>)
 80056b8:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 80056bc:	2206      	movs	r2, #6
 80056be:	f7fa fd87 	bl	80001d0 <memchr>
 80056c2:	2800      	cmp	r0, #0
 80056c4:	d03f      	beq.n	8005746 <_vfiprintf_r+0x20e>
 80056c6:	4b26      	ldr	r3, [pc, #152]	; (8005760 <_vfiprintf_r+0x228>)
 80056c8:	bb1b      	cbnz	r3, 8005712 <_vfiprintf_r+0x1da>
 80056ca:	9b03      	ldr	r3, [sp, #12]
 80056cc:	3307      	adds	r3, #7
 80056ce:	f023 0307 	bic.w	r3, r3, #7
 80056d2:	3308      	adds	r3, #8
 80056d4:	9303      	str	r3, [sp, #12]
 80056d6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80056d8:	443b      	add	r3, r7
 80056da:	9309      	str	r3, [sp, #36]	; 0x24
 80056dc:	e768      	b.n	80055b0 <_vfiprintf_r+0x78>
 80056de:	fb0c 3202 	mla	r2, ip, r2, r3
 80056e2:	460c      	mov	r4, r1
 80056e4:	2001      	movs	r0, #1
 80056e6:	e7a6      	b.n	8005636 <_vfiprintf_r+0xfe>
 80056e8:	2300      	movs	r3, #0
 80056ea:	3401      	adds	r4, #1
 80056ec:	9305      	str	r3, [sp, #20]
 80056ee:	4619      	mov	r1, r3
 80056f0:	f04f 0c0a 	mov.w	ip, #10
 80056f4:	4620      	mov	r0, r4
 80056f6:	f810 2b01 	ldrb.w	r2, [r0], #1
 80056fa:	3a30      	subs	r2, #48	; 0x30
 80056fc:	2a09      	cmp	r2, #9
 80056fe:	d903      	bls.n	8005708 <_vfiprintf_r+0x1d0>
 8005700:	2b00      	cmp	r3, #0
 8005702:	d0c6      	beq.n	8005692 <_vfiprintf_r+0x15a>
 8005704:	9105      	str	r1, [sp, #20]
 8005706:	e7c4      	b.n	8005692 <_vfiprintf_r+0x15a>
 8005708:	fb0c 2101 	mla	r1, ip, r1, r2
 800570c:	4604      	mov	r4, r0
 800570e:	2301      	movs	r3, #1
 8005710:	e7f0      	b.n	80056f4 <_vfiprintf_r+0x1bc>
 8005712:	ab03      	add	r3, sp, #12
 8005714:	9300      	str	r3, [sp, #0]
 8005716:	462a      	mov	r2, r5
 8005718:	4b12      	ldr	r3, [pc, #72]	; (8005764 <_vfiprintf_r+0x22c>)
 800571a:	a904      	add	r1, sp, #16
 800571c:	4630      	mov	r0, r6
 800571e:	f3af 8000 	nop.w
 8005722:	4607      	mov	r7, r0
 8005724:	1c78      	adds	r0, r7, #1
 8005726:	d1d6      	bne.n	80056d6 <_vfiprintf_r+0x19e>
 8005728:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 800572a:	07d9      	lsls	r1, r3, #31
 800572c:	d405      	bmi.n	800573a <_vfiprintf_r+0x202>
 800572e:	89ab      	ldrh	r3, [r5, #12]
 8005730:	059a      	lsls	r2, r3, #22
 8005732:	d402      	bmi.n	800573a <_vfiprintf_r+0x202>
 8005734:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8005736:	f7ff fddb 	bl	80052f0 <__retarget_lock_release_recursive>
 800573a:	89ab      	ldrh	r3, [r5, #12]
 800573c:	065b      	lsls	r3, r3, #25
 800573e:	f53f af1d 	bmi.w	800557c <_vfiprintf_r+0x44>
 8005742:	9809      	ldr	r0, [sp, #36]	; 0x24
 8005744:	e71c      	b.n	8005580 <_vfiprintf_r+0x48>
 8005746:	ab03      	add	r3, sp, #12
 8005748:	9300      	str	r3, [sp, #0]
 800574a:	462a      	mov	r2, r5
 800574c:	4b05      	ldr	r3, [pc, #20]	; (8005764 <_vfiprintf_r+0x22c>)
 800574e:	a904      	add	r1, sp, #16
 8005750:	4630      	mov	r0, r6
 8005752:	f000 f879 	bl	8005848 <_printf_i>
 8005756:	e7e4      	b.n	8005722 <_vfiprintf_r+0x1ea>
 8005758:	08005f18 	.word	0x08005f18
 800575c:	08005f22 	.word	0x08005f22
 8005760:	00000000 	.word	0x00000000
 8005764:	08005513 	.word	0x08005513
 8005768:	08005f1e 	.word	0x08005f1e

0800576c <_printf_common>:
 800576c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8005770:	4616      	mov	r6, r2
 8005772:	4699      	mov	r9, r3
 8005774:	688a      	ldr	r2, [r1, #8]
 8005776:	690b      	ldr	r3, [r1, #16]
 8005778:	f8dd 8020 	ldr.w	r8, [sp, #32]
 800577c:	4293      	cmp	r3, r2
 800577e:	bfb8      	it	lt
 8005780:	4613      	movlt	r3, r2
 8005782:	6033      	str	r3, [r6, #0]
 8005784:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8005788:	4607      	mov	r7, r0
 800578a:	460c      	mov	r4, r1
 800578c:	b10a      	cbz	r2, 8005792 <_printf_common+0x26>
 800578e:	3301      	adds	r3, #1
 8005790:	6033      	str	r3, [r6, #0]
 8005792:	6823      	ldr	r3, [r4, #0]
 8005794:	0699      	lsls	r1, r3, #26
 8005796:	bf42      	ittt	mi
 8005798:	6833      	ldrmi	r3, [r6, #0]
 800579a:	3302      	addmi	r3, #2
 800579c:	6033      	strmi	r3, [r6, #0]
 800579e:	6825      	ldr	r5, [r4, #0]
 80057a0:	f015 0506 	ands.w	r5, r5, #6
 80057a4:	d106      	bne.n	80057b4 <_printf_common+0x48>
 80057a6:	f104 0a19 	add.w	sl, r4, #25
 80057aa:	68e3      	ldr	r3, [r4, #12]
 80057ac:	6832      	ldr	r2, [r6, #0]
 80057ae:	1a9b      	subs	r3, r3, r2
 80057b0:	42ab      	cmp	r3, r5
 80057b2:	dc26      	bgt.n	8005802 <_printf_common+0x96>
 80057b4:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 80057b8:	1e13      	subs	r3, r2, #0
 80057ba:	6822      	ldr	r2, [r4, #0]
 80057bc:	bf18      	it	ne
 80057be:	2301      	movne	r3, #1
 80057c0:	0692      	lsls	r2, r2, #26
 80057c2:	d42b      	bmi.n	800581c <_printf_common+0xb0>
 80057c4:	f104 0243 	add.w	r2, r4, #67	; 0x43
 80057c8:	4649      	mov	r1, r9
 80057ca:	4638      	mov	r0, r7
 80057cc:	47c0      	blx	r8
 80057ce:	3001      	adds	r0, #1
 80057d0:	d01e      	beq.n	8005810 <_printf_common+0xa4>
 80057d2:	6823      	ldr	r3, [r4, #0]
 80057d4:	6922      	ldr	r2, [r4, #16]
 80057d6:	f003 0306 	and.w	r3, r3, #6
 80057da:	2b04      	cmp	r3, #4
 80057dc:	bf02      	ittt	eq
 80057de:	68e5      	ldreq	r5, [r4, #12]
 80057e0:	6833      	ldreq	r3, [r6, #0]
 80057e2:	1aed      	subeq	r5, r5, r3
 80057e4:	68a3      	ldr	r3, [r4, #8]
 80057e6:	bf0c      	ite	eq
 80057e8:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 80057ec:	2500      	movne	r5, #0
 80057ee:	4293      	cmp	r3, r2
 80057f0:	bfc4      	itt	gt
 80057f2:	1a9b      	subgt	r3, r3, r2
 80057f4:	18ed      	addgt	r5, r5, r3
 80057f6:	2600      	movs	r6, #0
 80057f8:	341a      	adds	r4, #26
 80057fa:	42b5      	cmp	r5, r6
 80057fc:	d11a      	bne.n	8005834 <_printf_common+0xc8>
 80057fe:	2000      	movs	r0, #0
 8005800:	e008      	b.n	8005814 <_printf_common+0xa8>
 8005802:	2301      	movs	r3, #1
 8005804:	4652      	mov	r2, sl
 8005806:	4649      	mov	r1, r9
 8005808:	4638      	mov	r0, r7
 800580a:	47c0      	blx	r8
 800580c:	3001      	adds	r0, #1
 800580e:	d103      	bne.n	8005818 <_printf_common+0xac>
 8005810:	f04f 30ff 	mov.w	r0, #4294967295
 8005814:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8005818:	3501      	adds	r5, #1
 800581a:	e7c6      	b.n	80057aa <_printf_common+0x3e>
 800581c:	18e1      	adds	r1, r4, r3
 800581e:	1c5a      	adds	r2, r3, #1
 8005820:	2030      	movs	r0, #48	; 0x30
 8005822:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8005826:	4422      	add	r2, r4
 8005828:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 800582c:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8005830:	3302      	adds	r3, #2
 8005832:	e7c7      	b.n	80057c4 <_printf_common+0x58>
 8005834:	2301      	movs	r3, #1
 8005836:	4622      	mov	r2, r4
 8005838:	4649      	mov	r1, r9
 800583a:	4638      	mov	r0, r7
 800583c:	47c0      	blx	r8
 800583e:	3001      	adds	r0, #1
 8005840:	d0e6      	beq.n	8005810 <_printf_common+0xa4>
 8005842:	3601      	adds	r6, #1
 8005844:	e7d9      	b.n	80057fa <_printf_common+0x8e>
	...

08005848 <_printf_i>:
 8005848:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 800584c:	7e0f      	ldrb	r7, [r1, #24]
 800584e:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8005850:	2f78      	cmp	r7, #120	; 0x78
 8005852:	4691      	mov	r9, r2
 8005854:	4680      	mov	r8, r0
 8005856:	460c      	mov	r4, r1
 8005858:	469a      	mov	sl, r3
 800585a:	f101 0243 	add.w	r2, r1, #67	; 0x43
 800585e:	d807      	bhi.n	8005870 <_printf_i+0x28>
 8005860:	2f62      	cmp	r7, #98	; 0x62
 8005862:	d80a      	bhi.n	800587a <_printf_i+0x32>
 8005864:	2f00      	cmp	r7, #0
 8005866:	f000 80d4 	beq.w	8005a12 <_printf_i+0x1ca>
 800586a:	2f58      	cmp	r7, #88	; 0x58
 800586c:	f000 80c0 	beq.w	80059f0 <_printf_i+0x1a8>
 8005870:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8005874:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8005878:	e03a      	b.n	80058f0 <_printf_i+0xa8>
 800587a:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 800587e:	2b15      	cmp	r3, #21
 8005880:	d8f6      	bhi.n	8005870 <_printf_i+0x28>
 8005882:	a101      	add	r1, pc, #4	; (adr r1, 8005888 <_printf_i+0x40>)
 8005884:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8005888:	080058e1 	.word	0x080058e1
 800588c:	080058f5 	.word	0x080058f5
 8005890:	08005871 	.word	0x08005871
 8005894:	08005871 	.word	0x08005871
 8005898:	08005871 	.word	0x08005871
 800589c:	08005871 	.word	0x08005871
 80058a0:	080058f5 	.word	0x080058f5
 80058a4:	08005871 	.word	0x08005871
 80058a8:	08005871 	.word	0x08005871
 80058ac:	08005871 	.word	0x08005871
 80058b0:	08005871 	.word	0x08005871
 80058b4:	080059f9 	.word	0x080059f9
 80058b8:	08005921 	.word	0x08005921
 80058bc:	080059b3 	.word	0x080059b3
 80058c0:	08005871 	.word	0x08005871
 80058c4:	08005871 	.word	0x08005871
 80058c8:	08005a1b 	.word	0x08005a1b
 80058cc:	08005871 	.word	0x08005871
 80058d0:	08005921 	.word	0x08005921
 80058d4:	08005871 	.word	0x08005871
 80058d8:	08005871 	.word	0x08005871
 80058dc:	080059bb 	.word	0x080059bb
 80058e0:	682b      	ldr	r3, [r5, #0]
 80058e2:	1d1a      	adds	r2, r3, #4
 80058e4:	681b      	ldr	r3, [r3, #0]
 80058e6:	602a      	str	r2, [r5, #0]
 80058e8:	f104 0542 	add.w	r5, r4, #66	; 0x42
 80058ec:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 80058f0:	2301      	movs	r3, #1
 80058f2:	e09f      	b.n	8005a34 <_printf_i+0x1ec>
 80058f4:	6820      	ldr	r0, [r4, #0]
 80058f6:	682b      	ldr	r3, [r5, #0]
 80058f8:	0607      	lsls	r7, r0, #24
 80058fa:	f103 0104 	add.w	r1, r3, #4
 80058fe:	6029      	str	r1, [r5, #0]
 8005900:	d501      	bpl.n	8005906 <_printf_i+0xbe>
 8005902:	681e      	ldr	r6, [r3, #0]
 8005904:	e003      	b.n	800590e <_printf_i+0xc6>
 8005906:	0646      	lsls	r6, r0, #25
 8005908:	d5fb      	bpl.n	8005902 <_printf_i+0xba>
 800590a:	f9b3 6000 	ldrsh.w	r6, [r3]
 800590e:	2e00      	cmp	r6, #0
 8005910:	da03      	bge.n	800591a <_printf_i+0xd2>
 8005912:	232d      	movs	r3, #45	; 0x2d
 8005914:	4276      	negs	r6, r6
 8005916:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800591a:	485a      	ldr	r0, [pc, #360]	; (8005a84 <_printf_i+0x23c>)
 800591c:	230a      	movs	r3, #10
 800591e:	e012      	b.n	8005946 <_printf_i+0xfe>
 8005920:	682b      	ldr	r3, [r5, #0]
 8005922:	6820      	ldr	r0, [r4, #0]
 8005924:	1d19      	adds	r1, r3, #4
 8005926:	6029      	str	r1, [r5, #0]
 8005928:	0605      	lsls	r5, r0, #24
 800592a:	d501      	bpl.n	8005930 <_printf_i+0xe8>
 800592c:	681e      	ldr	r6, [r3, #0]
 800592e:	e002      	b.n	8005936 <_printf_i+0xee>
 8005930:	0641      	lsls	r1, r0, #25
 8005932:	d5fb      	bpl.n	800592c <_printf_i+0xe4>
 8005934:	881e      	ldrh	r6, [r3, #0]
 8005936:	4853      	ldr	r0, [pc, #332]	; (8005a84 <_printf_i+0x23c>)
 8005938:	2f6f      	cmp	r7, #111	; 0x6f
 800593a:	bf0c      	ite	eq
 800593c:	2308      	moveq	r3, #8
 800593e:	230a      	movne	r3, #10
 8005940:	2100      	movs	r1, #0
 8005942:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 8005946:	6865      	ldr	r5, [r4, #4]
 8005948:	60a5      	str	r5, [r4, #8]
 800594a:	2d00      	cmp	r5, #0
 800594c:	bfa2      	ittt	ge
 800594e:	6821      	ldrge	r1, [r4, #0]
 8005950:	f021 0104 	bicge.w	r1, r1, #4
 8005954:	6021      	strge	r1, [r4, #0]
 8005956:	b90e      	cbnz	r6, 800595c <_printf_i+0x114>
 8005958:	2d00      	cmp	r5, #0
 800595a:	d04b      	beq.n	80059f4 <_printf_i+0x1ac>
 800595c:	4615      	mov	r5, r2
 800595e:	fbb6 f1f3 	udiv	r1, r6, r3
 8005962:	fb03 6711 	mls	r7, r3, r1, r6
 8005966:	5dc7      	ldrb	r7, [r0, r7]
 8005968:	f805 7d01 	strb.w	r7, [r5, #-1]!
 800596c:	4637      	mov	r7, r6
 800596e:	42bb      	cmp	r3, r7
 8005970:	460e      	mov	r6, r1
 8005972:	d9f4      	bls.n	800595e <_printf_i+0x116>
 8005974:	2b08      	cmp	r3, #8
 8005976:	d10b      	bne.n	8005990 <_printf_i+0x148>
 8005978:	6823      	ldr	r3, [r4, #0]
 800597a:	07de      	lsls	r6, r3, #31
 800597c:	d508      	bpl.n	8005990 <_printf_i+0x148>
 800597e:	6923      	ldr	r3, [r4, #16]
 8005980:	6861      	ldr	r1, [r4, #4]
 8005982:	4299      	cmp	r1, r3
 8005984:	bfde      	ittt	le
 8005986:	2330      	movle	r3, #48	; 0x30
 8005988:	f805 3c01 	strble.w	r3, [r5, #-1]
 800598c:	f105 35ff 	addle.w	r5, r5, #4294967295
 8005990:	1b52      	subs	r2, r2, r5
 8005992:	6122      	str	r2, [r4, #16]
 8005994:	f8cd a000 	str.w	sl, [sp]
 8005998:	464b      	mov	r3, r9
 800599a:	aa03      	add	r2, sp, #12
 800599c:	4621      	mov	r1, r4
 800599e:	4640      	mov	r0, r8
 80059a0:	f7ff fee4 	bl	800576c <_printf_common>
 80059a4:	3001      	adds	r0, #1
 80059a6:	d14a      	bne.n	8005a3e <_printf_i+0x1f6>
 80059a8:	f04f 30ff 	mov.w	r0, #4294967295
 80059ac:	b004      	add	sp, #16
 80059ae:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80059b2:	6823      	ldr	r3, [r4, #0]
 80059b4:	f043 0320 	orr.w	r3, r3, #32
 80059b8:	6023      	str	r3, [r4, #0]
 80059ba:	4833      	ldr	r0, [pc, #204]	; (8005a88 <_printf_i+0x240>)
 80059bc:	2778      	movs	r7, #120	; 0x78
 80059be:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 80059c2:	6823      	ldr	r3, [r4, #0]
 80059c4:	6829      	ldr	r1, [r5, #0]
 80059c6:	061f      	lsls	r7, r3, #24
 80059c8:	f851 6b04 	ldr.w	r6, [r1], #4
 80059cc:	d402      	bmi.n	80059d4 <_printf_i+0x18c>
 80059ce:	065f      	lsls	r7, r3, #25
 80059d0:	bf48      	it	mi
 80059d2:	b2b6      	uxthmi	r6, r6
 80059d4:	07df      	lsls	r7, r3, #31
 80059d6:	bf48      	it	mi
 80059d8:	f043 0320 	orrmi.w	r3, r3, #32
 80059dc:	6029      	str	r1, [r5, #0]
 80059de:	bf48      	it	mi
 80059e0:	6023      	strmi	r3, [r4, #0]
 80059e2:	b91e      	cbnz	r6, 80059ec <_printf_i+0x1a4>
 80059e4:	6823      	ldr	r3, [r4, #0]
 80059e6:	f023 0320 	bic.w	r3, r3, #32
 80059ea:	6023      	str	r3, [r4, #0]
 80059ec:	2310      	movs	r3, #16
 80059ee:	e7a7      	b.n	8005940 <_printf_i+0xf8>
 80059f0:	4824      	ldr	r0, [pc, #144]	; (8005a84 <_printf_i+0x23c>)
 80059f2:	e7e4      	b.n	80059be <_printf_i+0x176>
 80059f4:	4615      	mov	r5, r2
 80059f6:	e7bd      	b.n	8005974 <_printf_i+0x12c>
 80059f8:	682b      	ldr	r3, [r5, #0]
 80059fa:	6826      	ldr	r6, [r4, #0]
 80059fc:	6961      	ldr	r1, [r4, #20]
 80059fe:	1d18      	adds	r0, r3, #4
 8005a00:	6028      	str	r0, [r5, #0]
 8005a02:	0635      	lsls	r5, r6, #24
 8005a04:	681b      	ldr	r3, [r3, #0]
 8005a06:	d501      	bpl.n	8005a0c <_printf_i+0x1c4>
 8005a08:	6019      	str	r1, [r3, #0]
 8005a0a:	e002      	b.n	8005a12 <_printf_i+0x1ca>
 8005a0c:	0670      	lsls	r0, r6, #25
 8005a0e:	d5fb      	bpl.n	8005a08 <_printf_i+0x1c0>
 8005a10:	8019      	strh	r1, [r3, #0]
 8005a12:	2300      	movs	r3, #0
 8005a14:	6123      	str	r3, [r4, #16]
 8005a16:	4615      	mov	r5, r2
 8005a18:	e7bc      	b.n	8005994 <_printf_i+0x14c>
 8005a1a:	682b      	ldr	r3, [r5, #0]
 8005a1c:	1d1a      	adds	r2, r3, #4
 8005a1e:	602a      	str	r2, [r5, #0]
 8005a20:	681d      	ldr	r5, [r3, #0]
 8005a22:	6862      	ldr	r2, [r4, #4]
 8005a24:	2100      	movs	r1, #0
 8005a26:	4628      	mov	r0, r5
 8005a28:	f7fa fbd2 	bl	80001d0 <memchr>
 8005a2c:	b108      	cbz	r0, 8005a32 <_printf_i+0x1ea>
 8005a2e:	1b40      	subs	r0, r0, r5
 8005a30:	6060      	str	r0, [r4, #4]
 8005a32:	6863      	ldr	r3, [r4, #4]
 8005a34:	6123      	str	r3, [r4, #16]
 8005a36:	2300      	movs	r3, #0
 8005a38:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8005a3c:	e7aa      	b.n	8005994 <_printf_i+0x14c>
 8005a3e:	6923      	ldr	r3, [r4, #16]
 8005a40:	462a      	mov	r2, r5
 8005a42:	4649      	mov	r1, r9
 8005a44:	4640      	mov	r0, r8
 8005a46:	47d0      	blx	sl
 8005a48:	3001      	adds	r0, #1
 8005a4a:	d0ad      	beq.n	80059a8 <_printf_i+0x160>
 8005a4c:	6823      	ldr	r3, [r4, #0]
 8005a4e:	079b      	lsls	r3, r3, #30
 8005a50:	d413      	bmi.n	8005a7a <_printf_i+0x232>
 8005a52:	68e0      	ldr	r0, [r4, #12]
 8005a54:	9b03      	ldr	r3, [sp, #12]
 8005a56:	4298      	cmp	r0, r3
 8005a58:	bfb8      	it	lt
 8005a5a:	4618      	movlt	r0, r3
 8005a5c:	e7a6      	b.n	80059ac <_printf_i+0x164>
 8005a5e:	2301      	movs	r3, #1
 8005a60:	4632      	mov	r2, r6
 8005a62:	4649      	mov	r1, r9
 8005a64:	4640      	mov	r0, r8
 8005a66:	47d0      	blx	sl
 8005a68:	3001      	adds	r0, #1
 8005a6a:	d09d      	beq.n	80059a8 <_printf_i+0x160>
 8005a6c:	3501      	adds	r5, #1
 8005a6e:	68e3      	ldr	r3, [r4, #12]
 8005a70:	9903      	ldr	r1, [sp, #12]
 8005a72:	1a5b      	subs	r3, r3, r1
 8005a74:	42ab      	cmp	r3, r5
 8005a76:	dcf2      	bgt.n	8005a5e <_printf_i+0x216>
 8005a78:	e7eb      	b.n	8005a52 <_printf_i+0x20a>
 8005a7a:	2500      	movs	r5, #0
 8005a7c:	f104 0619 	add.w	r6, r4, #25
 8005a80:	e7f5      	b.n	8005a6e <_printf_i+0x226>
 8005a82:	bf00      	nop
 8005a84:	08005f29 	.word	0x08005f29
 8005a88:	08005f3a 	.word	0x08005f3a

08005a8c <__sflush_r>:
 8005a8c:	898a      	ldrh	r2, [r1, #12]
 8005a8e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8005a92:	4605      	mov	r5, r0
 8005a94:	0710      	lsls	r0, r2, #28
 8005a96:	460c      	mov	r4, r1
 8005a98:	d458      	bmi.n	8005b4c <__sflush_r+0xc0>
 8005a9a:	684b      	ldr	r3, [r1, #4]
 8005a9c:	2b00      	cmp	r3, #0
 8005a9e:	dc05      	bgt.n	8005aac <__sflush_r+0x20>
 8005aa0:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 8005aa2:	2b00      	cmp	r3, #0
 8005aa4:	dc02      	bgt.n	8005aac <__sflush_r+0x20>
 8005aa6:	2000      	movs	r0, #0
 8005aa8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8005aac:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8005aae:	2e00      	cmp	r6, #0
 8005ab0:	d0f9      	beq.n	8005aa6 <__sflush_r+0x1a>
 8005ab2:	2300      	movs	r3, #0
 8005ab4:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8005ab8:	682f      	ldr	r7, [r5, #0]
 8005aba:	6a21      	ldr	r1, [r4, #32]
 8005abc:	602b      	str	r3, [r5, #0]
 8005abe:	d032      	beq.n	8005b26 <__sflush_r+0x9a>
 8005ac0:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8005ac2:	89a3      	ldrh	r3, [r4, #12]
 8005ac4:	075a      	lsls	r2, r3, #29
 8005ac6:	d505      	bpl.n	8005ad4 <__sflush_r+0x48>
 8005ac8:	6863      	ldr	r3, [r4, #4]
 8005aca:	1ac0      	subs	r0, r0, r3
 8005acc:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8005ace:	b10b      	cbz	r3, 8005ad4 <__sflush_r+0x48>
 8005ad0:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8005ad2:	1ac0      	subs	r0, r0, r3
 8005ad4:	2300      	movs	r3, #0
 8005ad6:	4602      	mov	r2, r0
 8005ad8:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8005ada:	6a21      	ldr	r1, [r4, #32]
 8005adc:	4628      	mov	r0, r5
 8005ade:	47b0      	blx	r6
 8005ae0:	1c43      	adds	r3, r0, #1
 8005ae2:	89a3      	ldrh	r3, [r4, #12]
 8005ae4:	d106      	bne.n	8005af4 <__sflush_r+0x68>
 8005ae6:	6829      	ldr	r1, [r5, #0]
 8005ae8:	291d      	cmp	r1, #29
 8005aea:	d82b      	bhi.n	8005b44 <__sflush_r+0xb8>
 8005aec:	4a29      	ldr	r2, [pc, #164]	; (8005b94 <__sflush_r+0x108>)
 8005aee:	410a      	asrs	r2, r1
 8005af0:	07d6      	lsls	r6, r2, #31
 8005af2:	d427      	bmi.n	8005b44 <__sflush_r+0xb8>
 8005af4:	2200      	movs	r2, #0
 8005af6:	6062      	str	r2, [r4, #4]
 8005af8:	04d9      	lsls	r1, r3, #19
 8005afa:	6922      	ldr	r2, [r4, #16]
 8005afc:	6022      	str	r2, [r4, #0]
 8005afe:	d504      	bpl.n	8005b0a <__sflush_r+0x7e>
 8005b00:	1c42      	adds	r2, r0, #1
 8005b02:	d101      	bne.n	8005b08 <__sflush_r+0x7c>
 8005b04:	682b      	ldr	r3, [r5, #0]
 8005b06:	b903      	cbnz	r3, 8005b0a <__sflush_r+0x7e>
 8005b08:	6560      	str	r0, [r4, #84]	; 0x54
 8005b0a:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8005b0c:	602f      	str	r7, [r5, #0]
 8005b0e:	2900      	cmp	r1, #0
 8005b10:	d0c9      	beq.n	8005aa6 <__sflush_r+0x1a>
 8005b12:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8005b16:	4299      	cmp	r1, r3
 8005b18:	d002      	beq.n	8005b20 <__sflush_r+0x94>
 8005b1a:	4628      	mov	r0, r5
 8005b1c:	f7ff fbea 	bl	80052f4 <_free_r>
 8005b20:	2000      	movs	r0, #0
 8005b22:	6360      	str	r0, [r4, #52]	; 0x34
 8005b24:	e7c0      	b.n	8005aa8 <__sflush_r+0x1c>
 8005b26:	2301      	movs	r3, #1
 8005b28:	4628      	mov	r0, r5
 8005b2a:	47b0      	blx	r6
 8005b2c:	1c41      	adds	r1, r0, #1
 8005b2e:	d1c8      	bne.n	8005ac2 <__sflush_r+0x36>
 8005b30:	682b      	ldr	r3, [r5, #0]
 8005b32:	2b00      	cmp	r3, #0
 8005b34:	d0c5      	beq.n	8005ac2 <__sflush_r+0x36>
 8005b36:	2b1d      	cmp	r3, #29
 8005b38:	d001      	beq.n	8005b3e <__sflush_r+0xb2>
 8005b3a:	2b16      	cmp	r3, #22
 8005b3c:	d101      	bne.n	8005b42 <__sflush_r+0xb6>
 8005b3e:	602f      	str	r7, [r5, #0]
 8005b40:	e7b1      	b.n	8005aa6 <__sflush_r+0x1a>
 8005b42:	89a3      	ldrh	r3, [r4, #12]
 8005b44:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8005b48:	81a3      	strh	r3, [r4, #12]
 8005b4a:	e7ad      	b.n	8005aa8 <__sflush_r+0x1c>
 8005b4c:	690f      	ldr	r7, [r1, #16]
 8005b4e:	2f00      	cmp	r7, #0
 8005b50:	d0a9      	beq.n	8005aa6 <__sflush_r+0x1a>
 8005b52:	0793      	lsls	r3, r2, #30
 8005b54:	680e      	ldr	r6, [r1, #0]
 8005b56:	bf08      	it	eq
 8005b58:	694b      	ldreq	r3, [r1, #20]
 8005b5a:	600f      	str	r7, [r1, #0]
 8005b5c:	bf18      	it	ne
 8005b5e:	2300      	movne	r3, #0
 8005b60:	eba6 0807 	sub.w	r8, r6, r7
 8005b64:	608b      	str	r3, [r1, #8]
 8005b66:	f1b8 0f00 	cmp.w	r8, #0
 8005b6a:	dd9c      	ble.n	8005aa6 <__sflush_r+0x1a>
 8005b6c:	6a21      	ldr	r1, [r4, #32]
 8005b6e:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8005b70:	4643      	mov	r3, r8
 8005b72:	463a      	mov	r2, r7
 8005b74:	4628      	mov	r0, r5
 8005b76:	47b0      	blx	r6
 8005b78:	2800      	cmp	r0, #0
 8005b7a:	dc06      	bgt.n	8005b8a <__sflush_r+0xfe>
 8005b7c:	89a3      	ldrh	r3, [r4, #12]
 8005b7e:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8005b82:	81a3      	strh	r3, [r4, #12]
 8005b84:	f04f 30ff 	mov.w	r0, #4294967295
 8005b88:	e78e      	b.n	8005aa8 <__sflush_r+0x1c>
 8005b8a:	4407      	add	r7, r0
 8005b8c:	eba8 0800 	sub.w	r8, r8, r0
 8005b90:	e7e9      	b.n	8005b66 <__sflush_r+0xda>
 8005b92:	bf00      	nop
 8005b94:	dfbffffe 	.word	0xdfbffffe

08005b98 <_fflush_r>:
 8005b98:	b538      	push	{r3, r4, r5, lr}
 8005b9a:	690b      	ldr	r3, [r1, #16]
 8005b9c:	4605      	mov	r5, r0
 8005b9e:	460c      	mov	r4, r1
 8005ba0:	b913      	cbnz	r3, 8005ba8 <_fflush_r+0x10>
 8005ba2:	2500      	movs	r5, #0
 8005ba4:	4628      	mov	r0, r5
 8005ba6:	bd38      	pop	{r3, r4, r5, pc}
 8005ba8:	b118      	cbz	r0, 8005bb2 <_fflush_r+0x1a>
 8005baa:	6a03      	ldr	r3, [r0, #32]
 8005bac:	b90b      	cbnz	r3, 8005bb2 <_fflush_r+0x1a>
 8005bae:	f7ff f9a9 	bl	8004f04 <__sinit>
 8005bb2:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8005bb6:	2b00      	cmp	r3, #0
 8005bb8:	d0f3      	beq.n	8005ba2 <_fflush_r+0xa>
 8005bba:	6e62      	ldr	r2, [r4, #100]	; 0x64
 8005bbc:	07d0      	lsls	r0, r2, #31
 8005bbe:	d404      	bmi.n	8005bca <_fflush_r+0x32>
 8005bc0:	0599      	lsls	r1, r3, #22
 8005bc2:	d402      	bmi.n	8005bca <_fflush_r+0x32>
 8005bc4:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8005bc6:	f7ff fb92 	bl	80052ee <__retarget_lock_acquire_recursive>
 8005bca:	4628      	mov	r0, r5
 8005bcc:	4621      	mov	r1, r4
 8005bce:	f7ff ff5d 	bl	8005a8c <__sflush_r>
 8005bd2:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8005bd4:	07da      	lsls	r2, r3, #31
 8005bd6:	4605      	mov	r5, r0
 8005bd8:	d4e4      	bmi.n	8005ba4 <_fflush_r+0xc>
 8005bda:	89a3      	ldrh	r3, [r4, #12]
 8005bdc:	059b      	lsls	r3, r3, #22
 8005bde:	d4e1      	bmi.n	8005ba4 <_fflush_r+0xc>
 8005be0:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8005be2:	f7ff fb85 	bl	80052f0 <__retarget_lock_release_recursive>
 8005be6:	e7dd      	b.n	8005ba4 <_fflush_r+0xc>

08005be8 <__swhatbuf_r>:
 8005be8:	b570      	push	{r4, r5, r6, lr}
 8005bea:	460c      	mov	r4, r1
 8005bec:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8005bf0:	2900      	cmp	r1, #0
 8005bf2:	b096      	sub	sp, #88	; 0x58
 8005bf4:	4615      	mov	r5, r2
 8005bf6:	461e      	mov	r6, r3
 8005bf8:	da0d      	bge.n	8005c16 <__swhatbuf_r+0x2e>
 8005bfa:	89a3      	ldrh	r3, [r4, #12]
 8005bfc:	f013 0f80 	tst.w	r3, #128	; 0x80
 8005c00:	f04f 0100 	mov.w	r1, #0
 8005c04:	bf0c      	ite	eq
 8005c06:	f44f 6380 	moveq.w	r3, #1024	; 0x400
 8005c0a:	2340      	movne	r3, #64	; 0x40
 8005c0c:	2000      	movs	r0, #0
 8005c0e:	6031      	str	r1, [r6, #0]
 8005c10:	602b      	str	r3, [r5, #0]
 8005c12:	b016      	add	sp, #88	; 0x58
 8005c14:	bd70      	pop	{r4, r5, r6, pc}
 8005c16:	466a      	mov	r2, sp
 8005c18:	f000 f848 	bl	8005cac <_fstat_r>
 8005c1c:	2800      	cmp	r0, #0
 8005c1e:	dbec      	blt.n	8005bfa <__swhatbuf_r+0x12>
 8005c20:	9901      	ldr	r1, [sp, #4]
 8005c22:	f401 4170 	and.w	r1, r1, #61440	; 0xf000
 8005c26:	f5a1 5300 	sub.w	r3, r1, #8192	; 0x2000
 8005c2a:	4259      	negs	r1, r3
 8005c2c:	4159      	adcs	r1, r3
 8005c2e:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8005c32:	e7eb      	b.n	8005c0c <__swhatbuf_r+0x24>

08005c34 <__smakebuf_r>:
 8005c34:	898b      	ldrh	r3, [r1, #12]
 8005c36:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8005c38:	079d      	lsls	r5, r3, #30
 8005c3a:	4606      	mov	r6, r0
 8005c3c:	460c      	mov	r4, r1
 8005c3e:	d507      	bpl.n	8005c50 <__smakebuf_r+0x1c>
 8005c40:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8005c44:	6023      	str	r3, [r4, #0]
 8005c46:	6123      	str	r3, [r4, #16]
 8005c48:	2301      	movs	r3, #1
 8005c4a:	6163      	str	r3, [r4, #20]
 8005c4c:	b002      	add	sp, #8
 8005c4e:	bd70      	pop	{r4, r5, r6, pc}
 8005c50:	ab01      	add	r3, sp, #4
 8005c52:	466a      	mov	r2, sp
 8005c54:	f7ff ffc8 	bl	8005be8 <__swhatbuf_r>
 8005c58:	9900      	ldr	r1, [sp, #0]
 8005c5a:	4605      	mov	r5, r0
 8005c5c:	4630      	mov	r0, r6
 8005c5e:	f7ff fbb5 	bl	80053cc <_malloc_r>
 8005c62:	b948      	cbnz	r0, 8005c78 <__smakebuf_r+0x44>
 8005c64:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8005c68:	059a      	lsls	r2, r3, #22
 8005c6a:	d4ef      	bmi.n	8005c4c <__smakebuf_r+0x18>
 8005c6c:	f023 0303 	bic.w	r3, r3, #3
 8005c70:	f043 0302 	orr.w	r3, r3, #2
 8005c74:	81a3      	strh	r3, [r4, #12]
 8005c76:	e7e3      	b.n	8005c40 <__smakebuf_r+0xc>
 8005c78:	89a3      	ldrh	r3, [r4, #12]
 8005c7a:	6020      	str	r0, [r4, #0]
 8005c7c:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8005c80:	81a3      	strh	r3, [r4, #12]
 8005c82:	9b00      	ldr	r3, [sp, #0]
 8005c84:	6163      	str	r3, [r4, #20]
 8005c86:	9b01      	ldr	r3, [sp, #4]
 8005c88:	6120      	str	r0, [r4, #16]
 8005c8a:	b15b      	cbz	r3, 8005ca4 <__smakebuf_r+0x70>
 8005c8c:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8005c90:	4630      	mov	r0, r6
 8005c92:	f000 f81d 	bl	8005cd0 <_isatty_r>
 8005c96:	b128      	cbz	r0, 8005ca4 <__smakebuf_r+0x70>
 8005c98:	89a3      	ldrh	r3, [r4, #12]
 8005c9a:	f023 0303 	bic.w	r3, r3, #3
 8005c9e:	f043 0301 	orr.w	r3, r3, #1
 8005ca2:	81a3      	strh	r3, [r4, #12]
 8005ca4:	89a3      	ldrh	r3, [r4, #12]
 8005ca6:	431d      	orrs	r5, r3
 8005ca8:	81a5      	strh	r5, [r4, #12]
 8005caa:	e7cf      	b.n	8005c4c <__smakebuf_r+0x18>

08005cac <_fstat_r>:
 8005cac:	b538      	push	{r3, r4, r5, lr}
 8005cae:	4d07      	ldr	r5, [pc, #28]	; (8005ccc <_fstat_r+0x20>)
 8005cb0:	2300      	movs	r3, #0
 8005cb2:	4604      	mov	r4, r0
 8005cb4:	4608      	mov	r0, r1
 8005cb6:	4611      	mov	r1, r2
 8005cb8:	602b      	str	r3, [r5, #0]
 8005cba:	f7fb fb56 	bl	800136a <_fstat>
 8005cbe:	1c43      	adds	r3, r0, #1
 8005cc0:	d102      	bne.n	8005cc8 <_fstat_r+0x1c>
 8005cc2:	682b      	ldr	r3, [r5, #0]
 8005cc4:	b103      	cbz	r3, 8005cc8 <_fstat_r+0x1c>
 8005cc6:	6023      	str	r3, [r4, #0]
 8005cc8:	bd38      	pop	{r3, r4, r5, pc}
 8005cca:	bf00      	nop
 8005ccc:	2000033c 	.word	0x2000033c

08005cd0 <_isatty_r>:
 8005cd0:	b538      	push	{r3, r4, r5, lr}
 8005cd2:	4d06      	ldr	r5, [pc, #24]	; (8005cec <_isatty_r+0x1c>)
 8005cd4:	2300      	movs	r3, #0
 8005cd6:	4604      	mov	r4, r0
 8005cd8:	4608      	mov	r0, r1
 8005cda:	602b      	str	r3, [r5, #0]
 8005cdc:	f7fb fb55 	bl	800138a <_isatty>
 8005ce0:	1c43      	adds	r3, r0, #1
 8005ce2:	d102      	bne.n	8005cea <_isatty_r+0x1a>
 8005ce4:	682b      	ldr	r3, [r5, #0]
 8005ce6:	b103      	cbz	r3, 8005cea <_isatty_r+0x1a>
 8005ce8:	6023      	str	r3, [r4, #0]
 8005cea:	bd38      	pop	{r3, r4, r5, pc}
 8005cec:	2000033c 	.word	0x2000033c

08005cf0 <_sbrk_r>:
 8005cf0:	b538      	push	{r3, r4, r5, lr}
 8005cf2:	4d06      	ldr	r5, [pc, #24]	; (8005d0c <_sbrk_r+0x1c>)
 8005cf4:	2300      	movs	r3, #0
 8005cf6:	4604      	mov	r4, r0
 8005cf8:	4608      	mov	r0, r1
 8005cfa:	602b      	str	r3, [r5, #0]
 8005cfc:	f7fb fb5e 	bl	80013bc <_sbrk>
 8005d00:	1c43      	adds	r3, r0, #1
 8005d02:	d102      	bne.n	8005d0a <_sbrk_r+0x1a>
 8005d04:	682b      	ldr	r3, [r5, #0]
 8005d06:	b103      	cbz	r3, 8005d0a <_sbrk_r+0x1a>
 8005d08:	6023      	str	r3, [r4, #0]
 8005d0a:	bd38      	pop	{r3, r4, r5, pc}
 8005d0c:	2000033c 	.word	0x2000033c

08005d10 <_init>:
 8005d10:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8005d12:	bf00      	nop
 8005d14:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8005d16:	bc08      	pop	{r3}
 8005d18:	469e      	mov	lr, r3
 8005d1a:	4770      	bx	lr

08005d1c <_fini>:
 8005d1c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8005d1e:	bf00      	nop
 8005d20:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8005d22:	bc08      	pop	{r3}
 8005d24:	469e      	mov	lr, r3
 8005d26:	4770      	bx	lr
